{"version":3,"sources":["webpack:///src/app/pages/notifications-page/notifications.module.ts","webpack:///src/app/pages/notifications-page/notifications.page.ts","webpack:///src/app/pages/notifications-page/notifications.page.html"],"names":["NotificationsPageModule","forChild","path","component","imports","declarations","NotificationsPage","storage","router","zone","userService","accountService","loadingController","notifications","commentIcon","likeIcon","commentVerbage","likeVerbage","userId","getUserId","ionViewDidEnter","create","loading","present","userNotificationsGet","pipe","subscribe","res","forEach","not","isComment","comment","console","log","push","name","userWhoPerformedAction","firstName","lastName","icon","verbage","time","date","postId","fkPostId","userAvi","avi","dismiss","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-notifications-page-notifications-module-es5.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NotificationsPage } from './notifications.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([{ path: '', component: NotificationsPage }]),\r\n  ],\r\n  declarations: [NotificationsPage],\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { AccountsService, UserService } from 'src/app/backend/clients';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'notifications',\r\n  templateUrl: 'notifications.page.html',\r\n  styleUrls: ['notifications.page.scss'],\r\n})\r\nexport class NotificationsPage {\r\n  notifications: any[] = [];\r\n  commentIcon = '../../../assets/UI/comment-icon.svg';\r\n  likeIcon = '../../../assets/UI/liked-icon.svg';\r\n  commentVerbage = 'commented on your post';\r\n  likeVerbage = 'liked your post';\r\n  userId = '';\r\n\r\n  constructor(\r\n    private storage: Storage,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private userService: UserService,\r\n    private accountService: AccountsService,\r\n    private loadingController: LoadingController\r\n  ) {\r\n    this.userId = this.accountService.getUserId();\r\n    this.ionViewDidEnter();\r\n  }\r\n\r\n  async ionViewDidEnter() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n    this.userService.userNotificationsGet().pipe(take(1)).subscribe(async (res) => {\r\n      res.forEach(not => {\r\n        const isComment = not.comment !== '';\r\n        console.log(res)\r\n        this.notifications.push({\r\n          name: `${not.userWhoPerformedAction.firstName} ${not.userWhoPerformedAction.lastName}`,\r\n          icon: isComment ? this.commentIcon : this.likeIcon,\r\n          verbage:  isComment ? this.commentVerbage : this.likeVerbage,\r\n          isComment,\r\n          comment: not.comment,\r\n          time: not.date,\r\n          postId: not.fkPostId,\r\n          userAvi: not.userWhoPerformedAction.avi\r\n        });\r\n      });\r\n      loading.dismiss();\r\n    });\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   for (let i = 0; i < 10; i++) {\r\n  //     this.notifications.push({\r\n  //       name: 'Brendan Giberson',\r\n  //       icon: this.commentIcon,\r\n  //       verbage: this.commentVerbage,\r\n  //       isComment: true,\r\n  //       comment: 'That looks dope!',\r\n  //       time: '10 mins ago',\r\n  //     });\r\n\r\n  //     this.notifications.push({\r\n  //       name: 'Brendan Giberson',\r\n  //       icon: this.likeIcon,\r\n  //       verbage: this.likeVerbage,\r\n  //       isComment: false,\r\n  //       comment: 'That looks dope!',\r\n  //       time: '10 mins ago',\r\n  //     });\r\n  //   }\r\n  // }\r\n}\r\n","<ion-header style=\"background-color:#128C7E\" class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons>\r\n            <ion-back-button defaultHref=\"/tab1\" style=\"color: white;\"></ion-back-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-list class=\"notifications-list\">\r\n    <ion-card *ngFor=\"let item of notifications\">\r\n      <ion-grid class=\"comments-grid\">\r\n        <ion-row style=\"padding-left: 8px;\r\n        padding-top: 8px;\">\r\n          <ion-col>\r\n            <ion-row>\r\n              <ion-col>\r\n                <img\r\n                  [src]=\"item.userAvi\"\r\n                  class=\"user-pic img-center\"\r\n                />\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-col>\r\n                <img [src]=\"item.icon\" />\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\"2.5\">\r\n            <ion-row>\r\n              <ion-col>\r\n                <p>\r\n                  <strong>{{item.name}}</strong> {{item.verbage}}\r\n                  {{item.isComment == true ? \"\\\"\" + item.comment + \"\\\"\": \"\"}}\r\n                </p>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-align-items-end\">\r\n              <ion-col class=\"ion-align-self-end\">\r\n                <ion-note>{{ item.time | dateAgo }}</ion-note>\r\n                <!-- <ion-text color=\"medium\">{{item.time}}</ion-text> -->\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-card>\r\n  </ion-list>\r\n</ion-content>\r\n"]}
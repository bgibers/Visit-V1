{"version":3,"sources":["webpack:///src/app/pages/news-feed/news-feed.module.ts","webpack:///src/app/pages/news-feed/news-feed.page.ts","webpack:///src/app/pages/news-feed/news-feed.page.html"],"names":["NewsFeedPageModule","forChild","path","component","imports","declarations","NewsFeedPage","storage","modalController","zone","cd","loadingController","accountService","postService","router","posts","pageNumber","morePages","filter","selectedUserId","get","then","val","avi","image","create","loading","present","postsPageGet","pipe","subscribe","res","hasNextPage","pageIndex","items","refresh","getPosts","dismiss","err","status","logout","incr","event","Promise","resolve","length","oldposts","oldResLen","i","push","resLen","target","complete","console","log","infiniteScroll","disabled","componentProps","showBackdrop","cssClass","modal","navigationExtras","replaceUrl","skipLocationChange","state","userId","getUserId","run","navigateByUrl","onDidDismiss","dataReturned","data","refreshPosts","detectChanges","openProfile","presentSearchModal","$event","presentMapFilter","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-news-feed-news-feed-module-es5.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NewsFeedPage } from './news-feed.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([{ path: '', component: NewsFeedPage }]),\r\n  ],\r\n  declarations: [NewsFeedPage],\r\n})\r\nexport class NewsFeedPageModule {}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  IonInfiniteScroll,\r\n  IonRefresher,\r\n  LoadingController,\r\n  ModalController,\r\n} from '@ionic/angular';\r\nimport { SearchPage } from '../modals/search/search.page';\r\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\r\nimport { take } from 'rxjs/operators';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'news-feed',\r\n  templateUrl: 'news-feed.page.html',\r\n  styleUrls: ['news-feed.page.scss'],\r\n})\r\nexport class NewsFeedPage {\r\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n\r\n  posts: PostApi[] = [];\r\n  pageNumber = 1;\r\n  morePages = false;\r\n  filter = '';\r\n  selectedUserId = '';\r\n  image: any;\r\n  \r\n\r\n  constructor(\r\n    private storage: Storage,\r\n    public modalController: ModalController,\r\n    private zone: NgZone,\r\n    private cd: ChangeDetectorRef,\r\n    private loadingController: LoadingController,\r\n    private accountService: AccountsService,\r\n    private postService: PostService,\r\n    private router: Router\r\n  ) {\r\n    this.storage.get('image').then((val) => {\r\n      if (val.avi) {\r\n        this.image = val.avi;\r\n      } else {\r\n        this.image = '../../../assets/defaultuser.png';\r\n      }\r\n    });\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n    this.postService\r\n      .postsPageGet(this.pageNumber, this.filter, this.selectedUserId)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        async (res) => {\r\n          this.morePages = res.hasNextPage;\r\n          this.pageNumber = res.pageIndex;\r\n          this.posts = res.items;\r\n\r\n          this.refresh();\r\n          // see if there are more than one page if so get them\r\n          await this.getPosts(1);\r\n          loading.dismiss();\r\n        },\r\n        async (err) => {\r\n          if (err.status === 401) {\r\n            await this.accountService.logout();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  async getPosts(incr: number, event?: any) {\r\n    return new Promise((resolve) => {\r\n      if (this.morePages) {\r\n        this.postService\r\n          .postsPageGet(\r\n            this.pageNumber + incr,\r\n            this.filter,\r\n            this.selectedUserId\r\n          )\r\n          .pipe(take(1))\r\n          .subscribe(\r\n            (res) => {\r\n              this.morePages = res.hasNextPage;\r\n              this.pageNumber = res.pageIndex;\r\n\r\n              if (this.posts.length === 0) {\r\n                this.posts = [];\r\n              } else {\r\n                const oldposts = this.posts;\r\n                this.posts = [];\r\n                const oldResLen = oldposts.length;\r\n                for (let i = 0; i < oldResLen; i++) {\r\n                  this.posts.push(oldposts[i]);\r\n                }\r\n              }\r\n              const resLen = res.items.length;\r\n              for (let i = 0; i < resLen; i++) {\r\n                this.posts.push(res.items[i]);\r\n              }\r\n              if (event) {\r\n                event.target.complete();\r\n              }\r\n              this.refresh();\r\n              resolve('done');\r\n            },\r\n            async (err) => {\r\n              console.log(err);\r\n              if (err.status === 401) {\r\n                await this.accountService.logout();\r\n                resolve('done');\r\n              }\r\n            }\r\n          );\r\n      } else {\r\n        resolve('done');\r\n        this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshPosts(event?: any) {\r\n    this.postService\r\n      .postsPageGet(1, this.filter, this.selectedUserId)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          this.morePages = res.hasNextPage;\r\n          this.pageNumber = res.pageIndex;\r\n          this.posts = res.items;\r\n          if (event) {\r\n            event.target.complete();\r\n          }\r\n        },\r\n        async (err) => {\r\n          console.log(err);\r\n          if (err.status === 401) {\r\n            await this.accountService.logout();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  async presentSearchModal() {\r\n    const modal = await this.modalController.create({\r\n      component: SearchPage,\r\n      componentProps: {},\r\n      showBackdrop: true,\r\n      cssClass: 'search-modal',\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  openProfile() {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      skipLocationChange: true,\r\n      state: {\r\n        userId: this.accountService.getUserId(),\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n\r\n  async presentMapFilter() {\r\n    const modal = await this.modalController.create({\r\n      component: MapFilterPage,\r\n      showBackdrop: true,\r\n      cssClass: 'filter-modal',\r\n      componentProps: {\r\n        filter: this.filter,\r\n      },\r\n    });\r\n\r\n    modal.onDidDismiss().then(async (dataReturned) => {\r\n      if (dataReturned !== null) {\r\n        this.filter = dataReturned.data;\r\n        this.refreshPosts();\r\n        await this.loadingController.dismiss();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  refresh() {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","<ion-header style=\"background-color: #128c7e\">\r\n  <ion-toolbar color=\"#128C7E\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons class=\"ion-justify-content-start\">\r\n            <ion-button\r\n              class=\"ion-justify-content-start circle-pic\"\r\n              (click)=\"openProfile()\"\r\n            >\r\n            <ion-avatar>\r\n              <img src=\"{{image}}\"/>\r\n            </ion-avatar>\r\n             \r\n            </ion-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n        <ion-col class=\"ion-justify-self-bottom\">\r\n          <img\r\n            height=\"60px\"\r\n            width=\"120px\"\r\n            src=\"../../assets/logos/whiteLogo.png\"\r\n          />\r\n        </ion-col>\r\n        <ion-col class=\"ion-justify-content-end\">\r\n          <ion-buttons class=\"ion-justify-content-end\">\r\n            <ion-button\r\n              class=\"ion-justify-content-end\"\r\n              (click)=\"presentSearchModal()\"\r\n            >\r\n              <img\r\n                class=\"img-center\"\r\n                src=\"../../assets/UI/search-outline.svg\"\r\n              />\r\n            </ion-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"false\" color=\"light\">\r\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\r\n    <ion-refresher-content\r\n      pullingText=\"Pull to refresh\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Refreshing...\"\r\n    >\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <post [posts]=\"posts\"></post>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts(1, $event)\">\r\n    <ion-infinite-scroll-content\r\n      loadingSpinner=\"circles\"\r\n      loadingText=\"Getting more posts...\"\r\n    >\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>\r\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\r\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\r\n    <img src=\"../../assets/UI/FilterClosed.svg\" />\r\n  </ion-button>\r\n</ion-fab>\r\n"]}
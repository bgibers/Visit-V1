{"version":3,"sources":["webpack:///src/app/pages/news-feed/news-feed.module.ts","webpack:///src/app/pages/news-feed/news-feed.page.ts","webpack:///src/app/pages/news-feed/news-feed.page.html"],"names":["NewsFeedPageModule","forChild","path","component","imports","declarations","NewsFeedPage","modalController","loadingController","accountService","postService","router","posts","pageNumber","morePages","filter","selectedUserId","postsPageGet","pipe","subscribe","res","hasNextPage","pageIndex","items","err","status","logout","event","console","log","length","oldposts","oldResLen","i","push","resLen","target","complete","infiniteScroll","disabled","create","componentProps","showBackdrop","cssClass","modal","present","navigationExtras","replaceUrl","skipLocationChange","state","userId","getUserId","navigateByUrl","onDidDismiss","then","dataReturned","data","refreshPosts","dismiss","openProfile","presentSearchModal","getPosts","presentMapFilter","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-news-feed-news-feed-module-es5.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NewsFeedPage } from './news-feed.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([{ path: '', component: NewsFeedPage }])\n  ],\n  declarations: [\n    NewsFeedPage\n  ]\n})\nexport class NewsFeedPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonInfiniteScroll, IonRefresher, LoadingController, ModalController } from '@ionic/angular';\nimport { SearchPage } from '../modals/search/search.page';\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\nimport { PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'news-feed',\n  templateUrl: 'news-feed.page.html',\n  styleUrls: ['news-feed.page.scss']\n})\nexport class NewsFeedPage implements OnInit {\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\n  posts: PostApi[] = [];\n  pageNumber = 1;\n  morePages = false;\n  filter = '';\n  selectedUserId = '';\n\n  constructor(public modalController: ModalController,\n              private loadingController: LoadingController,\n              private accountService: AccountsService,\n              private postService: PostService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    // console.log(1);\n    // setInterval(_ => {\n    //   console.log(this.posts);\n    // }, 1000)\n    this.postService.postsPageGet(this.pageNumber, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n      this.morePages = res.hasNextPage;\n      this.pageNumber = res.pageIndex;\n      this.posts = res.items;\n    }, async err => {\n      if (err.status === 401) {\n        await this.accountService.logout();\n      }\n    });\n  }\n\n  getPosts(event?: any) {\n    if (this.morePages) {\n      this.postService.postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n        console.log(res);\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n\n        // TODO The posts shouldn't be overwritten here but rather appended... not working though\n        // this.posts = res.items;\n        if (this.posts.length === 0) {\n          this.posts = [];\n        } else {\n          let oldposts = this.posts;\n          this.posts = [];\n          let oldResLen = oldposts.length;\n            for (let i = 0; i < oldResLen; i++) {\n              this.posts.push(oldposts[i]);\n            }\n        }\n        let resLen = res.items.length;\n      for (let i = 0; i < resLen; i++) {\n        this.posts.push(res.items[i]);\n      }\n        if (event) {\n          event.target.complete();\n        }\n      }, (async err => {\n        console.log(err)\n        if (err.status === 401) {\n          await this.accountService.logout();\n        }\n      }));\n    } else {\n        this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\n      }\n  }\n\n  refreshPosts(event?: any) {\n    this.postService.postsPageGet(1, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n      this.morePages = res.hasNextPage;\n      this.pageNumber = res.pageIndex;\n      this.posts = res.items;\n      if (event) {\n        event.target.complete();\n      }\n    }, (async err => {\n      console.log(err)\n      if (err.status === 401) {\n        await this.accountService.logout();\n      }\n    }));\n  }\n\n  async presentSearchModal() {\n    const modal = await this.modalController.create({\n      component: SearchPage,\n      componentProps: {\n\n      },\n      showBackdrop: true,\n      cssClass: 'search-modal'\n    });\n    return await modal.present();\n  }\n\n  openProfile() {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: this.accountService.getUserId()\n      }\n    };\n    this.router.navigateByUrl('/user-profile', navigationExtras);\n  }\n\n  async presentMapFilter() {\n    const modal = await this.modalController.create({\n      component: MapFilterPage,\n      showBackdrop: true,\n      cssClass: 'filter-modal',\n      componentProps: {\n        filter: this.filter\n      }\n    });\n\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned !== null) {\n        this.filter = dataReturned.data;\n        this.refreshPosts();\n        await this.loadingController.dismiss();\n      }\n    });\n\n    return await modal.present();\n  }\n}\n\n","<ion-header style=\"background-color:#128C7E\">\n  <ion-toolbar color=\"#128C7E\">\n    <ion-grid class=\"header-grid\">\n      <ion-row class=\"ion-align-items-baseline\">\n        <ion-col class=\"ion-justify-content-start\">\n          <ion-buttons class=\"ion-justify-content-start\"> \n            <ion-button class=\"ion-justify-content-start circle-pic\" (click)=\"openProfile()\">\n              <img class=\"img-center circle-pic\" src=\"../../assets/defaultuser.png\">\n            </ion-button>\n          </ion-buttons>\n        </ion-col>\n        <ion-col class=\"ion-justify-self-bottom\"> \n          <img height=\"60px\" width=\"120px\" src=\"../../assets/logos/whiteLogo.png\">\n        </ion-col>\n        <ion-col class=\"ion-justify-content-end\">\n          <ion-buttons class=\"ion-justify-content-end\"> \n            <ion-button class=\"ion-justify-content-end\" (click)=\"presentSearchModal()\">  \n              <img class=\"img-center\" src=\"../../assets/UI/search-outline.svg\" >\n            </ion-button>\n          </ion-buttons>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-toolbar>\n</ion-header>\n<ion-content [fullscreen]=\"false\" color=\"light\">\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\n    <ion-refresher-content\n      pullingText=\"Pull to refresh\"\n      refreshingSpinner=\"circles\"\n      refreshingText=\"Refreshing...\">\n    </ion-refresher-content>\n  </ion-refresher>\n  <post [posts]=\"posts\"></post>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"circles\"\n      loadingText=\"Getting more posts...\">\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n</ion-content>\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\n    <img src=\"../../assets/UI/FilterClosed.svg\">\n  </ion-button>\n</ion-fab>\n"]}
{"version":3,"sources":["./src/app/pages/notifications-page/notifications.module.ts","./src/app/pages/notifications-page/notifications.page.ts","./src/app/pages/notifications-page/notifications.page.html"],"names":[],"mappings":"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","file":"pages-notifications-page-notifications-module-es2017.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NotificationsPage } from './notifications.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([{ path: '', component: NotificationsPage }]),\r\n  ],\r\n  declarations: [NotificationsPage],\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { AccountsService, UserService } from 'src/app/backend/clients';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'notifications',\r\n  templateUrl: 'notifications.page.html',\r\n  styleUrls: ['notifications.page.scss'],\r\n})\r\nexport class NotificationsPage {\r\n  notifications: any[] = [];\r\n  commentIcon = '../../../assets/UI/comment-icon.svg';\r\n  likeIcon = '../../../assets/UI/liked-icon.svg';\r\n  commentVerbage = 'commented on your post';\r\n  likeVerbage = 'liked your post';\r\n  userId = '';\r\n\r\n  constructor(\r\n    private storage: Storage,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private userService: UserService,\r\n    private accountService: AccountsService,\r\n    private loadingController: LoadingController,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this.userId = this.accountService.getUserId();\r\n    // this.ionViewDidEnter();\r\n  }\r\n\r\n  async ionViewDidEnter() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n    await this.refreshNotifications(loading).then(() => {\r\n      this.cd.detectChanges();\r\n    });\r\n    loading.dismiss();\r\n  }\r\n\r\n  refreshNotifications(event?: any) {\r\n    this.notifications = [];\r\n\r\n    return new Promise((resolve) => {\r\n    this.userService.userNotificationsGet().pipe(take(1)).subscribe(async (res) => {\r\n      res.forEach(not => {\r\n        const isComment = not.comment !== '';\r\n        this.notifications.push({\r\n          name: `${not.userWhoPerformedAction.firstName} ${not.userWhoPerformedAction.lastName}`,\r\n          icon: isComment ? this.commentIcon : this.likeIcon,\r\n          verbage:  isComment ? this.commentVerbage : this.likeVerbage,\r\n          isComment,\r\n          comment: not.comment,\r\n          time: not.date,\r\n          postId: not.fkPostId,\r\n          userAvi: not.userWhoPerformedAction.avi\r\n        });\r\n      });\r\n\r\n      if (event.target !== undefined) {\r\n        event.target.complete();\r\n      }\r\n      resolve('done');\r\n    });\r\n  });\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   for (let i = 0; i < 10; i++) {\r\n  //     this.notifications.push({\r\n  //       name: 'Brendan Giberson',\r\n  //       icon: this.commentIcon,\r\n  //       verbage: this.commentVerbage,\r\n  //       isComment: true,\r\n  //       comment: 'That looks dope!',\r\n  //       time: '10 mins ago',\r\n  //     });\r\n\r\n  //     this.notifications.push({\r\n  //       name: 'Brendan Giberson',\r\n  //       icon: this.likeIcon,\r\n  //       verbage: this.likeVerbage,\r\n  //       isComment: false,\r\n  //       comment: 'That looks dope!',\r\n  //       time: '10 mins ago',\r\n  //     });\r\n  //   }\r\n  // }\r\n}\r\n","<ion-header style=\"background-color:#128C7E\" class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons>\r\n            <ion-back-button defaultHref=\"/tab1\" style=\"color: white;\"></ion-back-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshNotifications($event)\">\r\n    <ion-refresher-content\r\n      pullingText=\"Pull to refresh\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Refreshing...\"\r\n    >\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-list class=\"notifications-list\">\r\n    <ion-card *ngFor=\"let item of notifications\">\r\n      <ion-grid class=\"comments-grid\">\r\n        <ion-row style=\"padding-left: 8px;\r\n        padding-top: 8px;\">\r\n          <ion-col>\r\n            <ion-row>\r\n              <ion-col>\r\n                <img\r\n                  [src]=\"item.userAvi\"\r\n                  class=\"user-pic img-center\"\r\n                />\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-col>\r\n                <img [src]=\"item.icon\" />\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\"2.5\">\r\n            <ion-row>\r\n              <ion-col>\r\n                <p>\r\n                  <strong>{{item.name}}</strong> {{item.verbage}}\r\n                  {{item.isComment == true ? \"\\\"\" + item.comment + \"\\\"\": \"\"}}\r\n                </p>\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row class=\"ion-align-items-end\">\r\n              <ion-col class=\"ion-align-self-end\">\r\n                <ion-note>{{ item.time | dateAgo }}</ion-note>\r\n                <!-- <ion-text color=\"medium\">{{item.time}}</ion-text> -->\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-card>\r\n  </ion-list>\r\n</ion-content>\r\n"],"sourceRoot":"webpack:///"}
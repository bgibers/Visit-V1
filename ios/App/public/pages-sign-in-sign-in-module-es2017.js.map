{"version":3,"sources":["./src/app/pages/sign-in/sign-in-routing.module.ts","./src/app/pages/sign-in/sign-in.module.ts","./src/app/pages/sign-in/sign-in.page.ts","./src/app/pages/sign-in/sign-in.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEX;;;AAE5C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAU;KACtB;CACF,CAAC;AAMK,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AAErB;AAEsB;AAEvB;;AAYrC,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBATlB;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,+EAAuB;SACxB;mIAGU,gBAAgB,mBAFZ,wDAAU,aANvB,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,0DAAW;QACX,+EAAuB;6FAId,gBAAgB;cAV5B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,0DAAW;oBACX,+EAAuB;iBACxB;gBACD,YAAY,EAAE,CAAC,wDAAU,CAAC;aAC3B;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AACtB;AACgB;AAExB;;;;;;;;ICEzC,0EACE;IAAA,0EAAuD;IAAC,uDAC1D;IAAA,4DAAM;;;IADoD,0DAC1D;IAD0D,iGAC1D;;;IAHF,wEACE;IAAA,qHACE;IAEJ,qEAAe;;;;IAHc,0DAA4H;IAA5H,8MAA4H;;;IAWzJ,0EACE;IAAA,0EAAuD;IAAC,wFAC1D;IAAA,4DAAM;;ADRP,MAAM,UAAU;IAiBrB,YACS,WAAwB,EACxB,iBAAoC,EACnC,MAAc,EACd,cAA+B;QAHhC,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACnC,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;QApBzC,iBAAY,GAAG,UAAU,CAAC;QAI1B,uBAAkB,GAAG;YACnB,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC5D;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;aACvD;SACF,CAAC;IASE,CAAC;IAEL,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;IACzE,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;YACnD,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,OAAO,CAAC,kDAAkD,CAAC;SACvE,CAAC,CAAC,CAAC;QACJ,MAAM,QAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;YACtD,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK;YACL,QAAQ;SACT,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAM;QACnB,MAAM,UAAU,GAAG;YACjB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC7C,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SAC9B,CAAC;QAErB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAClD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;QAExB,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAErF,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,OAAO,EAAE,CAAC;aACnB;YACD,MAAM,gBAAgB,GAAqB;YACzC,qBAAqB;YACrB,WAAW;YACX,qBAAqB;YACrB,IAAI;aACL,CAAC;YACF,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,MAAM,gBAAgB,GAAqB;YACzC,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE;gBACL,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAC3D,CAAC;;oEA9EU,UAAU;0FAAV,UAAU;QCZvB,iFACE;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,0EACE;QAD4B,sIAAY,iCAAyB,IAAC;QAClE,8EACE;QAAA,0EAA+G;QAC/G,yEACE;QAAA,wHACE;QAIJ,4DAAM;QACR,4DAAW;QACX,8EACE;QAAA,0EAA8H;QAC9H,+EAA0E;QAA1C,qIAAS,wBAAoB,IAAC;QAAC,4DAAW;QAC5E,4DAAW;QACX,0EACI;QAAA,wGACE;QAEN,4DAAM;QACN,0EACE;QAAA,kFAA6F;QAAA,iEAAK;QAAA,4DAAa;QACjH,4DAAM;QACR,4DAAO;QACP,uEACE;QAAA,kFAAyF;QAAzB,uIAAS,kBAAc,IAAC;QAAC,oEAAQ;QAAA,4DAAa;QAChH,4DAAM;QACN,0EACE;QAAA,kFACE;QAAA,2EAAwD;QACxD,iFACF;QAAA,4DAAa;QACb,kFACE;QAAA,2EAAoD;QACpD,gFACF;QAAA,4DAAa;QACf,4DAAM;QAER,4DAAc;;QAxCS,0EAAiB;QAEhC,0DAAuB;QAAvB,oFAAuB;QAIT,0DAAmD;QAAnD,iGAAmD;QAQlC,0DAAqB;QAArB,kFAAqB;QAIzB,0DAAoB;QAApB,kFAAoB;QAKc,0DAA6B;QAA7B,0FAA6B;;6FDXrF,UAAU;cALtB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,qBAAqB;gBAClC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC","file":"pages-sign-in-sign-in-module-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignInPage } from './sign-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignInPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignInPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignInPageRoutingModule } from './sign-in-routing.module';\n\nimport { SignInPage } from './sign-in.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SignInPageRoutingModule\n  ],\n  declarations: [SignInPage]\n})\nexport class SignInPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AccountsService, LoginApiRequest } from 'src/app/backend/clients';\nimport { take } from 'rxjs/operators';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'sign-in',\n  templateUrl: './sign-in.page.html',\n  styleUrls: ['./sign-in.page.scss'],\n})\nexport class SignInPage implements OnInit {\n  passwordType = 'password';\n  loginForm: FormGroup;\n\n\n  validationMessages = {\n    email: [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Please enter a valid email.' }\n    ],\n    password: [\n      { type: 'required', message: 'Password is required.' }\n    ]\n  };\n\n  invalidLogin: boolean;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public loadingController: LoadingController,\n    private router: Router,\n    private accountService: AccountsService\n  ) { }\n\n  togglePasswordMode() {\n    this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\n  }\n\n  ngOnInit() {\n    const email = new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$')\n    ]));\n    const password = new FormControl('', Validators.compose([\n      Validators.required\n    ]));\n    this.loginForm = new FormGroup({\n      email,\n      password\n    });\n  }\n\n  async onSubmit(values) {\n    const loginModel = {\n      userName: this.loginForm.controls.email.value,\n      password: this.loginForm.controls.password.value\n    } as LoginApiRequest;\n\n    const loading = await this.loadingController.create({\n      duration: 2000\n    });\n    await loading.present();\n\n    await this.accountService.login(loginModel.userName, loginModel.password).then(value => {\n\n      if (value === null) {\n        this.invalidLogin = true;\n        loading.dismiss();\n      }\n      const navigationExtras: NavigationExtras = {\n        // replaceUrl: false,\n        // state: {\n        //   userId: value.id\n        // }\n      };\n      loading.dismiss();\n      this.router.navigateByUrl('/tab1', navigationExtras);\n    });\n  }\n\n  openRegister() {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        userName: 'tester'\n      }\n    };\n    this.router.navigateByUrl('/register', navigationExtras);\n  }\n\n}\n","<ion-content no-bounce [scrollY]=\"false\" class=\"form-content\">\n  <h1>Welcome</h1>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">  \n    <ion-item class=\"roundedInput\">\n      <ion-input autocapitalize=\"true\" placeholder=\"Email\" type=\"email\" formControlName=\"email\" required></ion-input>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validationMessages.email\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon> {{ validation.message }}\n          </div>\n        </ng-container>\n      </div>\n    </ion-item>\n    <ion-item class=\"roundedInput\">\n      <ion-input autocapitalize=\"true\" [type]=\"passwordType\" placeholder=\"Password\" formControlName=\"password\" required></ion-input>\n      <ion-icon name=\"eye\" item-right (click)=\"togglePasswordMode()\"></ion-icon>    \n    </ion-item>\n    <div class=\"validation-errors\">\n        <div class=\"error-message\" *ngIf=\"invalidLogin\">\n          <ion-icon name=\"information-circle-outline\"></ion-icon> Incorrect username/password\n        </div>\n    </div>\n    <div class=\"button-div\">\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</ion-button>\n    </div>\n  </form>\n  <div>\n    <ion-button class=\"submit-button\" expand=\"block\"  type=\"submit\" (click)=\"openRegister()\">Register</ion-button>\n  </div>\n  <div class=\"button-div\">\n    <ion-button class=\"facebook-button\" expand=\"block\">\n      <ion-icon  slot=\"start\" name=\"logo-facebook\"></ion-icon>\n      Login with Facebook\n    </ion-button>\n    <ion-button class=\"apple-button\" expand=\"block\">\n      <ion-icon slot=\"start\" name=\"logo-apple\"></ion-icon>\n      Sign in with Apple\n    </ion-button>\n  </div>\n\n</ion-content>\n"],"sourceRoot":"webpack:///"}
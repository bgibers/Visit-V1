{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/backend/clients/api.module.ts","webpack:///src/app/backend/clients/api/accounts.service.ts","webpack:///src/app/backend/clients/api/api.ts","webpack:///src/app/backend/clients/api/blobStorage.service.ts","webpack:///src/app/backend/clients/api/devops.service.ts","webpack:///src/app/backend/clients/api/post.service.ts","webpack:///src/app/backend/clients/api/postTestData.service.ts","webpack:///src/app/backend/clients/api/tag.service.ts","webpack:///src/app/backend/clients/api/user.service.ts","webpack:///src/app/backend/clients/api/userLocation.service.ts","webpack:///src/app/backend/clients/api/userMessage.service.ts","webpack:///src/app/backend/clients/configuration.ts","webpack:///src/app/backend/clients/encoder.ts","webpack:///src/app/backend/clients/index.ts","webpack:///src/app/backend/clients/model/addressFamily.ts","webpack:///src/app/backend/clients/model/callingConventions.ts","webpack:///src/app/backend/clients/model/eventAttributes.ts","webpack:///src/app/backend/clients/model/fieldAttributes.ts","webpack:///src/app/backend/clients/model/genericParameterAttributes.ts","webpack:///src/app/backend/clients/model/layoutKind.ts","webpack:///src/app/backend/clients/model/memberTypes.ts","webpack:///src/app/backend/clients/model/methodAttributes.ts","webpack:///src/app/backend/clients/model/methodImplAttributes.ts","webpack:///src/app/backend/clients/model/modelValidationState.ts","webpack:///src/app/backend/clients/model/models.ts","webpack:///src/app/backend/clients/model/parameterAttributes.ts","webpack:///src/app/backend/clients/model/propertyAttributes.ts","webpack:///src/app/backend/clients/model/securityRuleSet.ts","webpack:///src/app/backend/clients/model/typeAttributes.ts","webpack:///src/app/backend/clients/variables.ts","webpack:///src/app/backend/models/httpConfigInterceptor.ts","webpack:///src/app/backend/services/AuthGuard.service.ts","webpack:///src/app/components/card-flip/card-flip.component.ts","webpack:///src/app/components/card-flip/card-flip.component.html","webpack:///src/app/components/post/post.component.ts","webpack:///src/app/components/post/post.component.html","webpack:///src/app/objects/enums/map-selection-mode.ts","webpack:///src/app/objects/location-json/location.selector.ts","webpack:///src/app/objects/map.ts","webpack:///src/app/pages/add-post-image/add-post-image-routing.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.html","webpack:///src/app/pages/add-post/add-post-routing.module.ts","webpack:///src/app/pages/add-post/add-post.module.ts","webpack:///src/app/pages/add-post/add-post.page.ts","webpack:///src/app/pages/add-post/add-post.page.html","webpack:///src/app/pages/mark-location/mark-location-routing.module.ts","webpack:///src/app/pages/mark-location/mark-location.module.ts","webpack:///src/app/pages/mark-location/mark-location.page.ts","webpack:///src/app/pages/mark-location/mark-location.page.html","webpack:///src/app/pages/modals/add/add-routing.module.ts","webpack:///src/app/pages/modals/add/add.module.ts","webpack:///src/app/pages/modals/add/add.page.ts","webpack:///src/app/pages/modals/add/add.page.html","webpack:///src/app/pages/modals/map-filter/map-filter-routing.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.html","webpack:///src/app/pages/modals/search/search-routing.module.ts","webpack:///src/app/pages/modals/search/search.module.ts","webpack:///src/app/pages/modals/search/search.page.ts","webpack:///src/app/pages/modals/search/search.page.html","webpack:///src/app/pages/user-settings/user-settings-routing.module.ts","webpack:///src/app/pages/user-settings/user-settings.module.ts","webpack:///src/app/pages/user-settings/user-settings.page.ts","webpack:///src/app/pages/user-settings/user-settings.page.html","webpack:///src/app/pages/user-timeline/user-timeline-routing.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","all","slice","webpackAsyncContextKeys","Object","routes","path","redirectTo","pathMatch","children","loadChildren","m","NewsFeedPageModule","canActivate","NotificationsPageModule","SearchPageModule","AddPageModule","MapFilterPageModule","UserProfilePageModule","UserTimelinePageModule","SignInPageModule","RegisterPageModule","PostRegisterAboutPageModule","PostRegisterLocationsPageModule","MarkLocationPageModule","AddPostPageModule","AddPostImagePageModule","CommentsPageModule","UserSettingsPageModule","AppRoutingModule","forRoot","preloadingStrategy","imports","fcm","AppComponent","platform","userService","modalController","alertController","router","zone","myservice","ready","initializeApp","setStyle","style","Default","hide","registerPush","isLoggedIn","navigate","requestPermissions","result","receive","register","getToken","r","console","log","token","err","JSON","stringify","addListener","alert","value","error","notification","title","body","create","header","message","buttons","text","role","handler","dismiss","present","component","showBackdrop","swipeToClose","cssClass","backdropDismiss","modal","url","dis","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","firebaseConfig","declarations","entryComponents","providers","bootstrap","ApiModule","parentModule","http","configurationFactory","ngModule","useFactory","InterceptorSkipHeader","AccountsService","httpClient","basePath","configuration","storage","ngFireAuth","defaultHeaders","set","authSubject","authState","subscribe","user","localStorage","setItem","parse","getItem","getFcmToken","accountUpdateFcmDeviceIdPost","pipe","signOut","removeItem","auth","currentUser","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","window","getIdToken","uid","email","password","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","signInWithCustomToken","get","observe","reportProgress","queryParameters","encoder","undefined","headers","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","consumes","request","params","withCredentials","deviceId","apiKeys","encodeURIComponent","String","blob","httpContentTypeSelected","selectHeaderContentType","FormData","append","firstname","lastname","education","birthLocation","residenceLocation","emailVerified","APIS","BlobStorageService","form","consume","fileName","userId","asset","canConsumeForm","formParams","useForm","convertFormParamsToString","toString","DevopsService","PostService","postId","caption","postType","locationCode","image","page","filter","uri","PostTestDataService","post","TagService","tag","put","responseType","UserService","Authorization","query","UserLocationService","userLocation","UserMessageService","userMessage","Configuration","configurationParameters","username","accessToken","contentTypes","length","type","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","toLowerCase","CustomHttpUrlEncodingCodec","k","replace","v","AddressFamily","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","NUMBER_10","NUMBER_11","NUMBER_12","NUMBER_13","NUMBER_14","NUMBER_15","NUMBER_16","NUMBER_17","NUMBER_18","NUMBER_19","NUMBER_21","NUMBER_22","NUMBER_23","NUMBER_24","NUMBER_25","NUMBER_26","NUMBER_28","NUMBER_29","NUMBER_65536","NUMBER_65537","NUMBER_MINUS_1","CallingConventions","NUMBER_32","NUMBER_64","EventAttributes","NUMBER_512","NUMBER_1024","FieldAttributes","NUMBER_128","NUMBER_256","NUMBER_4096","NUMBER_8192","NUMBER_32768","NUMBER_38144","GenericParameterAttributes","LayoutKind","MemberTypes","NUMBER_191","MethodAttributes","NUMBER_2048","NUMBER_16384","NUMBER_53248","MethodImplAttributes","NUMBER_65535","ModelValidationState","ParameterAttributes","NUMBER_61440","PropertyAttributes","NUMBER_62464","SecurityRuleSet","TypeAttributes","NUMBER_131072","NUMBER_196608","NUMBER_262144","NUMBER_264192","NUMBER_1048576","NUMBER_12582912","BASE_PATH","COLLECTION_FORMATS","TOKEN_KEY","HttpConfigInterceptor","accountService","next","clone","handle","event","status","reason","subHeader","AuthGuard","route","reject","onAuthStateChanged","CardFlipComponent","flipped","PostComponent","postSvc","posts","location","likeIcon","likedIcon","likedByCurrentUser","postsLikePostIdPost","likeCount","navigationExtras","replaceUrl","state","navigateByUrl","fkUserId","MapSelectionMode","LocationSelector","options","getCountries","Countries","forEach","name","push","getStates","States","sort","compare","a","b","comparison","Map","selectedArea","polygonArr","Array","selectedArr","seriesArr","createMap","NONE","selectionMode","runOutsideAngular","worldSeries","usaSeries","chart","autoDispose","geodata","projection","Miller","zoomControl","plusButton","minusButton","tapToActivate","seriesContainer","events","disableType","chartContainer","background","showOnInit","homeButton","on","goHome","icon","padding","width","marginBottom","parent","insertAfter","series","exclude","useGeodata","mapPolygons","template","setupTemplates","setSelectionMode","divName","moveHtmlContainer","polygonTemplate","tooltipText","nonScalingStroke","applyOnClones","strokeOpacity","activeState","states","visited","properties","fill","toVisit","defaultState","ev","data","target","dataItem","dataContext","selectedId","lastSelected","zoomToMapObject","FILTER","resetAllLocations","changeVisitStatus","off","TO_VISIT","locationId","getPolygonById","setState","locationInArray","d","index","indexOf","splice","dispose","AddPostImagePageRoutingModule","forChild","AddPostImagePage","loadingController","modalCtrl","postService","selectedLocation","postText","locationOptions","userImage","getAllLocations","option","trim","startSearch","items","endSearch","filterLocations","duration","loading","postsNewPostForm","res","dismissed","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","getPhoto","quality","allowEditing","resultType","DataUrl","imageUrl","dataUrl","b64toBlob","getUserImage","AddPostPageRoutingModule","AddPostPage","MarkLocationPageRoutingModule","MarkLocationPage","locationRequest","locations","titleTextVisited","titleTextToVisit","subtitleTextVisited","subtitleTextToVisit","displayVisitedText","addMapToDiv","destroyMap","mapLocationsToRequest","accountUpdateLocationsPost","onSubmit","AddPageRoutingModule","AddPage","componentProps","VISITED","markVisitedLocations","markLocationsToVisit","addNewImage","addNewPost","MapFilterPageRoutingModule","MapFilterPage","navParams","closeModal","onClosedData","restFilter","filterSubmit","SearchPageRoutingModule","SearchPage","viewCtrl","people","searchQuery","userSearchQueryGet","users","skipLocationChange","search","UserSettingsPageRoutingModule","UserSettingsPage","avi","birthPlace","residence","aboutForm","controls","accountUpdatePost","accountUpdateProfileImagePost","logout","UserTimelinePageRoutingModule","UserTimelinePage","pageNumber","morePages","selectedUserId","postsPageGet","hasNextPage","pageIndex","oldposts","oldResLen","resLen","complete","infiniteScroll","disabled","getUserId","onDidDismiss","dataReturned","refreshPosts","presentSearchModal","getPosts","presentMapFilter","DateAgoPipe","args","now","Date","toUTCString","seconds","Math","abs","getTime","intervals","day","hour","minute","second","counter","floor","date","month","toLocaleString","getDate","ModalService","modals","close","providedIn","SharedModule","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'post-register-about',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tab1',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/news-feed/news-feed.module').then(m => m.NewsFeedPageModule),\n          canActivate: [AuthGuard]\n      }\n    ],\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'tab2',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/notifications-page/notifications.module').then(m => m.NotificationsPageModule),\n          canActivate: [AuthGuard]\n      }\n    ],\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'search',\n    loadChildren: () => import('./pages/modals/search/search.module').then( m => m.SearchPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'add',\n    loadChildren: () => import('./pages/modals/add/add.module').then( m => m.AddPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'map-filter',\n    loadChildren: () => import('./pages/modals/map-filter/map-filter.module').then( m => m.MapFilterPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-profile',\n    loadChildren: () => import('./pages/user-profile/user-profile.module').then( m => m.UserProfilePageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-timeline',\n    loadChildren: () => import('./pages/user-timeline/user-timeline.module').then( m => m.UserTimelinePageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'sign-in',\n    loadChildren: () => import('./pages/sign-in/sign-in.module').then( m => m.SignInPageModule)\n  },\n  {\n    path: 'register',\n    loadChildren: () => import('./pages/register/register.module').then( m => m.RegisterPageModule)\n  },\n  {\n    path: 'post-register-about',\n    loadChildren: () => import('./pages/post-register-about/post-register-about.module')\n      .then( m => m.PostRegisterAboutPageModule)\n  },\n  {\n    path: 'post-register-locations',\n    loadChildren: () => import('./pages/post-register-locations/post-register-locations.module')\n      .then( m => m.PostRegisterLocationsPageModule),\n      canActivate: [AuthGuard]\n  },\n  {\n    path: 'mark-location',\n    loadChildren: () => import('./pages/mark-location/mark-location.module').then( m => m.MarkLocationPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'add-post',\n    loadChildren: () => import('./pages/add-post/add-post.module').then( m => m.AddPostPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'add-post-image',\n    loadChildren: () => import('./pages/add-post-image/add-post-image.module').then( m => m.AddPostImagePageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'comments',\n    loadChildren: () => import('./pages/comments/comments.module').then( m => m.CommentsPageModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-settings',\n    loadChildren: () => import('./pages/user-settings/user-settings.module').then( m => m.UserSettingsPageModule),\n    canActivate: [AuthGuard]\n  }\n\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\n\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { StatusBar, Style } from '@capacitor/status-bar';\n\nimport { AddPage } from './pages/modals/add/add.page';\nimport { Router } from '@angular/router';\n\nimport { AccountsService } from './backend/clients/api/accounts.service';\nimport { ModalService } from './services/modal.service';\n\nimport { PushNotificationSchema, Token, ActionPerformed, PushNotifications } from '@capacitor/push-notifications';\nimport { FCM } from '@capacitor-community/fcm';\nimport { from } from 'rxjs';\nconst fcm = new FCM();\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  page: string;\n\n  constructor(\n    private platform: Platform,\n    private userService: AccountsService,\n    public modalController: ModalController,\n    public alertController: AlertController,\n    public router: Router,\n    public zone: NgZone,\n    public myservice: ModalService,\n  ) {\n    this.platform.ready().then(() => {\n      this.initializeApp();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      StatusBar.setStyle({style: Style.Default});\n      SplashScreen.hide();\n      this.registerPush();\n\n      if(this.userService.isLoggedIn) { \n          this.router.navigate(['tab1']);\n      } else {\n          this.router.navigate(['sign-in']);\n      }\n    });\n  }\n\n  private registerPush() {\n\n    PushNotifications.requestPermissions().then(result => {\n      if (result.receive === 'granted') {\n        // Register with Apple / Google to receive push via APNS/FCM\n        PushNotifications.register().then(() => \n          from(fcm.getToken().then((r) => {\n            console.log(`FCM Token: ${r.token}`); // ---- showing null.\n          }).catch((err) => {\n            console.log(`FCM Token ERROR: ${JSON.stringify(err)}`);\n          }))\n        );\n      } else {\n        console.log('Push notifications not registered')\n      }\n    });\n\n    PushNotifications.addListener(\n      'registration',\n      (token: Token) => {\n        alert('Push registration success, token: ' + token.value);\n      },\n    );\n\n    PushNotifications.addListener('registrationError', (error: any) => {\n      alert('Error on registration: ' + JSON.stringify(error));\n    });\n\n    PushNotifications.addListener(\n      'pushNotificationReceived',\n      async (notification: PushNotificationSchema) => {\n        console.log(notification.title);\n        this.alert(notification.title, notification.body);\n      }\n    );\n\n    PushNotifications.addListener(\n      'pushNotificationActionPerformed',\n      (notification: ActionPerformed) => {\n        alert('Push action performed: ' + JSON.stringify(notification));\n      },\n    );\n  }\n\n  async alert(title: string, body: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: body,\n      buttons: [\n        {\n          text: 'OKAY',\n          role: 'cancel',\n          handler: () => {\n            alert.dismiss();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  get showFooter() {\n    if (this.router.url === '/sign-in') { return false; }\n    if (this.router.url === '/register') { return false; }\n    if (this.router.url === '/post-register-about') { return false; }\n    if (this.router.url === '/post-register-locations') { return false; }\n    if (this.router.url === '/comments') { return false; }\n    if (this.myservice.dis === false) { return false; }\n    return true;\n  }\n\n  async presentAddModal() {\n    const modal = await this.modalController.create({\n      component: AddPage,\n      showBackdrop: true,\n      swipeToClose: true,\n      cssClass: 'add-modal',\n      backdropDismiss: true\n    });\n    return await modal.present();\n  }\n}\n","<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n  <ion-tabs >\n    <ion-tab-bar slot=\"bottom\" *ngIf=\"showFooter\">\n      <ion-tab-button tab=\"tab1\">\n        <ion-icon name =\"home-outline\"></ion-icon>\n        <ion-label>Home</ion-label>\n      </ion-tab-button>\n  \n      <ion-tab-button tab=\"tab2\">\n        <ion-icon name=\"notifications-outline\"></ion-icon>\n        <ion-label>Notifications</ion-label>\n      </ion-tab-button>\n    </ion-tab-bar>\n  \n  </ion-tabs>\n  <ion-fab horizontal=\"center\" vertical=\"bottom\" *ngIf=\"showFooter\">\n    <ion-fab-button class=\"add-button\" (click)=\"presentAddModal()\">\n      <ion-icon name=\"add\" style=\"height: 50; width: 20;\"></ion-icon>\n    </ion-fab-button> \n  </ion-fab>\n</ion-app>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SearchPageModule} from './pages/modals/search/search.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPageModule } from './pages/modals/add/add.module';\nimport { MapFilterPageModule } from './pages/modals/map-filter/map-filter.module';\nimport { UserTimelinePageModule } from './pages/user-timeline/user-timeline.module';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpConfigInterceptor } from './backend/models/httpConfigInterceptor';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\nimport { AccountsService, UserService, PostService } from './backend/clients';\nimport { MarkLocationPageModule } from './pages/mark-location/mark-location.module';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { LocationSelector } from './objects/location-json/location.selector';\nimport { AddPostPageModule } from './pages/add-post/add-post.module';\nimport { AddPostImagePageModule } from './pages/add-post-image/add-post-image.module';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\nimport { UserSettingsPageModule } from './pages/user-settings/user-settings.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule, IonicModule.forRoot(), IonicStorageModule.forRoot(), AppRoutingModule, SearchPageModule, AddPageModule,\n     HttpClientModule, UserTimelinePageModule, MapFilterPageModule, MarkLocationPageModule, AddPostPageModule, UserSettingsPageModule,\n     AddPostImagePageModule, IonicSelectableModule,\n     AngularFireModule.initializeApp(environment.firebaseConfig),\n     AngularFireAuthModule,\n  ],\n  providers: [\n    AuthGuard,\n    AccountsService,\n    UserService,\n    PostService,\n    LocationSelector,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfigInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { AccountsService } from './api/accounts.service';\nimport { BlobStorageService } from './api/blobStorage.service';\nimport { DevopsService } from './api/devops.service';\nimport { PostService } from './api/post.service';\nimport { PostTestDataService } from './api/postTestData.service';\nimport { TagService } from './api/tag.service';\nimport { UserService } from './api/user.service';\nimport { UserLocationService } from './api/userLocation.service';\nimport { UserMessageService } from './api/userMessage.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    AccountsService,\n    BlobStorageService,\n    DevopsService,\n    PostService,\n    PostTestDataService,\n    TagService,\n    UserService,\n    UserLocationService,\n    UserMessageService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable, BehaviorSubject, from }                                        from 'rxjs';\nimport { switchMap, take, tap } from 'rxjs/operators';\nimport { RegisterRequest } from '../model/registerRequest';\n\nimport { Configuration }                                     from '../configuration';\nimport { MarkLocationsRequest } from '../model/markLocationsRequest';\nimport { BASE_PATH } from 'src/environments/environment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\n\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class AccountsService {\n\n    protected basePath = BASE_PATH;\n    public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n    public configuration = new Configuration();\n    public authSubject = new BehaviorSubject(false);\n    public userData: any;\n\n    constructor(protected httpClient: HttpClient,\n                @Optional()@Inject(BASE_PATH) basePath: string,\n                @Optional() configuration: Configuration,\n                private router: Router,\n                private storage: Storage,\n                private ngFireAuth: AngularFireAuth) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n\n        this.ngFireAuth.authState.subscribe(user => {\n            if (user) {\n              localStorage.setItem('user', JSON.stringify(user));\n              JSON.parse(localStorage.getItem('user'));\n              this.getFcmToken().subscribe(token => {\n                console.log('FCM:' + token)\n                this.accountUpdateFcmDeviceIdPost(token).pipe(take(1)).subscribe();\n              })\n              \n            } else {\n              localStorage.setItem('user', null);\n              JSON.parse(localStorage.getItem('user'));\n            }\n          });\n    }\n\n    public async logout() {\n        return this.ngFireAuth.signOut().then(() => {\n            localStorage.removeItem('user');\n            this.router.navigate(['sign-in']);\n          })\n    }\n\n    get isLoggedIn(): boolean {\n        const user = JSON.parse(localStorage.getItem('user'));\n        return (user !== null && user.emailVerified !== false) ? true : false;\n    }\n\n      // Email verification when new user register\n    SendVerificationMail() {\n        return firebase.auth().currentUser.sendEmailVerification()\n        .then(() => {\n        this.router.navigate(['verify-email']);\n        });\n    }\n\n    get isEmailVerified(): boolean {\n        const user = JSON.parse(localStorage.getItem('user'));\n        return (user.emailVerified !== false) ? true : false;\n      }\n\n    // Recover password\n    PasswordRecover(passwordResetEmail) {\n        return firebase.auth().sendPasswordResetEmail(passwordResetEmail)\n        .then(() => {\n        window.alert('Password reset email has been sent, please check your inbox.');\n        }).catch((error) => {\n        window.alert(error);\n        });\n    }\n\n    async getToken() {\n        try {\n            return await firebase.auth().currentUser.getIdToken();\n        } catch {\n            return '';\n        }\n    }\n\n    getUserId() {\n        return firebase.auth().currentUser.uid;\n    }\n\n      // Sign in with Gmail\n    // GoogleAuth() {\n    //     return this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n    // }\n\n    // Auth providers\n    // https://www.positronx.io/ionic-firebase-authentication-tutorial-with-examples/\n    // AuthLogin(provider) {\n    //     return this.ngFireAuth.auth.signInWithPopup(provider)\n    //     .then((result) => {\n    //     this.ngZone.run(() => {\n    //         this.router.navigate(['dashboard']);\n    //         })\n    //     this.SetUserData(result.user);\n    //     }).catch((error) => {\n    //     window.alert(error)\n    //     })\n    // }\n\n    // Login in with email/password\n    async login(email, password) {\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(async () => {\n            return await firebase.auth().signInWithEmailAndPassword(email, password).then(() =>\n                this.getFcmToken().pipe(take(1)).subscribe(token => this.accountUpdateFcmDeviceIdPost(token))\n            );\n        });\n    }\n\n    public loginWithToken(token) : Observable<any> {\n        return from(firebase.auth().signInWithCustomToken(token).then(() =>\n            this.getFcmToken().pipe(take(1)).subscribe(token => this.accountUpdateFcmDeviceIdPost(token))\n        ));\n    }\n\n    public getFcmToken() {\n        return from(this.storage.get('fcm'));\n    }\n\n    public setFcmToken(token) {\n        return from(this.storage.set('fcm', token));\n    }\n\n    public accountEmailTakenGet(email?: string, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public accountEmailTakenGet(email?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public accountEmailTakenGet(email?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public accountEmailTakenGet(email?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email',  email as string);\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<boolean>('get', `${this.basePath}/account/email_taken`,\n        {\n            params: queryParameters,\n            withCredentials: this.configuration.withCredentials,\n            headers,\n            observe,\n            reportProgress\n        }\n        );\n    }\n\n    public accountUpdateFcmDeviceIdPost(deviceId: string, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public accountUpdateFcmDeviceIdPost(deviceId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public accountUpdateFcmDeviceIdPost(deviceId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public accountUpdateFcmDeviceIdPost(deviceId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling accountUpdateFcmDeviceIdPost.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (Bearer) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<boolean>('post',`${this.basePath}/account/update/fcm/${encodeURIComponent(String(deviceId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public accountRegisterPostForm(body?: RegisterRequest, blob?: Blob, observe?: 'body', reportProgress?: boolean): Observable<string> {\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        return this.httpClient.request<string>('post', `${this.basePath}/account/register`,\n            {\n                body,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public accountUpdateLocationsPost(body?: MarkLocationsRequest, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public accountUpdateLocationsPost(body?: MarkLocationsRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public accountUpdateLocationsPost(body?: MarkLocationsRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public accountUpdateLocationsPost(body?: MarkLocationsRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<boolean>('post', `${this.basePath}/account/update/locations`,\n            {\n                body,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public accountUpdateProfileImagePost(blob?: Blob, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public accountUpdateProfileImagePost(blob?: Blob, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public accountUpdateProfileImagePost(blob?: Blob, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public accountUpdateProfileImagePost(blob?: Blob, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n\n        const body = new FormData();\n        body.append('image', blob);\n\n\n        return this.httpClient.request<boolean>('post', `${this.basePath}/account/update/profile_image`,\n            {\n                body,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    public accountUpdatePost(firstname?: string, lastname?: string, title?: string, education?: string, birthLocation?: string, residenceLocation?: string, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public accountUpdatePost(firstname?: string, lastname?: string, title?: string, education?: string, birthLocation?: string, residenceLocation?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public accountUpdatePost(firstname?: string, lastname?: string, title?: string, education?: string, birthLocation?: string, residenceLocation?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public accountUpdatePost(firstname?: string, lastname?: string, title?: string, education?: string, birthLocation?: string, residenceLocation?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (firstname !== undefined && firstname !== null) {\n            queryParameters = queryParameters.set('Firstname',  firstname as any);\n        }\n        if (lastname !== undefined && lastname !== null) {\n            queryParameters = queryParameters.set('Lastname',  lastname as any);\n        }\n        if (title !== undefined && title !== null) {\n            queryParameters = queryParameters.set('Title',  title as any);\n        }\n        if (education !== undefined && education !== null) {\n            queryParameters = queryParameters.set('Education',  education as any);\n        }\n        if (birthLocation !== undefined && birthLocation !== null) {\n            queryParameters = queryParameters.set('BirthLocation',  birthLocation as any);\n        }\n        if (residenceLocation !== undefined && residenceLocation !== null) {\n            queryParameters = queryParameters.set('ResidenceLocation',  residenceLocation as any);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<boolean>('post', `${this.basePath}/account/update`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n}","export * from './accounts.service';\nimport { AccountsService } from './accounts.service';\nexport * from './blobStorage.service';\nimport { BlobStorageService } from './blobStorage.service';\nexport * from './devops.service';\nimport { DevopsService } from './devops.service';\nexport * from './post.service';\nimport { PostService } from './post.service';\nexport * from './postTestData.service';\nimport { PostTestDataService } from './postTestData.service';\nexport * from './tag.service';\nimport { TagService } from './tag.service';\nexport * from './user.service';\nimport { UserService } from './user.service';\nexport * from './userLocation.service';\nimport { UserLocationService } from './userLocation.service';\nexport * from './userMessage.service';\nimport { UserMessageService } from './userMessage.service';\n// tslint:disable-next-line: max-line-length\nexport const APIS = [AccountsService, BlobStorageService, DevopsService, PostService, PostTestDataService, TagService, UserService, UserLocationService, UserMessageService];\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: import-spacing\n// tslint:disable: max-line-length\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class BlobStorageService {\n\n    protected basePath = 'https://localhost:5001';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     *\n     *\n     * @param fileName\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public storageDeleteFileFileNameGet(fileName: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public storageDeleteFileFileNameGet(fileName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public storageDeleteFileFileNameGet(fileName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public storageDeleteFileFileNameGet(fileName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (fileName === null || fileName === undefined) {\n            throw new Error('Required parameter fileName was null or undefined when calling storageDeleteFileFileNameGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get', `${this.basePath}/storage/DeleteFile/${encodeURIComponent(String(fileName))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     *\n     *\n     * @param fileName\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public storageDownloadFileFileNameGet(fileName: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public storageDownloadFileFileNameGet(fileName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public storageDownloadFileFileNameGet(fileName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public storageDownloadFileFileNameGet(fileName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (fileName === null || fileName === undefined) {\n            throw new Error('Required parameter fileName was null or undefined when calling storageDownloadFileFileNameGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get', `${this.basePath}/storage/DownloadFile/${encodeURIComponent(String(fileName))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     *\n     *\n     * @param userId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public storageListFilesUserIdGet(userId: string, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public storageListFilesUserIdGet(userId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public storageListFilesUserIdGet(userId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public storageListFilesUserIdGet(userId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (userId === null || userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling storageListFilesUserIdGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get', `${this.basePath}/storage/ListFiles/${encodeURIComponent(String(userId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     *\n     *\n     * @param asset\n     * @param fileName\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public storageUploadFilePostForm(asset?: Blob, fileName?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public storageUploadFilePostForm(asset?: Blob, fileName?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public storageUploadFilePostForm(asset?: Blob, fileName?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public storageUploadFilePostForm(asset?: Blob, fileName?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (fileName !== undefined && fileName !== null) {\n            queryParameters = queryParameters.set('fileName',  fileName as any);\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): void; };\n        let useForm = false;\n        const convertFormParamsToString = false;\n        // use FormData to transmit files using content-type \"multipart/form-data\"\n        // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n        useForm = canConsumeForm;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        }\n\n        if (asset !== undefined) {\n            formParams = formParams.append('asset',  asset as any) as any || formParams;\n        }\n\n        return this.httpClient.request<any>('post', `${this.basePath}/storage/UploadFile`,\n            {\n                body: convertFormParamsToString ? formParams.toString() : formParams,\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { Observable }                                        from 'rxjs';\n\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { Configuration }                                     from '../configuration';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class DevopsService {\n\n    protected basePath = BASE_PATH;\n    public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient,\n                @Optional()@Inject(BASE_PATH) basePath: string,\n                @Optional() configuration: Configuration ) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     *\n     *\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public devopsPostTypesPost(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public devopsPostTypesPost(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public devopsPostTypesPost(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public devopsPostTypesPost(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (Bearer) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys['Authorization']) {\n            headers = headers.set('Authorization', this.configuration.apiKeys['Authorization']);\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('post', `${this.basePath}/devops/post_types`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: no-redundant-jsdoc\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { PostPaginatedList } from '../model/postPaginatedList';\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { CreatePostRequest } from '../model/createPostRequest';\nimport { NewPostResponse } from '../model/newPostResponse';\nimport { CommentForPost } from '../model/commentForPost';\nimport { LikeForPost } from '../model/likeForPost';\nimport { PostApiPaginatedList } from '../model/postApiPaginatedList';\nimport { CommentApi } from '../model/commentApi';\nimport { string } from '@amcharts/amcharts4/core';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n\n@Injectable()\nexport class PostService {\n    protected basePath = BASE_PATH;\n    public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient,\n                @Optional()@Inject(BASE_PATH) basePath: string,\n                @Optional() configuration: Configuration ) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param postId\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsCommentPostIdPost(postId: string, body?: CommentApi, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public postsCommentPostIdPost(postId: string, body?: CommentApi, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public postsCommentPostIdPost(postId: string, body?: CommentApi, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public postsCommentPostIdPost(postId: string, body?: CommentApi, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        \n        if (postId === null || postId === undefined) {\n            throw new Error('Required parameter postId was null or undefined when calling postsCommentPostIdPost.');\n        }\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<boolean>('post', `${this.basePath}/posts/comment/${encodeURIComponent(String(postId))}`,\n            {\n                body,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param postId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsCommentsGetPostIdGet(postId: string, observe?: 'body', reportProgress?: boolean): Observable<Array<CommentForPost>>;\n    public postsCommentsGetPostIdGet(postId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<CommentForPost>>>;\n    public postsCommentsGetPostIdGet(postId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<CommentForPost>>>;\n    public postsCommentsGetPostIdGet(postId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (postId === null || postId === undefined) {\n            throw new Error('Required parameter postId was null or undefined when calling postsCommentsGetPostIdGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<CommentForPost>>('get', `${this.basePath}/posts/comments/get/${encodeURIComponent(String(postId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     *\n     *\n     * @param postId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsLikePostIdPost(postId: string, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public postsLikePostIdPost(postId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public postsLikePostIdPost(postId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public postsLikePostIdPost(postId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (postId === null || postId === undefined) {\n            throw new Error('Required parameter postId was null or undefined when calling postsLikePostIdPost.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<boolean>('post', `${this.basePath}/posts/like/${encodeURIComponent(String(postId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     *\n     *\n     * @param postId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsLikesGetPostIdGet(postId: string, observe?: 'body', reportProgress?: boolean): Observable<Array<LikeForPost>>;\n    public postsLikesGetPostIdGet(postId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<LikeForPost>>>;\n    public postsLikesGetPostIdGet(postId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<LikeForPost>>>;\n    public postsLikesGetPostIdGet(postId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (postId === null || postId === undefined) {\n            throw new Error('Required parameter postId was null or undefined when calling postsLikesGetPostIdGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<LikeForPost>>('get', `${this.basePath}/posts/likes/get/${encodeURIComponent(String(postId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n    /**\n     * @param caption\n     * @param postType\n     * @param locationCode\n     * @param image\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsNewPostForm(caption?: string, postType?: string, locationCode?: string, image?: Blob, observe?: 'body', reportProgress?: boolean): Observable<NewPostResponse>;\n    public postsNewPostForm(caption?: string, postType?: string, locationCode?: string, image?: Blob, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<NewPostResponse>>;\n    public postsNewPostForm(caption?: string, postType?: string, locationCode?: string, image?: Blob, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<NewPostResponse>>;\n    public postsNewPostForm(caption?: string, postType?: string, locationCode?: string, image?: Blob, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        let formParams: { append(param: string, value: any): void; };\n        formParams = new FormData();\n\n        const convertFormParamsToString = false;\n\n        if (caption !== undefined) {\n            formParams = formParams.append('Caption',  caption as any) as any || formParams;\n        }\n        if (postType !== undefined) {\n            formParams = formParams.append('PostType',  postType as any) as any || formParams;\n        }\n        if (locationCode !== undefined) {\n            formParams = formParams.append('LocationCode',  locationCode as any) as any || formParams;\n        }\n        if (image !== undefined) {\n            formParams = formParams.append('Image',  image as any) as any || formParams;\n        }\n\n        return this.httpClient.request<NewPostResponse>('post', `${this.basePath}/posts/new`,\n            {\n                body: convertFormParamsToString ? formParams.toString() : formParams,\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param page\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postsPageGet(page: number, filter: string, userId: string, observe?: 'body', reportProgress?: boolean): Observable<PostApiPaginatedList>;\n    public postsPageGet(page: number, filter: string, userId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PostApiPaginatedList>>;\n    public postsPageGet(page: number, filter: string, userId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PostApiPaginatedList>>;\n    public postsPageGet(page: number, filter: string, userId: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (page === null || page === undefined) {\n            throw new Error('Required parameter page was null or undefined when calling postsPageGet.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n\n        let uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}`;\n\n        if (filter !== '' && userId === '') {\n            uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}/filter/${encodeURIComponent(String(filter))}`;\n        } else if (userId !== '' && filter === '') {\n            uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}/user/${encodeURIComponent(String(userId))}`;\n        } else if (userId !== '' && filter !== '') {\n            uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}/${encodeURIComponent(String(filter))}/${encodeURIComponent(String(userId))}`;\n        }\n\n        return this.httpClient.request<PostApiPaginatedList>('get', uri,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers,\n                observe,\n                reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { User } from '../model/user';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class PostTestDataService {\n\n    protected basePath = 'https://localhost:5001';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTestDataGetAll(observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public postTestDataGetAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public postTestDataGetAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public postTestDataGetAll(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<User>>(`${this.basePath}/api/TestData/users`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTestDataPostTest(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public postTestDataPostTest(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public postTestDataPostTest(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public postTestDataPostTest(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.post<string>(`${this.basePath}/api/TestData/post`,\n            null,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Tag } from '../model/tag';\nimport { TagController } from '../model/tagController';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class TagService {\n\n    protected basePath = 'https://localhost:5001';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public tagDeleteTag(id: number, observe?: 'body', reportProgress?: boolean): Observable<Tag>;\n    public tagDeleteTag(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Tag>>;\n    public tagDeleteTag(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Tag>>;\n    public tagDeleteTag(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling tagDeleteTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<Tag>(`${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public tagGetTag(id: number, observe?: 'body', reportProgress?: boolean): Observable<Tag>;\n    public tagGetTag(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Tag>>;\n    public tagGetTag(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Tag>>;\n    public tagGetTag(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling tagGetTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Tag>(`${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public tagGetTagAll(observe?: 'body', reportProgress?: boolean): Observable<Array<Tag>>;\n    public tagGetTagAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Tag>>>;\n    public tagGetTagAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Tag>>>;\n    public tagGetTagAll(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<Tag>>(`${this.basePath}/api/Tag`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param tag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public tagPostTag(tag: Tag, observe?: 'body', reportProgress?: boolean): Observable<TagController>;\n    public tagPostTag(tag: Tag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<TagController>>;\n    public tagPostTag(tag: Tag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<TagController>>;\n    public tagPostTag(tag: Tag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (tag === null || tag === undefined) {\n            throw new Error('Required parameter tag was null or undefined when calling tagPostTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<TagController>(`${this.basePath}/api/Tag`,\n            tag,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param tag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public tagPutTag(id: number, tag: Tag, observe?: 'body', reportProgress?: boolean): Observable<Blob>;\n    public tagPutTag(id: number, tag: Tag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Blob>>;\n    public tagPutTag(id: number, tag: Tag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Blob>>;\n    public tagPutTag(id: number, tag: Tag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling tagPutTag.');\n        }\n\n        if (tag === null || tag === undefined) {\n            throw new Error('Required parameter tag was null or undefined when calling tagPutTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put(`${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n            tag,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { User } from '../model/user';\nimport { UserResponse } from '../model/userResponse';\nimport { BASE_PATH } from 'src/environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { Configuration }                                     from '../configuration';\nimport { SlimUserResponse } from '../model/slimUserResponse';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class UserService {\n\n    protected basePath = BASE_PATH;\n    public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient,\n                @Optional()@Inject(BASE_PATH) basePath: string,\n                @Optional() configuration: Configuration ) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     *\n     *\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n     public userAllGet(observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n     public userAllGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n     public userAllGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n     public userAllGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n         let headers = this.defaultHeaders;\n\n         // authentication (Bearer) required\n         if (this.configuration.apiKeys && this.configuration.apiKeys.Authorization) {\n                        headers = headers.set('Authorization', this.configuration.apiKeys.Authorization);\n         }\n\n         // to determine the Accept header\n         const httpHeaderAccepts: string[] = [\n             'text/plain',\n             'application/json',\n             'text/json'\n         ];\n         const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n         if (httpHeaderAcceptSelected !== undefined) {\n             headers = headers.set('Accept', httpHeaderAcceptSelected);\n         }\n\n         // to determine the Content-Type header\n         const consumes: string[] = [\n         ];\n\n         return this.httpClient.request<Array<User>>('get', `${this.basePath}/User/all`,\n             {\n                 withCredentials: this.configuration.withCredentials,\n                 headers,\n                 observe,\n                 reportProgress\n             }\n         );\n     }\n\n     /**\n      *\n      *\n      * @param id\n      * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n      * @param reportProgress flag to report request and response progress.\n      */\n     public userIdGet(id: string, observe?: 'body', reportProgress?: boolean): Observable<UserResponse>;\n     public userIdGet(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserResponse>>;\n     public userIdGet(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserResponse>>;\n     public userIdGet(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n         if (id === null || id === undefined) {\n             throw new Error('Required parameter id was null or undefined when calling userIdGet.');\n         }\n\n         let headers = this.defaultHeaders;\n\n         // authentication (Bearer) required\n         if (this.configuration.apiKeys && this.configuration.apiKeys.Authorization) {\n                        headers = headers.set('Authorization', this.configuration.apiKeys.Authorization);\n         }\n\n         // to determine the Accept header\n         const httpHeaderAccepts: string[] = [\n             'text/plain',\n             'application/json',\n             'text/json'\n         ];\n         const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n         if (httpHeaderAcceptSelected !== undefined) {\n             headers = headers.set('Accept', httpHeaderAcceptSelected);\n         }\n\n         // to determine the Content-Type header\n         const consumes: string[] = [\n         ];\n\n         return this.httpClient.request<UserResponse>('get', `${this.basePath}/User/${encodeURIComponent(String(id))}`,\n             {\n                 withCredentials: this.configuration.withCredentials,\n                 headers,\n                 observe,\n                 reportProgress\n             }\n         );\n     }\n\n     /**\n      *\n      *\n      * @param query\n      * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n      * @param reportProgress flag to report request and response progress.\n      */\n     public userSearchQueryGet(query: string, observe?: 'body', reportProgress?: boolean): Observable<Array<SlimUserResponse>>;\n     public userSearchQueryGet(query: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<SlimUserResponse>>>;\n     public userSearchQueryGet(query: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<SlimUserResponse>>>;\n     public userSearchQueryGet(query: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n         if (query === null || query === undefined) {\n             throw new Error('Required parameter query was null or undefined when calling userSearchQueryGet.');\n         }\n\n         let headers = this.defaultHeaders;\n\n         // authentication (Bearer) required\n         if (this.configuration.apiKeys && this.configuration.apiKeys.Authorization) {\n                        headers = headers.set('Authorization', this.configuration.apiKeys.Authorization);\n         }\n\n         // to determine the Accept header\n         const httpHeaderAccepts: string[] = [\n             'text/plain',\n             'application/json',\n             'text/json'\n         ];\n         const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n         if (httpHeaderAcceptSelected !== undefined) {\n             headers = headers.set('Accept', httpHeaderAcceptSelected);\n         }\n\n         // to determine the Content-Type header\n         const consumes: string[] = [\n         ];\n\n         return this.httpClient.request<Array<SlimUserResponse>>('get', `${this.basePath}/User/search/${encodeURIComponent(String(query))}`,\n             {\n                 withCredentials: this.configuration.withCredentials,\n                 headers,\n                 observe,\n                 reportProgress\n             }\n         );\n     }\n\n     /**\n      *\n      *\n      * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n      * @param reportProgress flag to report request and response progress.\n      */\n     public userSelfGet(observe?: 'body', reportProgress?: boolean): Observable<SlimUserResponse>;\n     public userSelfGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<SlimUserResponse>>;\n     public userSelfGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<SlimUserResponse>>;\n     public userSelfGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n         let headers = this.defaultHeaders;\n\n         // authentication (Bearer) required\n         if (this.configuration.apiKeys && this.configuration.apiKeys.Authorization) {\n                        headers = headers.set('Authorization', this.configuration.apiKeys.Authorization);\n         }\n\n         // to determine the Accept header\n         const httpHeaderAccepts: string[] = [\n             'text/plain',\n             'application/json',\n             'text/json'\n         ];\n         const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n         if (httpHeaderAcceptSelected !== undefined) {\n             headers = headers.set('Accept', httpHeaderAcceptSelected);\n         }\n\n         // to determine the Content-Type header\n         const consumes: string[] = [\n         ];\n\n         return this.httpClient.request<SlimUserResponse>('get', `${this.basePath}/User/self`,\n             {\n                 withCredentials: this.configuration.withCredentials,\n                 headers,\n                 observe,\n                 reportProgress\n             }\n         );\n     }\n\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { UserLocation } from '../model/userLocation';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class UserLocationService {\n\n    protected basePath = 'https://localhost:5001';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userLocationDeleteUserLocation(id: number, observe?: 'body', reportProgress?: boolean): Observable<UserLocation>;\n    public userLocationDeleteUserLocation(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserLocation>>;\n    public userLocationDeleteUserLocation(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserLocation>>;\n    public userLocationDeleteUserLocation(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userLocationDeleteUserLocation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<UserLocation>(`${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userLocationGetUserLocation(id: number, observe?: 'body', reportProgress?: boolean): Observable<UserLocation>;\n    public userLocationGetUserLocation(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserLocation>>;\n    public userLocationGetUserLocation(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserLocation>>;\n    public userLocationGetUserLocation(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userLocationGetUserLocation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<UserLocation>(`${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userLocationGetUserLocationAll(observe?: 'body', reportProgress?: boolean): Observable<Array<UserLocation>>;\n    public userLocationGetUserLocationAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UserLocation>>>;\n    public userLocationGetUserLocationAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UserLocation>>>;\n    public userLocationGetUserLocationAll(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<UserLocation>>(`${this.basePath}/api/UserLocation`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param userLocation \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userLocationPostUserLocation(userLocation: UserLocation, observe?: 'body', reportProgress?: boolean): Observable<UserLocation>;\n    public userLocationPostUserLocation(userLocation: UserLocation, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserLocation>>;\n    public userLocationPostUserLocation(userLocation: UserLocation, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserLocation>>;\n    public userLocationPostUserLocation(userLocation: UserLocation, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (userLocation === null || userLocation === undefined) {\n            throw new Error('Required parameter userLocation was null or undefined when calling userLocationPostUserLocation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<UserLocation>(`${this.basePath}/api/UserLocation`,\n            userLocation,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param userLocation \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userLocationPutUserLocation(id: number, userLocation: UserLocation, observe?: 'body', reportProgress?: boolean): Observable<Blob>;\n    public userLocationPutUserLocation(id: number, userLocation: UserLocation, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Blob>>;\n    public userLocationPutUserLocation(id: number, userLocation: UserLocation, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Blob>>;\n    public userLocationPutUserLocation(id: number, userLocation: UserLocation, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userLocationPutUserLocation.');\n        }\n\n        if (userLocation === null || userLocation === undefined) {\n            throw new Error('Required parameter userLocation was null or undefined when calling userLocationPutUserLocation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put(`${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n            userLocation,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { UserMessage } from '../model/userMessage';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class UserMessageService {\n\n    protected basePath = 'https://localhost:5001';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userMessageDeleteUserMessage(id: number, observe?: 'body', reportProgress?: boolean): Observable<UserMessage>;\n    public userMessageDeleteUserMessage(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserMessage>>;\n    public userMessageDeleteUserMessage(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserMessage>>;\n    public userMessageDeleteUserMessage(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userMessageDeleteUserMessage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<UserMessage>(`${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userMessageGetUserMessage(id: number, observe?: 'body', reportProgress?: boolean): Observable<UserMessage>;\n    public userMessageGetUserMessage(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserMessage>>;\n    public userMessageGetUserMessage(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserMessage>>;\n    public userMessageGetUserMessage(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userMessageGetUserMessage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<UserMessage>(`${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userMessageGetUserMessageAll(observe?: 'body', reportProgress?: boolean): Observable<Array<UserMessage>>;\n    public userMessageGetUserMessageAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UserMessage>>>;\n    public userMessageGetUserMessageAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UserMessage>>>;\n    public userMessageGetUserMessageAll(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<UserMessage>>(`${this.basePath}/api/UserMessage`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param userMessage \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userMessagePostUserMessage(userMessage: UserMessage, observe?: 'body', reportProgress?: boolean): Observable<UserMessage>;\n    public userMessagePostUserMessage(userMessage: UserMessage, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserMessage>>;\n    public userMessagePostUserMessage(userMessage: UserMessage, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserMessage>>;\n    public userMessagePostUserMessage(userMessage: UserMessage, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (userMessage === null || userMessage === undefined) {\n            throw new Error('Required parameter userMessage was null or undefined when calling userMessagePostUserMessage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'text/plain',\n            'application/json',\n            'text/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<UserMessage>(`${this.basePath}/api/UserMessage`,\n            userMessage,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param userMessage \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userMessagePutUserMessage(id: number, userMessage: UserMessage, observe?: 'body', reportProgress?: boolean): Observable<Blob>;\n    public userMessagePutUserMessage(id: number, userMessage: UserMessage, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Blob>>;\n    public userMessagePutUserMessage(id: number, userMessage: UserMessage, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Blob>>;\n    public userMessagePutUserMessage(id: number, userMessage: UserMessage, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userMessagePutUserMessage.');\n        }\n\n        if (userMessage === null || userMessage === undefined) {\n            throw new Error('Required parameter userMessage was null or undefined when calling userMessagePutUserMessage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put(`${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n            userMessage,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type AddressFamily = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 21 | 22 | 23 | 24 | 25 | 26 | 28 | 29 | 65536 | 65537 | -1;\n\nexport const AddressFamily = {\n    NUMBER_0: 0 as AddressFamily,\n    NUMBER_1: 1 as AddressFamily,\n    NUMBER_2: 2 as AddressFamily,\n    NUMBER_3: 3 as AddressFamily,\n    NUMBER_4: 4 as AddressFamily,\n    NUMBER_5: 5 as AddressFamily,\n    NUMBER_6: 6 as AddressFamily,\n    NUMBER_7: 7 as AddressFamily,\n    NUMBER_8: 8 as AddressFamily,\n    NUMBER_9: 9 as AddressFamily,\n    NUMBER_10: 10 as AddressFamily,\n    NUMBER_11: 11 as AddressFamily,\n    NUMBER_12: 12 as AddressFamily,\n    NUMBER_13: 13 as AddressFamily,\n    NUMBER_14: 14 as AddressFamily,\n    NUMBER_15: 15 as AddressFamily,\n    NUMBER_16: 16 as AddressFamily,\n    NUMBER_17: 17 as AddressFamily,\n    NUMBER_18: 18 as AddressFamily,\n    NUMBER_19: 19 as AddressFamily,\n    NUMBER_21: 21 as AddressFamily,\n    NUMBER_22: 22 as AddressFamily,\n    NUMBER_23: 23 as AddressFamily,\n    NUMBER_24: 24 as AddressFamily,\n    NUMBER_25: 25 as AddressFamily,\n    NUMBER_26: 26 as AddressFamily,\n    NUMBER_28: 28 as AddressFamily,\n    NUMBER_29: 29 as AddressFamily,\n    NUMBER_65536: 65536 as AddressFamily,\n    NUMBER_65537: 65537 as AddressFamily,\n    NUMBER_MINUS_1: -1 as AddressFamily\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type CallingConventions = 1 | 2 | 3 | 32 | 64;\n\nexport const CallingConventions = {\n    NUMBER_1: 1 as CallingConventions,\n    NUMBER_2: 2 as CallingConventions,\n    NUMBER_3: 3 as CallingConventions,\n    NUMBER_32: 32 as CallingConventions,\n    NUMBER_64: 64 as CallingConventions\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type EventAttributes = 0 | 512 | 1024;\n\nexport const EventAttributes = {\n    NUMBER_0: 0 as EventAttributes,\n    NUMBER_512: 512 as EventAttributes,\n    NUMBER_1024: 1024 as EventAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type FieldAttributes = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 16 | 32 | 64 | 128 | 256 | 512 | 1024 | 4096 | 8192 | 32768 | 38144;\n\nexport const FieldAttributes = {\n    NUMBER_0: 0 as FieldAttributes,\n    NUMBER_1: 1 as FieldAttributes,\n    NUMBER_2: 2 as FieldAttributes,\n    NUMBER_3: 3 as FieldAttributes,\n    NUMBER_4: 4 as FieldAttributes,\n    NUMBER_5: 5 as FieldAttributes,\n    NUMBER_6: 6 as FieldAttributes,\n    NUMBER_7: 7 as FieldAttributes,\n    NUMBER_16: 16 as FieldAttributes,\n    NUMBER_32: 32 as FieldAttributes,\n    NUMBER_64: 64 as FieldAttributes,\n    NUMBER_128: 128 as FieldAttributes,\n    NUMBER_256: 256 as FieldAttributes,\n    NUMBER_512: 512 as FieldAttributes,\n    NUMBER_1024: 1024 as FieldAttributes,\n    NUMBER_4096: 4096 as FieldAttributes,\n    NUMBER_8192: 8192 as FieldAttributes,\n    NUMBER_32768: 32768 as FieldAttributes,\n    NUMBER_38144: 38144 as FieldAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type GenericParameterAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;\n\nexport const GenericParameterAttributes = {\n    NUMBER_0: 0 as GenericParameterAttributes,\n    NUMBER_1: 1 as GenericParameterAttributes,\n    NUMBER_2: 2 as GenericParameterAttributes,\n    NUMBER_3: 3 as GenericParameterAttributes,\n    NUMBER_4: 4 as GenericParameterAttributes,\n    NUMBER_8: 8 as GenericParameterAttributes,\n    NUMBER_16: 16 as GenericParameterAttributes,\n    NUMBER_28: 28 as GenericParameterAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type LayoutKind = 0 | 2 | 3;\n\nexport const LayoutKind = {\n    NUMBER_0: 0 as LayoutKind,\n    NUMBER_2: 2 as LayoutKind,\n    NUMBER_3: 3 as LayoutKind\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MemberTypes = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;\n\nexport const MemberTypes = {\n    NUMBER_1: 1 as MemberTypes,\n    NUMBER_2: 2 as MemberTypes,\n    NUMBER_4: 4 as MemberTypes,\n    NUMBER_8: 8 as MemberTypes,\n    NUMBER_16: 16 as MemberTypes,\n    NUMBER_32: 32 as MemberTypes,\n    NUMBER_64: 64 as MemberTypes,\n    NUMBER_128: 128 as MemberTypes,\n    NUMBER_191: 191 as MemberTypes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodAttributes = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 16 | 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16384 | 32768 | 53248;\n\nexport const MethodAttributes = {\n    NUMBER_0: 0 as MethodAttributes,\n    NUMBER_1: 1 as MethodAttributes,\n    NUMBER_2: 2 as MethodAttributes,\n    NUMBER_3: 3 as MethodAttributes,\n    NUMBER_4: 4 as MethodAttributes,\n    NUMBER_5: 5 as MethodAttributes,\n    NUMBER_6: 6 as MethodAttributes,\n    NUMBER_7: 7 as MethodAttributes,\n    NUMBER_8: 8 as MethodAttributes,\n    NUMBER_16: 16 as MethodAttributes,\n    NUMBER_32: 32 as MethodAttributes,\n    NUMBER_64: 64 as MethodAttributes,\n    NUMBER_128: 128 as MethodAttributes,\n    NUMBER_256: 256 as MethodAttributes,\n    NUMBER_512: 512 as MethodAttributes,\n    NUMBER_1024: 1024 as MethodAttributes,\n    NUMBER_2048: 2048 as MethodAttributes,\n    NUMBER_4096: 4096 as MethodAttributes,\n    NUMBER_8192: 8192 as MethodAttributes,\n    NUMBER_16384: 16384 as MethodAttributes,\n    NUMBER_32768: 32768 as MethodAttributes,\n    NUMBER_53248: 53248 as MethodAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodImplAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 32 | 64 | 128 | 256 | 512 | 4096 | 65535;\n\nexport const MethodImplAttributes = {\n    NUMBER_0: 0 as MethodImplAttributes,\n    NUMBER_1: 1 as MethodImplAttributes,\n    NUMBER_2: 2 as MethodImplAttributes,\n    NUMBER_3: 3 as MethodImplAttributes,\n    NUMBER_4: 4 as MethodImplAttributes,\n    NUMBER_8: 8 as MethodImplAttributes,\n    NUMBER_16: 16 as MethodImplAttributes,\n    NUMBER_32: 32 as MethodImplAttributes,\n    NUMBER_64: 64 as MethodImplAttributes,\n    NUMBER_128: 128 as MethodImplAttributes,\n    NUMBER_256: 256 as MethodImplAttributes,\n    NUMBER_512: 512 as MethodImplAttributes,\n    NUMBER_4096: 4096 as MethodImplAttributes,\n    NUMBER_65535: 65535 as MethodImplAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ModelValidationState = 0 | 1 | 2 | 3;\n\nexport const ModelValidationState = {\n    NUMBER_0: 0 as ModelValidationState,\n    NUMBER_1: 1 as ModelValidationState,\n    NUMBER_2: 2 as ModelValidationState,\n    NUMBER_3: 3 as ModelValidationState\n};","export * from './actionContext';\nexport * from './actionContextBooleanFunc';\nexport * from './actionDescriptor';\nexport * from './addressFamily';\nexport * from './asnEncodedData';\nexport * from './assembly';\nexport * from './asymmetricAlgorithm';\nexport * from './attributeRouteInfo';\nexport * from './bindingInfo';\nexport * from './bindingSource';\nexport * from './body';\nexport * from './body1';\nexport * from './callingConventions';\nexport * from './cancellationToken';\nexport * from './claim';\nexport * from './claimsIdentity';\nexport * from './claimsPrincipal';\nexport * from './connectionInfo';\nexport * from './constructorInfo';\nexport * from './controllerActionDescriptor';\nexport * from './controllerContext';\nexport * from './customAttributeData';\nexport * from './customAttributeNamedArgument';\nexport * from './customAttributeTypedArgument';\nexport * from './eventAttributes';\nexport * from './eventInfo';\nexport * from './exception';\nexport * from './fieldAttributes';\nexport * from './fieldInfo';\nexport * from './filterDescriptor';\nexport * from './genericParameterAttributes';\nexport * from './hostString';\nexport * from './httpContext';\nexport * from './httpRequest';\nexport * from './httpResponse';\nexport * from './iActionConstraintMetadata';\nexport * from './iCustomAttributeProvider';\nexport * from './iFilterMetadata';\nexport * from './iIdentity';\nexport * from './iModelBinderFactory';\nexport * from './iModelMetadataProvider';\nexport * from './iObjectModelValidator';\nexport * from './iPAddress';\nexport * from './iPropertyFilterProvider';\nexport * from './iResponseCookies';\nexport * from './iRouter';\nexport * from './iServiceProvider';\nexport * from './iSession';\nexport * from './iUrlHelper';\nexport * from './iValueProviderFactory';\nexport * from './intPtr';\nexport * from './jwtToken';\nexport * from './keySizes';\nexport * from './layoutKind';\nexport * from './like';\nexport * from './location';\nexport * from './locationTag';\nexport * from './loginApiRequest';\nexport * from './markLocationsRequest';\nexport * from './memberInfo';\nexport * from './memberTypes';\nexport * from './methodAttributes';\nexport * from './methodBase';\nexport * from './methodImplAttributes';\nexport * from './methodInfo';\nexport * from './modelError';\nexport * from './modelMetadataBooleanFunc';\nexport * from './modelStateEntry';\nexport * from './modelValidationState';\nexport * from './module';\nexport * from './moduleHandle';\nexport * from './oid';\nexport * from './parameterAttributes';\nexport * from './parameterDescriptor';\nexport * from './parameterInfo';\nexport * from './pathString';\nexport * from './pipeReader';\nexport * from './pipeWriter';\nexport * from './post';\nexport * from './postComment';\nexport * from './postPaginatedList';\nexport * from './postTag';\nexport * from './postType';\nexport * from './postUserLocation';\nexport * from './problemDetailsFactory';\nexport * from './propertyAttributes';\nexport * from './propertyInfo';\nexport * from './publicKey';\nexport * from './queryString';\nexport * from './registerRequest';\nexport * from './routeData';\nexport * from './runtimeFieldHandle';\nexport * from './runtimeMethodHandle';\nexport * from './runtimeTypeHandle';\nexport * from './safeWaitHandle';\nexport * from './securityRuleSet';\nexport * from './slimUserResponse';\nexport * from './stream';\nexport * from './stringStringKeyValuePair';\nexport * from './stringStringValuesKeyValuePair';\nexport * from './structLayoutAttribute';\nexport * from './tag';\nexport * from './tagController';\nexport * from './type';\nexport * from './typeAttributes';\nexport * from './typeInfo';\nexport * from './typeObjectKeyValuePair';\nexport * from './user';\nexport * from './userFollowing';\nexport * from './userLocation';\nexport * from './userMessage';\nexport * from './userResponse';\nexport * from './waitHandle';\nexport * from './webSocketManager';\nexport * from './x500DistinguishedName';\nexport * from './x509Certificate2';\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ParameterAttributes = 0 | 1 | 2 | 4 | 8 | 16 | 4096 | 8192 | 16384 | 32768 | 61440;\n\nexport const ParameterAttributes = {\n    NUMBER_0: 0 as ParameterAttributes,\n    NUMBER_1: 1 as ParameterAttributes,\n    NUMBER_2: 2 as ParameterAttributes,\n    NUMBER_4: 4 as ParameterAttributes,\n    NUMBER_8: 8 as ParameterAttributes,\n    NUMBER_16: 16 as ParameterAttributes,\n    NUMBER_4096: 4096 as ParameterAttributes,\n    NUMBER_8192: 8192 as ParameterAttributes,\n    NUMBER_16384: 16384 as ParameterAttributes,\n    NUMBER_32768: 32768 as ParameterAttributes,\n    NUMBER_61440: 61440 as ParameterAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type PropertyAttributes = 0 | 512 | 1024 | 4096 | 8192 | 16384 | 32768 | 62464;\n\nexport const PropertyAttributes = {\n    NUMBER_0: 0 as PropertyAttributes,\n    NUMBER_512: 512 as PropertyAttributes,\n    NUMBER_1024: 1024 as PropertyAttributes,\n    NUMBER_4096: 4096 as PropertyAttributes,\n    NUMBER_8192: 8192 as PropertyAttributes,\n    NUMBER_16384: 16384 as PropertyAttributes,\n    NUMBER_32768: 32768 as PropertyAttributes,\n    NUMBER_62464: 62464 as PropertyAttributes\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type SecurityRuleSet = 0 | 1 | 2;\n\nexport const SecurityRuleSet = {\n    NUMBER_0: 0 as SecurityRuleSet,\n    NUMBER_1: 1 as SecurityRuleSet,\n    NUMBER_2: 2 as SecurityRuleSet\n};","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type TypeAttributes = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 16 | 24 | 32 | 128 | 256 | 1024 | 2048 | 4096 | 8192 | 16384 | 65536 | 131072 | 196608 | 262144 | 264192 | 1048576 | 12582912;\n\nexport const TypeAttributes = {\n    NUMBER_0: 0 as TypeAttributes,\n    NUMBER_1: 1 as TypeAttributes,\n    NUMBER_2: 2 as TypeAttributes,\n    NUMBER_3: 3 as TypeAttributes,\n    NUMBER_4: 4 as TypeAttributes,\n    NUMBER_5: 5 as TypeAttributes,\n    NUMBER_6: 6 as TypeAttributes,\n    NUMBER_7: 7 as TypeAttributes,\n    NUMBER_8: 8 as TypeAttributes,\n    NUMBER_16: 16 as TypeAttributes,\n    NUMBER_24: 24 as TypeAttributes,\n    NUMBER_32: 32 as TypeAttributes,\n    NUMBER_128: 128 as TypeAttributes,\n    NUMBER_256: 256 as TypeAttributes,\n    NUMBER_1024: 1024 as TypeAttributes,\n    NUMBER_2048: 2048 as TypeAttributes,\n    NUMBER_4096: 4096 as TypeAttributes,\n    NUMBER_8192: 8192 as TypeAttributes,\n    NUMBER_16384: 16384 as TypeAttributes,\n    NUMBER_65536: 65536 as TypeAttributes,\n    NUMBER_131072: 131072 as TypeAttributes,\n    NUMBER_196608: 196608 as TypeAttributes,\n    NUMBER_262144: 262144 as TypeAttributes,\n    NUMBER_264192: 264192 as TypeAttributes,\n    NUMBER_1048576: 1048576 as TypeAttributes,\n    NUMBER_12582912: 12582912 as TypeAttributes\n};","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import {Injectable} from '@angular/core';\nimport {\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse,\n    HttpHandler,\n    HttpEvent,\n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable, throwError, from } from 'rxjs';\nimport { map, catchError, switchMap } from 'rxjs/operators';\n\nimport { AlertController } from '@ionic/angular';\nimport { BASE_PATH } from '../../../environments/environment';\nimport { AccountsService} from '../clients/api/accounts.service';\n\nconst TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n\n    constructor(private alertController: AlertController,\n                private accountService: AccountsService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return from(this.accountService.getToken())\n            .pipe(\n                switchMap(token => {\n                    if (token !== '') {\n                        request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token) });\n                    }\n\n                    // if (!request.headers.has('Content-Type')) {\n                    //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n                    // }\n\n                    return next.handle(request).pipe(\n                        map((event: HttpEvent<any>) => {\n                            if (event instanceof HttpResponse) {\n                                // do nothing for now\n                            }\n                            return event;\n                        }),\n                        catchError((error: HttpErrorResponse) => {\n                            const status =  error.status;\n                            const reason = error;\n\n                            // this.presentAlert(status, reason);\n                            return throwError(error);\n                        })\n                    );\n                })\n            );\n\n\n    }\n\n    async presentAlert(status, reason) {\n        const alert = await this.alertController.create({\n            header: status + ' Error',\n            subHeader: 'Subtitle',\n            message: reason,\n            buttons: ['OK']\n        });\n\n        await alert.present();\n    }\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\nimport firebase from 'firebase/app';\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n\n    constructor(public router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n\n        return new Promise((resolve, reject) => {\n\n            firebase.auth().onAuthStateChanged(user => {\n\n                if (user) {\n\n                    // User is signed in.\n\n                    resolve(true);\n\n                } else {\n\n                    // No user is signed in.\n\n                    resolve(false);\n\n                    this.router.navigate(['sign-in']);\n\n                }\n\n            });\n\n        });\n\n    }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'card-flip',\n  templateUrl: './card-flip.component.html',\n  styleUrls: ['./card-flip.component.scss'],\n})\nexport class CardFlipComponent implements OnInit {\n\n  constructor() { }\n\n  flipped = false;\n\n  ngOnInit() {}\n\n  public flip() {\n    this.flipped = !this.flipped;\n  }\n\n}\n","<div class=\"flip-container\" [class.flipped]=\"flipped\">\n\n\t<div class=\"flipper\">\n\n\t\t<div class=\"front\">\n            <ng-content select=\".card-flip-front\"></ng-content>\n            <ng-content select=\"flip-card\"></ng-content>\n\t\t</div>\n\n\t\t<div class=\"back\">\n\t\t\t<ng-content select=\".card-flip-back\"></ng-content>\n\t\t</div>\n\n\t</div>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Post, PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\n\n@Component({\n  selector: 'post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n\n  constructor(private router: Router,\n              private postSvc: PostService) {\n    // this.route.queryParams.subscribe(params => {\n    //   if (this.router.getCurrentNavigation().extras.state) {\n    //     this.displayNewUser = true;\n    //     this.username = this.router.getCurrentNavigation().extras.state.newUser;\n    //   }\n    // });\n  }\n\n  @Input() posts: PostApi[] = [];\n\n  location = 'Charleston, SC';\n\n  // flipped = false;\n  likeIcon = '../../assets/UI/heart.svg';\n  likedIcon = '../../assets/UI/liked-icon.svg';\n  ngOnInit() {\n  }\n\n  likePost(post: PostApi) {\n    if (!post.likedByCurrentUser) {\n      this.postSvc.postsLikePostIdPost(post.postId.toString()).pipe(take(1)).subscribe();\n      post.likeCount++;\n      post.likedByCurrentUser = true;\n    }\n  }\n\n  viewComments(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        postId: post.postId\n      }\n    };\n    this.router.navigateByUrl('/comments', navigationExtras)\n  }\n\n  openProfile(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        userId: post.fkUserId\n      }\n    };\n    this.router.navigateByUrl('/user-profile', navigationExtras);\n  }\n}\n","<ion-virtual-scroll [items]=\"posts\" approxItemHeight=\"500\">\n  <ion-card *virtualItem=\"let post; let itemBounds = bounds;\"  [ngClass]=\"{\n    'post-image-container': post.postContentLink,\n    'post-container': post.postContentLink === undefined\n  }\">\n    <!-- <card-flip #card> -->\n      <!-- <div class =\"card-flip-front\" *ngIf=\"!card.flipped\"> -->\n        <div class =\"card-flip-front\">\n        <ion-grid class=\"three-col-grid\">\n          <ion-row>\n            <ion-col size=\".6\">\n              <ion-avatar>\n                <img [src]=\"post.fkUser.avi\" (click)=\"openProfile(post)\">\n              </ion-avatar>\n            </ion-col>\n            <ion-col>\n              <ion-row>\n                  <ion-card-title class=\"card-title\">{{post.fkUser.firstname}} {{post.fkUser.lastname}}</ion-card-title>\n              </ion-row>\n              <ion-row>\n                <ion-card-subtitle color=\"medium\">{{post.location.locationName}}</ion-card-subtitle>\n              </ion-row>\n            </ion-col>\n            <ion-col size=\".4\">\n              <ion-buttons >\n                <ion-button class=\"ion-justify-content-center\">\n                  <img src=\"../../assets/UI/optionsDots.svg\">\n                </ion-button>\n              </ion-buttons>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <ion-card-content>\n          <ion-grid>\n            <ion-row class=\"ion-align-items-baseline\">\n              <ion-col>\n                {{ post.postCaption }}\n              </ion-col>\n            </ion-row>\n            <ion-row *ngIf=\"post.postContentLink\">\n              <ion-col>\n                <div>\n                  <img [src]=\"post.postContentLink\" height=\"300\" [alt]=\"post.name\" class=\"rcorners\">\n                </div>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <ion-buttons>\n                  <ion-button class=\"ion-justify-content-center\" (click)=\"likePost(post)\">\n                    <img [src]=\"post.likedByCurrentUser == true ? likedIcon : likeIcon\" >\n                  </ion-button>\n                  {{post.likeCount || 0}}\n                </ion-buttons>\n              </ion-col>\n              <ion-col size=\"4\">\n                <ion-buttons>\n                  <ion-button class=\"ion-justify-content-center\" (click)=\"viewComments(post)\">\n                    <img src=\"../../assets/UI/comments.svg\" >\n                  </ion-button>\n                  {{post.commentCount || 0}}\n                </ion-buttons>\n              </ion-col>\n              <ion-col class=\"align-self-center text-center\">\n                  <ion-note>{{post.postTime | dateAgo}}</ion-note>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n          <ion-buttons>\n            <!-- <ion-button class=\"btn\" flip-card (click)=\"card.flip()\"> -->\n              <ion-button class=\"btn\" (click)=\"viewComments(post)\">\n              View all comments\n            </ion-button>\n          </ion-buttons>\n        </ion-card-content>\n      </div>\n      <!-- <div class =\"card-flip-back\" *ngIf=\"card.flipped\">\n        <ion-card-content>\n          <ion-buttons>\n            <ion-button class=\"btn\" flip-card (click)=\"card.flip()\">\n              Back to post\n            </ion-button>\n          </ion-buttons>\n            <ion-virtual-scroll [items]=\"notifications\">\n            <ion-item  *virtualItem=\"let comment; let itemBounds = bounds;\" class=\"comment\">\n              <ion-grid class=\"comments-grid\">\n                <ion-row>\n                  <ion-col class=\"ion-align-self-center\">\n                    <ion-row class=\"ion-align-items-center\">\n                      <ion-col>\n                        <img src=\"../../../assets/stockPhoto.png\" class=\"user-pic img-center\">\n                      </ion-col>\n                    </ion-row>\n                  </ion-col>\n                  <ion-col size=\"2.2\">\n                    <ion-row>\n                      <ion-col>\n                        <p><strong>{{comment.name}}</strong> {{comment.verbage}} {{comment.isComment == true ? \"\\\"\" + comment.comment + \"\\\"\": \"\"}}</p>\n                      </ion-col>\n                    </ion-row>\n                    <ion-row>\n                      <ion-col>\n                        <ion-text color=\"medium\">{{comment.time}}</ion-text>\n                      </ion-col>\n                    </ion-row>          \n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-item>\n          </ion-virtual-scroll>\n        </ion-card-content>\n      </div> -->\n    <!-- </card-flip> -->\n  </ion-card>\n  </ion-virtual-scroll>","export enum MapSelectionMode {\n    MULTI_VISIT,\n    MULTI_TO_VISIT,\n    VISITED,\n    TO_VISIT,\n    FILTER,\n    NONE\n}\n","import { OnInit, Injectable } from '@angular/core';\nimport stateRaw from './json/states.json';\nimport countryRaw from './json/countries.json';\n\nexport interface Country {\n    id: string;\n    name: string;\n}\n\nexport interface State {\n    id: string;\n    name: string;\n}\n\nexport interface IJsonCountries {\n    Countries: (Country)[];\n}\nexport interface IJsonStates {\n    States: (State)[];\n}\n\n@Injectable()\nexport class LocationSelector implements OnInit {\n    constructor() {}\n\n    ngOnInit() {\n    }\n\n    public getStates() {\n        return stateRaw as IJsonStates;\n    }\n\n    public getCountries() {\n        return countryRaw as IJsonCountries;\n    }\n\n    public getAllLocations(): any[] {\n        const options: Array<{id: string, name: string}> = [];\n\n        this.getCountries().Countries.forEach(e => {\n            const name = e.name;\n            const id = e.id;\n            options.push({id, name});\n        });\n\n        this.getStates().States.forEach(e => {\n            const name = e.name;\n            const id = e.id;\n            options.push({id, name});\n        });\n\n        return options.sort(this.compare);\n    }\n\n    public compare(a, b) {\n        let comparison = 0;\n        if (a.name > b.name) {\n          comparison = 1;\n        } else if (a.name < b.name) {\n          comparison = -1;\n        }\n        return comparison;\n      }\n}\n","import { Component, OnInit, NgZone, OnDestroy, Injectable } from '@angular/core';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport am4geodata_usaLow from '@amcharts/amcharts4-geodata/usaLow';\n// import am4geodata_canadaLow from '@amcharts/amcharts4-geodata/canadaLow';\n// import am4geodata_russiaLow from '@amcharts/amcharts4-geodata/russiaLow';\nimport { MapSelectionMode } from './enums/map-selection-mode';\n\n@Injectable()\nexport class Map {\n  private static instance: Map;\n\n  private chart: am4maps.MapChart;\n  private polygonArr: Array<am4maps.MapPolygon>;\n  public selectedArr: Array<{\n      locationId: string,\n      status: string\n  }>;\n  private seriesArr: Array<am4maps.MapPolygonSeries>;\n  private selectedArea: am4maps.MapPolygon;\n  private selectionMode: MapSelectionMode;\n  private lastSelected: am4maps.MapPolygon;\n  private name: string;\n  private id: any;\n\n  constructor(private zone: NgZone) {\n    this.selectedArea = new am4maps.MapPolygon();\n    this.polygonArr = new Array<am4maps.MapPolygon>();\n    this.selectedArr = new Array();\n    this.seriesArr = new Array<am4maps.MapPolygonSeries>();\n    this.createMap(MapSelectionMode.NONE);\n    this.selectionMode = MapSelectionMode.NONE;\n  }\n\n  // static getInstance(zone: NgZone): Map {\n  //   if (!Map.instance) {\n  //     Map.instance = new Map(zone);\n  //   }\n\n  //   return Map.instance;\n  // }\n\n  get selectedId() {\n    return this.id;\n  }\n\n  set selectedId(id) {\n      this.id = id;\n  }\n\n  get selectedName() {\n    return this.name;\n  }\n\n  set selectedName(name) {\n      this.name = name;\n  }\n\n  async createMap(selectionMode: MapSelectionMode) {\n    am4core.disposeAllCharts();\n    this.zone.runOutsideAngular(() => {\n      let worldSeries: am4maps.MapPolygonSeries;\n      let usaSeries: am4maps.MapPolygonSeries;\n      // let canadaSeries: am4maps.MapPolygonSeries;\n      // let russiaSeries: am4maps.MapPolygonSeries;\n      let chart: am4maps.MapChart;\n\n      am4core.ready(() => {\n        am4core.useTheme(am4themes_animated);\n        am4core.options.autoDispose = true;\n\n        // Create map instance\n        chart = am4core.create(undefined, am4maps.MapChart);\n        chart.geodata = worldLow;\n        chart.projection = new am4maps.projections.Miller();\n        chart.zoomControl = new am4maps.ZoomControl();\n        chart.zoomControl.plusButton.hide();\n        chart.zoomControl.minusButton.hide();\n        chart.tapToActivate = true;\n        chart.seriesContainer.events.disableType('doublehit');\n        chart.chartContainer.background.events.disableType('doublehit');\n        chart.showOnInit = true;\n        // Home button\n        const homeButton = new am4core.Button();\n        homeButton.events.on('hit', () => {\n                  chart.goHome();\n                });\n\n        homeButton.icon = new am4core.Sprite();\n        homeButton.padding(7, 5, 7, 5);\n        homeButton.width = 30;\n        homeButton.icon.path =\n                  'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8';\n        homeButton.marginBottom = 10;\n        homeButton.parent = chart.zoomControl;\n        homeButton.insertAfter(chart.zoomControl.minusButton);\n\n        // Series for World map\n        worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        worldSeries.exclude = ['AQ'];\n        worldSeries.useGeodata = true;\n        this.seriesArr.push(worldSeries);\n        this.polygonArr.push(worldSeries.mapPolygons.template);\n\n        // Series for United States map\n        usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        usaSeries.geodata = am4geodata_usaLow;\n        this.seriesArr.push(usaSeries);\n        this.polygonArr.push(usaSeries.mapPolygons.template);\n\n        // // Series for Canada map\n        // canadaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // canadaSeries.geodata = am4geodata_canadaLow;\n        // this.seriesArr.push(canadaSeries);\n        // this.polygonArr.push(canadaSeries.mapPolygons.template);\n\n        // // Series for Russia map\n        // russiaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // russiaSeries.geodata = am4geodata_russiaLow;\n        // this.seriesArr.push(russiaSeries);\n        // this.polygonArr.push(russiaSeries.mapPolygons.template);\n      });\n\n      this.setupTemplates();\n      this.setSelectionMode(selectionMode);\n      this.chart = chart;\n    });\n  }\n\n  addMapToDiv(selectionMode: MapSelectionMode, divName: string) {\n    this.selectionMode = selectionMode;\n    this.setSelectionMode(this.selectionMode);\n    this.chart.moveHtmlContainer(divName);\n  }\n\n  setupTemplates() {\n    this.polygonArr.forEach(polygonTemplate => {\n        polygonTemplate.tooltipText = '{name}';\n        polygonTemplate.nonScalingStroke = true;\n        polygonTemplate.applyOnClones = true;\n        polygonTemplate.strokeOpacity = 0.5;\n\n        const activeState = polygonTemplate.states.create('active');\n\n        const visited = polygonTemplate.states.create('visited');\n        visited.properties.fill = am4core.color('#128C7E');\n\n        const toVisit = polygonTemplate.states.create('toVisit');\n        toVisit.properties.fill = am4core.color('#F05E23');\n\n        const defaultState = polygonTemplate.states.create('default');\n        defaultState.properties.fill = am4core.color('#d9d9d9');\n\n        polygonTemplate.events.on('hit', ev => {\n            const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n\n            this.selectedArea = data;\n           // this.selectedName = data.name;\n\n            this.selectedId = data.id;\n\n            if (this.lastSelected !== ev.target) {\n              ev.target.series.chart.zoomToMapObject(ev.target);\n              this.lastSelected = ev.target;\n            }\n          });\n    });\n  }\n\n  setSelectionMode(selectionMode: MapSelectionMode) {\n      this.selectionMode = selectionMode;\n      // Allow only one location to be hightlighted at a time\n      if (this.selectionMode === MapSelectionMode.FILTER) {\n        this.polygonArr.forEach(polygonTemplate => {\n          polygonTemplate.events.on('doublehit', ev => {\n              const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n              this.resetAllLocations();\n              this.changeVisitStatus(data.id, 'visited');\n          });\n      });\n      } else if (this.selectionMode !== MapSelectionMode.NONE) {\n        this.polygonArr.forEach(polygonTemplate => {\n            polygonTemplate.events.off('doublehit');\n            polygonTemplate.events.on('doublehit', ev => {\n                const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n                if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n                  this.changeVisitStatus(data.id, 'toVisit');\n                } else {\n                  this.changeVisitStatus(data.id, 'visited');\n                }\n            });\n        });\n      }\n  }\n\n  zoomToLocation(locationId: string) {\n    for (const series of this.seriesArr) {\n      const result = series.getPolygonById(locationId);\n\n      if (result !== undefined) {\n          this.chart.zoomToMapObject(result);\n          break;\n      }\n    }\n  }\n\n  zoomHome() {\n    this.chart.goHome();\n  }\n\n  resetAllLocations() {\n    this.selectedArr.forEach(location =>{\n      for (const series of this.seriesArr) {\n        const result = series.getPolygonById(location.locationId);\n        if (result !== undefined) {\n          result.setState('default');\n        }\n    }\n    });\n  }\n\n  async changeVisitStatus(locationId: string , status: string) {\n    for (const series of this.seriesArr) {\n        const result = series.getPolygonById(locationId);\n\n        if (result !== undefined) {\n            this.selectedArea = result;\n            break;\n        }\n    }\n\n    const locationInArray = this.selectedArr.find(d => d.locationId === locationId);\n    if (locationInArray !== undefined) {\n        const index = this.selectedArr.indexOf(locationInArray, 0);\n        if (index > -1) {\n            this.selectedArr.splice(index, 1);\n            this.selectedArea.setState('default');\n        }\n    } else {\n        if (status === 'visited') {\n            this.selectedArea.setState('visited');\n          } else if (status === 'toVisit') {\n            this.selectedArea.setState('toVisit');\n          }\n        this.selectedArr.push({locationId, status});\n    }\n  }\n\n  destroyMap() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostImagePage } from './add-post-image.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostImagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostImagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostImagePageRoutingModule } from './add-post-image-routing.module';\n\nimport { AddPostImagePage } from './add-post-image.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostImagePageRoutingModule,\n    IonicSelectableModule\n  ],\n  declarations: [AddPostImagePage]\n})\nexport class AddPostImagePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {  CameraResultType, Photo, Camera } from '@capacitor/camera';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post-image',\n  templateUrl: './add-post-image.page.html',\n  styleUrls: ['./add-post-image.page.scss'],\n})\nexport class AddPostImagePage implements OnInit {\n\n  public selectedLocation: {id: string, name: string} = undefined;\n  public postText: string = undefined;\n  public locationOptions: {id: string, name: string}[] = [];\n  public userImage = '../../../assets/UI/clickToUpload.jpg';\n  image: Photo;\n  blob: Blob;\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) { }\n\n  ngOnInit() {\n   this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter(option => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000\n    });\n    await loading.present();\n\n    this.postService.postsNewPostForm(this.postText, 'image', this.selectedLocation.id, this.blob).pipe(take(1)).subscribe((res) => {\n      loading.dismiss();\n      this.dismiss();\n    }, (err) => {\n      this.error = true;\n      loading.dismiss();\n    });\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true\n    });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n}\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n}","<ion-content no-bounce>\n  <h1>Upload Image</h1>\n    <h3>Everyone loves a nice travel related photo!</h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n            <div>\n              <img (click)=\"getUserImage()\" height=\"300\" [src]=\"userImage\" class=\"rcorners\">\n            </div>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea [(ngModel)]=\"postText\" rows=\"10\" placeholder=\"Caption*\" maxlength=\"250\" autocapitalize=\"true\" required></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\">\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error when creating post\n      </div>\n  </div>\n    <div class=\"button-div\">\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"post()\" [disabled]=\"!postText && selectedLocation !== undefined\">Add post</ion-button>\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"dismiss()\">Cancel</ion-button>\n    </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostPage } from './add-post.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\n\nimport { AddPostPage } from './add-post.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostPageRoutingModule,\n    IonicSelectableModule\n  ],\n  declarations: [AddPostPage]\n})\nexport class AddPostPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { CreatePostRequest } from 'src/app/backend/clients/model/createPostRequest';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.page.html',\n  styleUrls: ['./add-post.page.scss'],\n})\nexport class AddPostPage implements OnInit {\n  public selectedLocation: {id: string, name: string} = undefined;\n  public postText: string = undefined;\n  public locationOptions: {id: string, name: string}[] = [];\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) { }\n\n  ngOnInit() {\n   this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter(option => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000\n    });\n    await loading.present();\n\n    this.postService.postsNewPostForm(this.postText, 'text', this.selectedLocation.id).pipe(take(1)).subscribe((res) => {\n      loading.dismiss();\n      this.dismiss();\n    }, (err) => {\n      this.error = true;\n      loading.dismiss();\n    });\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true\n    });\n  }\n}\n","<ion-content no-bounce>\n  <h1>Create Post</h1>\n    <h3>Looking for travel advice? Want to share something interesting about a destination? Let's hear it!</h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea [(ngModel)]=\"postText\" rows=\"10\" placeholder=\"Travel related content*\" maxlength=\"250\" autocapitalize=\"true\" required></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\">\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error when creating post\n      </div>\n  </div>\n    <div class=\"button-div\">\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"post()\" [disabled]=\"!postText && !selectedLocation\">Add post</ion-button>\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"dismiss()\">Cancel</ion-button>\n    </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarkLocationPage } from './mark-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MarkLocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MarkLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MarkLocationPageRoutingModule } from './mark-location-routing.module';\n\nimport { MarkLocationPage } from './mark-location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MarkLocationPageRoutingModule\n  ],\n  declarations: [MarkLocationPage]\n})\nexport class MarkLocationPageModule {}\n","import { Component, Input, NgZone } from '@angular/core';\nimport { AccountsService, MarkLocationsRequest } from 'src/app/backend/clients';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { Map } from 'src/app/objects/map';\nimport { ModalController } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'mark-location',\n  templateUrl: './mark-location.page.html',\n  styleUrls: ['./mark-location.page.scss'],\n})\nexport class MarkLocationPage {\n\n  // Data passed in by componentProps\n  @Input() selectionMode: MapSelectionMode;\n  public locationRequest = {\n    locations: {},\n  } as MarkLocationsRequest;\n  private map: Map;\n  public titleTextVisited = 'Where have you visited?';\n  public titleTextToVisit = 'Bucketlist';\n  public subtitleTextVisited = `Show your friends (and yourself) where you've been!`;\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\n  public displayVisitedText = true;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private zone: NgZone,\n    private accountService: AccountsService) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'mark-map');\n    if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n      this.displayVisitedText = false;\n    }\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  mapLocationsToRequest() {\n    this.map.selectedArr.forEach((location) => {\n      this.locationRequest.locations[location.locationId] = location.status;\n    });\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true\n    });\n  }\n\n  onSubmit() {\n    this.mapLocationsToRequest();\n    this.accountService\n      .accountUpdateLocationsPost(this.locationRequest)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          this.dismiss();\n        },\n        // (error) => {\n        //   this.hasError = true;\n        //   this.error = 'An unexpected error has occurred.';\n        // }\n      );\n  }\n\n}\n","<ion-content no-bounce>\n  <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\n  <h3>Click a location on the map to zoom to it. Double click the location to select/deselect it.</h3>\n  <div id=\"mark-map\" class=\"chartdiv\"></div>\n  <div class=\"button-div\">\n    <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"onSubmit()\">Update my map</ion-button>\n    <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" (click)=\"dismiss()\">Cancel</ion-button>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPageRoutingModule } from './add-routing.module';\n\nimport { AddPage } from './add.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPageRoutingModule\n  ],\n  declarations: [AddPage]\n})\nexport class AddPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { ModalController } from '@ionic/angular';\nimport { MarkLocationPage } from '../../mark-location/mark-location.page';\nimport { AddPostPage } from '../../add-post/add-post.page';\nimport { AddPostImagePage } from '../../add-post-image/add-post-image.page';\n\n@Component({\n  selector: 'add-modal',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage {\n\n  constructor(\n    public router: Router,\n    private modalCtrl: ModalController\n    ) { }\n\n  async markLocationsToVisit() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.TO_VISIT\n      }\n    });\n    return await modal.present();\n  }\n\n  async markVisitedLocations() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.VISITED\n      }\n    });\n    return await modal.present();\n  }\n\n  async addNewPost() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostPage,\n      componentProps: {\n      }\n    });\n    return await modal.present();\n  }\n\n\n  async addNewImage() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostImagePage,\n      componentProps: {\n      }\n    });\n    return await modal.present();\n  }\n}\n","<ion-content lines=\"none\" [scrollY]=\"true\">\n  <ion-item lines=\"none\"><b>Mark Location</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/visitedIcon.svg\">\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markVisitedLocations()\"><b>Visited</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/toVisitIcon.svg\">\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markLocationsToVisit()\"><b>Wants to visit</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-item lines=\"none\"><b>Add Post</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/pictureIcon.svg\">\n        </ion-col>\n        <ion-col (click)=\"addNewImage()\" size=\"10\"><b>Image</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/postIcon.svg\">\n        </ion-col>\n        <ion-col (click)=\"addNewPost()\" size=\"10\"><b>Post</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapFilterPage } from './map-filter.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapFilterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapFilterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapFilterPageRoutingModule } from './map-filter-routing.module';\n\nimport { MapFilterPage } from './map-filter.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MapFilterPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    MapFilterPage\n  ]\n})\nexport class MapFilterPageModule {}\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { Map } from '../../../objects/map';\nimport { MapSelectionMode } from '../../../objects/enums/map-selection-mode';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'map-filter',\n  templateUrl: './map-filter.page.html',\n  styleUrls: ['./map-filter.page.scss'],\n})\nexport class MapFilterPage {\n  private map: Map;\n  public selectionMode: MapSelectionMode = MapSelectionMode.FILTER;\n  public filter = '';\n  public selectedLocation: string;\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private zone: NgZone,\n    private navParams: NavParams) {\n  }\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'filter-map');\n    this.filter = this.navParams.data.filter;\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  async restFilter() {\n    this.filter = '';\n    await this.closeModal();\n  }\n\n  async filterSubmit() {\n    if (this.map.selectedArr.length > 0) {\n      this.filter = this.map.selectedArr[0].locationId;\n    }\n    await this.closeModal();\n  }\n\n  async closeModal() {\n    const loading = await this.loadingController.create({\n      duration: 2000\n    });\n    await loading.present();\n    const onClosedData = this.filter;\n    await this.modalController.dismiss(onClosedData);\n  }\n}\n","<ion-content [scrollY]=\"false\">\n    <ion-searchbar spellcheck=\"true\" showCancelButton=\"true\"></ion-searchbar>\n    <div id=\"filter-map\" class=\"chartdiv\" onload=\"onLoad()\"></div>\n    <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-button color=\"medium\" expand=\"block\"  (click)=\"restFilter()\">Reset</ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button class=\"filter-button\" expand=\"block\" (click)=\"filterSubmit()\">Filter</ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SearchPageRoutingModule\n  ],\n  declarations: [SearchPage]\n})\nexport class SearchPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from 'src/app/backend/clients';\nimport { take } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { SlimUserResponse } from 'src/app/backend/clients/model/slimUserResponse';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit {\n\n  constructor(public viewCtrl: ModalController,\n              public userService: UserService,\n              private router: Router) {}\n\n  people: BehaviorSubject<SlimUserResponse[]> = new BehaviorSubject([]);\n  searchQuery = '';\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.userService.userSearchQueryGet(this.searchQuery).pipe(take(1)).subscribe(users => {\n      this.people.next(users);\n    });\n  }\n\n  goToProfile(user: SlimUserResponse) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: false,\n      state: {\n        userId: user.id\n      }\n    };\n    const onClosedData = user.id;\n    this.viewCtrl.dismiss(onClosedData);\n    this.router.navigateByUrl('/user-profile', navigationExtras);\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n","<ion-toolbar>\n  <ion-buttons slot=\"end\">\n    <ion-button large (click)=\"dismiss()\" slot=\"end\">\n      <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n</ion-toolbar>\n\n<ion-searchbar spellcheck=\"true\" (search)=\"search()\" [(ngModel)]=\"searchQuery\"></ion-searchbar>\n<ion-content>\n  <ion-virtual-scroll [items]=\"people | async\">\n    <ion-card (click)=\"goToProfile(item)\" *virtualItem=\"let item; let itemBounds = bounds;\">\n      <ion-grid class=\"search-grid\">\n        <ion-row>\n          <ion-col class=\"ion-align-self-center\">\n            <ion-row class=\"ion-align-items-center\">\n              <ion-col>\n                <img [src]=\"item.avi\" class=\"user-pic img-center\">\n              </ion-col>\n            </ion-row>\n          </ion-col>\n          <ion-col size=\"1.5\" class=\"ion-align-self-center\"> \n            <ion-row>\n              <ion-col>\n                <ion-text color=\"dark\">{{item.firstName}} {{item.lastName}}</ion-text>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <ion-text>{{item.residenceLocation}}</ion-text>\n              </ion-col>\n            </ion-row>          \n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-card>\n  </ion-virtual-scroll>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserSettingsPage } from './user-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserSettingsPageRoutingModule } from './user-settings-routing.module';\n\nimport { UserSettingsPage } from './user-settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UserSettingsPageRoutingModule\n  ],\n  declarations: [UserSettingsPage]\n})\nexport class UserSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Photo, Camera, CameraResultType } from '@capacitor/camera';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport { AccountsService, RegisterRequest, UserResponse } from 'src/app/backend/clients';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.page.html',\n  styleUrls: ['./user-settings.page.scss'],\n})\nexport class UserSettingsPage implements OnInit {\n\n  userImage = '../../../assets/UI/profilePicUpload.svg';\n  aboutForm: FormGroup;\n  image: Photo;\n  blob: Blob = undefined;\n  user: UserResponse;\n \n  constructor(\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    private navParams: NavParams,\n    private modalController: ModalController,\n    private accountService: AccountsService\n  ) {\n    this.user = this.navParams.data.user;\n    this.userImage = this.user.avi;\n  }\n\n  ngOnInit() {\n    const birthPlace = new FormControl('');\n    const residence = new FormControl('');\n    const education = new FormControl('');\n    const title = new FormControl('');\n    this.aboutForm = new FormGroup({\n      birthPlace,\n      residence,\n      education,\n      title\n    });\n   }\n\n  async onSubmit() {\n    const loading = await this.loadingController.create({\n      duration: 2000\n    });\n    await loading.present();\n\n    var title = this.aboutForm.controls.title.value === '' ? this.user.title : this.aboutForm.controls.title.value;\n    var education = this.aboutForm.controls.education.value === '' ? this.user.education : this.aboutForm.controls.education.value;\n    var birthPlace = this.aboutForm.controls.birthPlace.value === '' ? this.user.birthLocation : this.aboutForm.controls.birthPlace.value;\n    var residence = this.aboutForm.controls.residence.value === '' ? this.user.residenceLocation : this.aboutForm.controls.residence.value;\n\n    // todo create a forkjoin or something here to make these run together\n    this.accountService.accountUpdatePost(this.user.firstname, this.user.lastname, \n      title, education, birthPlace, residence)\n      .pipe(take(1)).subscribe(async res => {\n        if (this.blob !== undefined) {\n          this.accountService.accountUpdateProfileImagePost(this.blob).pipe(take(1)).subscribe(res => {})\n        }\n        await loading.dismiss();\n        this.dismiss();\n      });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n\n  async logout() {\n    await this.accountService.logout();\n    this.dismiss();\n  }\n}","\n<ion-content no-bounce>\n  <ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"secondary\">\n          <ion-button color=\"dark\" (click)=\"dismiss()\">\n            <ion-icon name=\"arrow-back\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button color=\"dark\" (click)=\"logout()\">\n            <ion-icon name=\"log-out-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n  <h1>Update profile</h1>\n  <form [formGroup]=\"aboutForm\" (ngSubmit)=\"onSubmit()\">  \n    <ion-grid>\n      <ion-row>\n        <ion-col size=\"3\">\n          <ion-avatar>\n            <img (click)=\"getUserImage()\" [src]=\"userImage\">\n          </ion-avatar>\n        </ion-col>\n        <ion-col>\n         <h3>Change your profile pic</h3>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"bottomRow\">\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label position=\"floating\">Birthplace</ion-label>\n            <ion-input autocapitalize=\"true\" [placeholder]=\"user.birthLocation\" type=\"text\" formControlName=\"birthPlace\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"bottomRow\">\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label position=\"floating\">Current Residence</ion-label>\n            <ion-input autocapitalize=\"true\" [placeholder]=\"user.residenceLocation\" type=\"text\" formControlName=\"residence\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"bottomRow\"> \n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label position=\"floating\">Education</ion-label>\n            <ion-input autocapitalize=\"true\" [placeholder]=\"user.education\" type=\"text\" formControlName=\"education\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"bottomRow\">\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label position=\"floating\">Title or Employment</ion-label>\n            <ion-input autocapitalize=\"true\" [placeholder]=\"user.title\" type=\"text\" formControlName=\"title\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"button-div\">\n      <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\" >Update</ion-button>\n    </div>\n  </form>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserTimelinePage } from './user-timeline.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserTimelinePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserTimelinePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserTimelinePageRoutingModule } from './user-timeline-routing.module';\n\nimport { UserTimelinePage } from './user-timeline.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    UserTimelinePageRoutingModule\n  ],\n  declarations: [UserTimelinePage]\n})\nexport class UserTimelinePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonInfiniteScroll, LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { SearchPage } from '../modals/search/search.page';\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\nimport { PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'user-timeline',\n  templateUrl: './user-timeline.page.html',\n  styleUrls: ['./user-timeline.page.scss'],\n})\nexport class UserTimelinePage implements OnInit {\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\n  posts: PostApi[] = [];\n  pageNumber = 1;\n  morePages = false;\n  filter = '';\n  selectedUserId = '';\n\n  constructor(public modalController: ModalController,\n              private loadingController: LoadingController,\n              private accountService: AccountsService,\n              private postService: PostService,\n              private navParams: NavParams,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.selectedUserId = this.navParams.data.userId;\n    this.postService.postsPageGet(this.pageNumber, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n      this.morePages = res.hasNextPage;\n      this.pageNumber = res.pageIndex;\n      this.posts = res.items;\n    });\n  }\n\n  ionViewWillEnter() {\n    this.selectedUserId = this.navParams.data.userId;\n  }\n\n  getPosts(event?: any) {\n    if (this.morePages) {\n      this.postService.postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n\n        // TODO The posts shouldn't be overwritten here but rather appended... not working though\n        if (this.posts.length === 0) {\n          this.posts = [];\n        } else {\n          let oldposts = this.posts;\n          this.posts = [];\n          let oldResLen = oldposts.length;\n            for (let i = 0; i < oldResLen; i++) {\n              this.posts.push(oldposts[i]);\n            }\n        }\n        let resLen = res.items.length;\n      for (let i = 0; i < resLen; i++) {\n        this.posts.push(res.items[i]);\n      }\n        // this.posts = res.items;\n        if (event) {\n          event.target.complete();\n        }\n      });\n    } else {\n        this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\n      }\n  }\n\n  refreshPosts(event?: any) {\n    this.postService.postsPageGet(1, this.filter, this.selectedUserId).pipe(take(1)).subscribe(res => {\n      this.morePages = res.hasNextPage;\n      this.pageNumber = res.pageIndex;\n      this.posts = res.items;\n      if (event) {\n        event.target.complete();\n      }\n    });\n  }\n\n  async presentSearchModal() {\n    const modal = await this.modalController.create({\n      component: SearchPage,\n      componentProps: {\n\n      },\n      showBackdrop: true,\n      cssClass: 'search-modal'\n    });\n    return await modal.present();\n  }\n\n  openProfile() {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: this.accountService.getUserId()\n      }\n    };\n    this.router.navigateByUrl('/user-profile', navigationExtras);\n  }\n\n  async presentMapFilter() {\n    const modal = await this.modalController.create({\n      component: MapFilterPage,\n      showBackdrop: true,\n      cssClass: 'filter-modal',\n      componentProps: {\n        filter: this.filter\n      }\n    });\n\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned !== null) {\n        this.filter = dataReturned.data;\n        this.refreshPosts();\n        await this.loadingController.dismiss();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n}\n","<ion-header style=\"background-color:#128C7E\" class=\"ion-no-border\">\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\n    <ion-buttons slot=\"start\">\n      <ion-button slot=\"start\" large (click)=\"dismiss()\">\n        <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\"> \n      <ion-button slot=\"end\" (click)=\"presentSearchModal()\">  \n        <img class=\"img-center\" src=\"../../../assets/UI/search-outline.svg\" >\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"false\" color=\"light\">\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\n    <ion-refresher-content\n      pullingText=\"Pull to refresh\"\n      refreshingSpinner=\"circles\"\n      refreshingText=\"Refreshing...\">\n    </ion-refresher-content>\n  </ion-refresher>\n  <post [posts]=\"posts\"></post>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"circles\"\n      loadingText=\"Getting more posts...\">\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n</ion-content>\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\n    <img src=\"../../assets/UI/FilterClosed.svg\">\n  </ion-button>\n</ion-fab>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateAgo'\n})\nexport class DateAgoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n  if (value) {\n    const now = new Date().toUTCString();\n    const seconds = Math.abs((new Date(now).getTime() - new Date(value + 'Z').getTime()) / 1000); // appending Z lets the date know its UTC\n\n    if (seconds < 29) { // less than 30 seconds ago will show as 'Just now'\n        return 'Just now';\n    }\n    const intervals = {\n        day: 86400,\n        hour: 3600,\n        minute: 60,\n        second: 1\n    };\n    let counter;\n    // tslint:disable-next-line: forin\n    for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n\n        if (Math.floor(seconds / 86400) > 1) {\n          const date = new Date(value);\n          const month = date.toLocaleString('default', { month: 'long' });\n          return `${month} ${date.getDate()}`;\n        }\n\n        if (counter > 0) {\n            if (counter === 1) {\n                return counter + ' ' + i + ' ago'; // singular (1 hour ago)\n            } else {\n                return counter + ' ' + i + 's ago'; // plural (2 hours ago)\n            }\n        }\n    }\n  }\n  return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n  private modals: any[] = [];\n  public dis: boolean;\n  constructor() { }\n\n  add(modal: any) {\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    this.modals =  this.modals.filter(x => x.id !== id);\n  }\n\n  open(id: string) {\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    modal.present();\n  }\n\n  close(id: string) {\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    modal.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { PostComponent } from '../components/post/post.component';\nimport { CardFlipComponent } from '../components/card-flip/card-flip.component';\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule\n  ],\n  declarations: [\n    PostComponent,\n    CardFlipComponent,\n    DateAgoPipe\n  ],\n  providers: [],\n  exports: [\n    PostComponent,\n    CardFlipComponent,\n    DateAgoPipe\n  ]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDpx-hQIOXVBbNfGRaFQQTx-vzVwKwpA4Y',\n    authDomain: 'visit-4efb7.firebaseapp.com',\n    projectId: 'visit-4efb7',\n    storageBucket: 'visit-4efb7.appspot.com',\n    messagingSenderId: '227659578598',\n    appId: '1:227659578598:web:94cdae4520ab27359d8f27',\n    measurementId: 'G-P6HNG7BB8S'\n  }\n};\n\nexport const BASE_PATH = 'https://visit-service.azurewebsites.net';\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n  // Call the element loader after the platform has been bootstrapped\ndefineCustomElements(window);"]}
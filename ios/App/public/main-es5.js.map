{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/backend/clients/api.module.ts","webpack:///src/app/backend/clients/api/accounts.service.ts","webpack:///src/app/backend/clients/api/api.ts","webpack:///src/app/backend/clients/api/blobStorage.service.ts","webpack:///src/app/backend/clients/api/devops.service.ts","webpack:///src/app/backend/clients/api/post.service.ts","webpack:///src/app/backend/clients/api/postTestData.service.ts","webpack:///src/app/backend/clients/api/tag.service.ts","webpack:///src/app/backend/clients/api/user.service.ts","webpack:///src/app/backend/clients/api/userLocation.service.ts","webpack:///src/app/backend/clients/api/userMessage.service.ts","webpack:///src/app/backend/clients/configuration.ts","webpack:///src/app/backend/clients/encoder.ts","webpack:///src/app/backend/clients/index.ts","webpack:///src/app/backend/clients/model/addressFamily.ts","webpack:///src/app/backend/clients/model/callingConventions.ts","webpack:///src/app/backend/clients/model/eventAttributes.ts","webpack:///src/app/backend/clients/model/fieldAttributes.ts","webpack:///src/app/backend/clients/model/genericParameterAttributes.ts","webpack:///src/app/backend/clients/model/layoutKind.ts","webpack:///src/app/backend/clients/model/memberTypes.ts","webpack:///src/app/backend/clients/model/methodAttributes.ts","webpack:///src/app/backend/clients/model/methodImplAttributes.ts","webpack:///src/app/backend/clients/model/modelValidationState.ts","webpack:///src/app/backend/clients/model/models.ts","webpack:///src/app/backend/clients/model/parameterAttributes.ts","webpack:///src/app/backend/clients/model/propertyAttributes.ts","webpack:///src/app/backend/clients/model/securityRuleSet.ts","webpack:///src/app/backend/clients/model/typeAttributes.ts","webpack:///src/app/backend/clients/variables.ts","webpack:///src/app/backend/models/httpConfigInterceptor.ts","webpack:///src/app/backend/services/AuthGuard.service.ts","webpack:///src/app/components/card-flip/card-flip.component.ts","webpack:///src/app/components/card-flip/card-flip.component.html","webpack:///src/app/components/post/post.component.ts","webpack:///src/app/components/post/post.component.html","webpack:///src/app/objects/enums/map-selection-mode.ts","webpack:///src/app/objects/location-json/location.selector.ts","webpack:///src/app/objects/map.ts","webpack:///src/app/pages/add-post-image/add-post-image-routing.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.html","webpack:///src/app/pages/add-post/add-post-routing.module.ts","webpack:///src/app/pages/add-post/add-post.module.ts","webpack:///src/app/pages/add-post/add-post.page.ts","webpack:///src/app/pages/add-post/add-post.page.html","webpack:///src/app/pages/mark-location/mark-location-routing.module.ts","webpack:///src/app/pages/mark-location/mark-location.module.ts","webpack:///src/app/pages/mark-location/mark-location.page.ts","webpack:///src/app/pages/mark-location/mark-location.page.html","webpack:///src/app/pages/modals/add/add-routing.module.ts","webpack:///src/app/pages/modals/add/add.module.ts","webpack:///src/app/pages/modals/add/add.page.ts","webpack:///src/app/pages/modals/add/add.page.html","webpack:///src/app/pages/modals/forgot-password/forgot-password-routing.module.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.module.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.page.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.page.html","webpack:///src/app/pages/modals/map-filter/map-filter-routing.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.html","webpack:///src/app/pages/modals/search/search-routing.module.ts","webpack:///src/app/pages/modals/search/search.module.ts","webpack:///src/app/pages/modals/search/search.page.ts","webpack:///src/app/pages/modals/search/search.page.html","webpack:///src/app/pages/user-settings/user-settings-routing.module.ts","webpack:///src/app/pages/user-settings/user-settings.module.ts","webpack:///src/app/pages/user-settings/user-settings.page.ts","webpack:///src/app/pages/user-settings/user-settings.page.html","webpack:///src/app/pages/user-timeline/user-timeline-routing.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","all","slice","webpackAsyncContextKeys","Object","routes","path","redirectTo","pathMatch","children","loadChildren","m","NewsFeedPageModule","canActivate","NotificationsPageModule","SearchPageModule","AddPageModule","MapFilterPageModule","UserProfilePageModule","UserTimelinePageModule","SignInPageModule","RegisterPageModule","PostRegisterAboutPageModule","PostRegisterLocationsPageModule","MarkLocationPageModule","AddPostPageModule","AddPostImagePageModule","CommentsPageModule","UserSettingsPageModule","ForgotPasswordPageModule","AppRoutingModule","forRoot","preloadingStrategy","imports","fcm","AppComponent","platform","userService","modalController","alertController","router","zone","modalSvc","ready","initializeApp","isPluginAvailable","setStyle","style","Default","hide","registerPush","run","isLoggedIn","navigate","firebaseConfig","requestPermissions","result","receive","register","getToken","r","setFcmToken","token","err","console","log","JSON","stringify","addListener","error","notification","title","alert","body","create","header","message","buttons","text","role","handler","dismiss","present","component","showBackdrop","swipeToClose","cssClass","backdropDismiss","modal","url","dis","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","entryComponents","providers","bootstrap","ApiModule","parentModule","http","configurationFactory","ngModule","useFactory","InterceptorSkipHeader","AccountsService","httpClient","basePath","configuration","storage","signInWithApple","ngFireAuth","defaultHeaders","set","authSubject","authState","subscribe","firebaseUser","localStorage","setItem","parse","getItem","storeLoggedInUser","getFcmToken","accountUpdateFcmDeviceIdPost","pipe","res","removeItem","reject","user","userIdGet","getUserId","avi","undefined","userLocations","signOut","auth","currentUser","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","getIdToken","uid","email","password","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","isNativePlatform","signin","requestedScopes","ASAuthorizationScopeFullName","ASAuthorizationScopeEmail","credential","OAuthProvider","identityToken","firstLogin","signInWithCredential","cred","onAuthStateChanged","additionalUserInfo","isNewUser","response","firstName","fullName","givenName","lastName","familyName","signInWithCustomToken","get","observe","reportProgress","queryParameters","encoder","headers","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","consumes","request","params","withCredentials","deviceId","apiKeys","Authorization","encodeURIComponent","String","blob","httpContentTypeSelected","selectHeaderContentType","FormData","append","firstname","lastname","education","birthLocation","residenceLocation","emailVerified","APIS","BlobStorageService","form","consume","fileName","userId","asset","canConsumeForm","formParams","useForm","convertFormParamsToString","toString","DevopsService","PostService","postId","caption","postType","locationCode","image","page","filter","uri","PostTestDataService","post","TagService","tag","put","responseType","UserService","query","UserLocationService","userLocation","UserMessageService","userMessage","Configuration","configurationParameters","username","accessToken","contentTypes","length","type","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","toLowerCase","CustomHttpUrlEncodingCodec","k","replace","v","AddressFamily","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","NUMBER_10","NUMBER_11","NUMBER_12","NUMBER_13","NUMBER_14","NUMBER_15","NUMBER_16","NUMBER_17","NUMBER_18","NUMBER_19","NUMBER_21","NUMBER_22","NUMBER_23","NUMBER_24","NUMBER_25","NUMBER_26","NUMBER_28","NUMBER_29","NUMBER_65536","NUMBER_65537","NUMBER_MINUS_1","CallingConventions","NUMBER_32","NUMBER_64","EventAttributes","NUMBER_512","NUMBER_1024","FieldAttributes","NUMBER_128","NUMBER_256","NUMBER_4096","NUMBER_8192","NUMBER_32768","NUMBER_38144","GenericParameterAttributes","LayoutKind","MemberTypes","NUMBER_191","MethodAttributes","NUMBER_2048","NUMBER_16384","NUMBER_53248","MethodImplAttributes","NUMBER_65535","ModelValidationState","ParameterAttributes","NUMBER_61440","PropertyAttributes","NUMBER_62464","SecurityRuleSet","TypeAttributes","NUMBER_131072","NUMBER_196608","NUMBER_262144","NUMBER_264192","NUMBER_1048576","NUMBER_12582912","BASE_PATH","COLLECTION_FORMATS","csv","tsv","ssv","pipes","TOKEN_KEY","HttpConfigInterceptor","accountService","next","clone","handle","event","status","reason","subHeader","AuthGuard","route","CardFlipComponent","flipped","PostComponent","postSvc","posts","location","likeIcon","likedIcon","postfaa","componentProps","src","keyboardClose","likedByCurrentUser","postsLikePostIdPost","likeCount","navigationExtras","replaceUrl","state","navigateByUrl","fkUserId","MapSelectionMode","LocationSelector","options","getCountries","Countries","forEach","name","push","getStates","States","sort","compare","a","b","comparison","Map","destroyMap","selectedArea","polygonArr","Array","selectedArr","changedAreas","seriesArr","createMap","NONE","selectionMode","runOutsideAngular","worldSeries","usaSeries","chart","autoDispose","geodata","projection","Miller","zoomControl","plusButton","minusButton","tapToActivate","seriesContainer","events","disableType","chartContainer","background","showOnInit","homeButton","on","goHome","icon","padding","width","marginBottom","parent","insertAfter","series","exclude","useGeodata","mapPolygons","template","setupTemplates","setSelectionMode","divName","moveHtmlContainer","polygonTemplate","tooltipText","nonScalingStroke","applyOnClones","strokeOpacity","activeState","states","visited","properties","fill","toVisit","defaultState","ev","data","target","dataItem","dataContext","selectedId","lastSelected","zoomToMapObject","FILTER","resetAllLocations","changeVisitStatus","off","TO_VISIT","locationId","getPolygonById","setState","init","locationInArray","d","index","indexOf","splice","dispose","AddPostImagePageRoutingModule","forChild","AddPostImagePage","loadingController","modalCtrl","postService","selectedLocation","postText","locationOptions","userImage","getAllLocations","option","trim","startSearch","items","endSearch","filterLocations","duration","loading","postsNewPostForm","dismissed","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","getPhoto","quality","allowEditing","resultType","DataUrl","imageUrl","dataUrl","b64toBlob","getUserImage","AddPostPageRoutingModule","AddPostPage","MarkLocationPageRoutingModule","MarkLocationPage","locationRequest","locations","titleTextVisited","titleTextToVisit","subtitleTextVisited","subtitleTextToVisit","displayVisitedText","addMapToDiv","storedUserLocations","fkLocation","mapLocationsToRequest","accountUpdateLocationsPost","onSubmit","AddPageRoutingModule","AddPage","VISITED","markVisitedLocations","markLocationsToVisit","addNewImage","addNewPost","ForgotPasswordPageRoutingModule","ForgotPasswordPage","userEmail","PasswordRecover","closeModal","MapFilterPageRoutingModule","MapFilterPage","myservice","navParams","countries","zoomToLocation","mapvalue","filterTerm","onClosedData","show","searchvalue","resetFilter","filterSubmit","SearchPageRoutingModule","SearchPage","viewCtrl","people","searchQuery","ngOnInit","userSearchQueryGet","users","skipLocationChange","search","UserSettingsPageRoutingModule","UserSettingsPage","navCtrl","birthPlace","residence","aboutForm","controls","value","accountUpdatePost","accountUpdateProfileImagePost","logout","back","UserTimelinePageRoutingModule","UserTimelinePage","imgview","pageNumber","morePages","selectedUserId","sliderOpt","zoom","maxRatio","postsPageGet","hasNextPage","pageIndex","oldposts","oldResLen","resLen","complete","infiniteScroll","disabled","onDidDismiss","dataReturned","refreshPosts","getPosts","presentMapFilter","DateAgoPipe","args","now","Date","toUTCString","seconds","Math","abs","getTime","intervals","day","hour","minute","second","counter","floor","date","month","toLocaleString","getDate","ModalService","modals","close","providedIn","SharedModule","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './backend/services/AuthGuard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'post-register-about',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'tab1',\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('./pages/news-feed/news-feed.module').then(\r\n            (m) => m.NewsFeedPageModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'tab2',\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('./pages/notifications-page/notifications.module').then(\r\n            (m) => m.NotificationsPageModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'search',\r\n    loadChildren: () =>\r\n      import('./pages/modals/search/search.module').then(\r\n        (m) => m.SearchPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () =>\r\n      import('./pages/modals/add/add.module').then((m) => m.AddPageModule),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'map-filter',\r\n    loadChildren: () =>\r\n      import('./pages/modals/map-filter/map-filter.module').then(\r\n        (m) => m.MapFilterPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-profile',\r\n    loadChildren: () =>\r\n      import('./pages/user-profile/user-profile.module').then(\r\n        (m) => m.UserProfilePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-timeline',\r\n    loadChildren: () =>\r\n      import('./pages/user-timeline/user-timeline.module').then(\r\n        (m) => m.UserTimelinePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'sign-in',\r\n    loadChildren: () =>\r\n      import('./pages/sign-in/sign-in.module').then((m) => m.SignInPageModule),\r\n  },\r\n  {\r\n    path: 'register',\r\n    loadChildren: () =>\r\n      import('./pages/register/register.module').then(\r\n        (m) => m.RegisterPageModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'post-register-about',\r\n    loadChildren: () =>\r\n      import('./pages/post-register-about/post-register-about.module').then(\r\n        (m) => m.PostRegisterAboutPageModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'post-register-locations',\r\n    loadChildren: () =>\r\n      import(\r\n        './pages/post-register-locations/post-register-locations.module'\r\n      ).then((m) => m.PostRegisterLocationsPageModule),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'mark-location',\r\n    loadChildren: () =>\r\n      import('./pages/mark-location/mark-location.module').then(\r\n        (m) => m.MarkLocationPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add-post',\r\n    loadChildren: () =>\r\n      import('./pages/add-post/add-post.module').then(\r\n        (m) => m.AddPostPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add-post-image',\r\n    loadChildren: () =>\r\n      import('./pages/add-post-image/add-post-image.module').then(\r\n        (m) => m.AddPostImagePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'comments',\r\n    loadChildren: () =>\r\n      import('./pages/comments/comments.module').then(\r\n        (m) => m.CommentsPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-settings',\r\n    loadChildren: () =>\r\n      import('./pages/user-settings/user-settings.module').then(\r\n        (m) => m.UserSettingsPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    loadChildren: () => import('./pages/modals/forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\r\nimport { SplashScreen } from '@capacitor/splash-screen';\r\nimport { StatusBar, Style } from '@capacitor/status-bar';\r\nimport {\r\n  PushNotificationSchema,\r\n  Token,\r\n  ActionPerformed,\r\n  PushNotifications,\r\n} from '@capacitor/push-notifications';\r\nimport { FCM } from '@capacitor-community/fcm';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { from } from 'rxjs';\r\nconst fcm = new FCM();\r\n\r\nimport { AddPage } from './pages/modals/add/add.page';\r\nimport { AccountsService } from './backend/clients/api/accounts.service';\r\nimport { ModalService } from './services/modal.service';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport firebase from 'firebase/app';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  page: string;\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private userService: AccountsService,\r\n    public modalController: ModalController,\r\n    public alertController: AlertController,\r\n    public router: Router,\r\n    public zone: NgZone,\r\n    public modalSvc: ModalService\r\n  ) {\r\n    this.platform.ready().then(() => {\r\n      this.initializeApp();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      if (Capacitor.isPluginAvailable('StatusBar')) {\r\n        StatusBar.setStyle({ style: Style.Default });\r\n      }\r\n\r\n      if (Capacitor.isPluginAvailable('SplashScreen')) {\r\n        SplashScreen.hide();\r\n      }\r\n\r\n      if (Capacitor.isPluginAvailable('PushNotifications')) {\r\n        this.registerPush();\r\n      }\r\n\r\n      this.zone.run(() => {\r\n        if (this.userService.isLoggedIn) {\r\n          this.router.navigate(['tab1']);\r\n        } else {\r\n          this.router.navigate(['sign-in']);\r\n        }\r\n      });\r\n    });\r\n\r\n    firebase.initializeApp(environment.firebaseConfig);\r\n  }\r\n\r\n  private registerPush() {\r\n    PushNotifications.requestPermissions().then((result) => {\r\n      if (result.receive === 'granted') {\r\n        // Register with Apple / Google to receive push via APNS/FCM\r\n        PushNotifications.register().then(() =>\r\n          from(\r\n            fcm\r\n              .getToken()\r\n              .then((r) => {\r\n                this.userService.setFcmToken(r.token);\r\n              })\r\n              .catch((err) => {\r\n                console.log(`FCM Token ERROR: ${JSON.stringify(err)}`);\r\n              })\r\n          )\r\n        );\r\n      } else {\r\n        console.log('Push notifications not registered');\r\n      }\r\n    });\r\n\r\n    PushNotifications.addListener('registration', (token: Token) => {\r\n      // alert('Push registration success, token: ' + token.value);\r\n    });\r\n\r\n    PushNotifications.addListener('registrationError', (error: any) => {\r\n      // alert('Error on registration: ' + JSON.stringify(error));\r\n    });\r\n\r\n    PushNotifications.addListener(\r\n      'pushNotificationReceived',\r\n      async (notification: PushNotificationSchema) => {\r\n        console.log(notification.title);\r\n        this.alert(notification.title, notification.body);\r\n      }\r\n    );\r\n\r\n    PushNotifications.addListener(\r\n      'pushNotificationActionPerformed',\r\n      (notification: ActionPerformed) => {\r\n        // alert('Push action performed: ' + JSON.stringify(notification));\r\n      }\r\n    );\r\n  }\r\n\r\n  async alert(title: string, body: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: body,\r\n      buttons: [\r\n        {\r\n          text: 'OKAY',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            alert.dismiss();\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  get showFooter() {\r\n    if (this.router.url === '/sign-in') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/register') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/post-register-about') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/post-register-locations') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/comments') {\r\n      return false;\r\n    }\r\n    if (this.modalSvc.dis === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async presentAddModal() {\r\n    const modal = await this.modalController.create({\r\n      component: AddPage,\r\n      showBackdrop: true,\r\n      swipeToClose: true,\r\n      cssClass: 'add-modal',\r\n      backdropDismiss: true,\r\n    });\r\n    return await modal.present();\r\n  }\r\n}\r\n","<ion-app>\r\n  <ion-router-outlet></ion-router-outlet>\r\n  <ion-tabs>\r\n    <ion-tab-bar slot=\"bottom\" *ngIf=\"showFooter\">\r\n      <ion-tab-button tab=\"tab1\">\r\n        <ion-icon name=\"home-outline\"></ion-icon>\r\n        <ion-label>Home</ion-label>\r\n      </ion-tab-button>\r\n\r\n      <ion-tab-button tab=\"tab2\">\r\n        <ion-icon name=\"notifications-outline\"></ion-icon>\r\n        <ion-label>Notifications</ion-label>\r\n      </ion-tab-button>\r\n    </ion-tab-bar>\r\n  </ion-tabs>\r\n  <ion-fab horizontal=\"center\" vertical=\"bottom\" *ngIf=\"showFooter\">\r\n    <ion-fab-button class=\"add-button\" (click)=\"presentAddModal()\">\r\n      <ion-icon name=\"add\" style=\"height: 50; width: 20\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</ion-app>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { SearchPageModule } from './pages/modals/search/search.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddPageModule } from './pages/modals/add/add.module';\r\nimport { MapFilterPageModule } from './pages/modals/map-filter/map-filter.module';\r\nimport { ForgotPasswordPageModule} from './pages/modals/forgot-password/forgot-password.module';\r\nimport { UserTimelinePageModule } from './pages/user-timeline/user-timeline.module';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { HttpConfigInterceptor } from './backend/models/httpConfigInterceptor';\r\nimport { AuthGuard } from './backend/services/AuthGuard.service';\r\nimport { AccountsService, UserService, PostService } from './backend/clients';\r\nimport { MarkLocationPageModule } from './pages/mark-location/mark-location.module';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\nimport { LocationSelector } from './objects/location-json/location.selector';\r\nimport { AddPostPageModule } from './pages/add-post/add-post.module';\r\nimport { AddPostImagePageModule } from './pages/add-post-image/add-post-image.module';\r\nimport { UserSettingsPageModule } from './pages/user-settings/user-settings.module';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { SignInWithApple } from '@ionic-native/sign-in-with-apple/ngx';\r\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  entryComponents: [],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n    NgxIonicImageViewerModule,\r\n    IonicStorageModule.forRoot(),\r\n    Ng2SearchPipeModule,\r\n    AppRoutingModule,\r\n    SearchPageModule,\r\n    AddPageModule,\r\n    HttpClientModule,\r\n    UserTimelinePageModule,\r\n    MapFilterPageModule,\r\n    MarkLocationPageModule,\r\n    AddPostPageModule,\r\n    UserSettingsPageModule,\r\n    AddPostImagePageModule,\r\n    ForgotPasswordPageModule,\r\n    IonicSelectableModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AccountsService,\r\n    UserService,\r\n    PostService,\r\n    LocationSelector,\r\n    SignInWithApple,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpConfigInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  SkipSelf,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { Configuration } from './configuration';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AccountsService } from './api/accounts.service';\r\nimport { BlobStorageService } from './api/blobStorage.service';\r\nimport { DevopsService } from './api/devops.service';\r\nimport { PostService } from './api/post.service';\r\nimport { PostTestDataService } from './api/postTestData.service';\r\nimport { TagService } from './api/tag.service';\r\nimport { UserService } from './api/user.service';\r\nimport { UserLocationService } from './api/userLocation.service';\r\nimport { UserMessageService } from './api/userMessage.service';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [],\r\n  providers: [\r\n    AccountsService,\r\n    BlobStorageService,\r\n    DevopsService,\r\n    PostService,\r\n    PostTestDataService,\r\n    TagService,\r\n    UserService,\r\n    UserLocationService,\r\n    UserMessageService,\r\n  ],\r\n})\r\nexport class ApiModule {\r\n  public static forRoot(\r\n    configurationFactory: () => Configuration\r\n  ): ModuleWithProviders<ApiModule> {\r\n    return {\r\n      ngModule: ApiModule,\r\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: ApiModule,\r\n    @Optional() http: HttpClient\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'ApiModule is already loaded. Import in your base AppModule only.'\r\n      );\r\n    }\r\n    if (!http) {\r\n      throw new Error(\r\n        'You need to import the HttpClientModule in your AppModule! \\n' +\r\n          'See also https://github.com/angular/angular/issues/20575'\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport {\r\n  Inject, Injectable, NgZone, Optional,\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, BehaviorSubject, from } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { BASE_PATH } from 'src/environments/environment';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport firebase from 'firebase/app';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { MarkLocationsRequest } from '../model/markLocationsRequest';\r\nimport { Configuration } from '../configuration';\r\nimport { RegisterRequest } from '../model/registerRequest';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\nimport { SignInWithApple, AppleSignInResponse, AppleSignInErrorResponse, ASAuthorizationAppleIDRequest } from '@ionic-native/sign-in-with-apple/ngx';\r\nimport { SsoUser } from '../model/ssoUser';\r\nimport { UserService } from './user.service';\r\nimport { User } from '../model/user';\r\nimport { UserResponse } from '../model/userResponse';\r\nimport { UserLocation } from '../model/userLocation';\r\n\r\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class AccountsService {\r\n  protected basePath = BASE_PATH;\r\n\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n\r\n  public configuration = new Configuration();\r\n\r\n  public authSubject = new BehaviorSubject(false);\r\n\r\n  public userData: any;\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private storage: Storage,\r\n    private userService: UserService,\r\n    private alertController: AlertController,\r\n    private signInWithApple: SignInWithApple,\r\n    private ngFireAuth: AngularFireAuth,\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n\r\n    this.ngFireAuth.authState.subscribe(async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        localStorage.setItem('firebaseUser', JSON.stringify(firebaseUser));\r\n        JSON.parse(localStorage.getItem('firebaseUser'));\r\n        await this.storeLoggedInUser().then(() => { // todo relook at this logic\r\n          this.getFcmToken().subscribe((token) => {\r\n            console.log(`FCM:${token}`);\r\n            this.accountUpdateFcmDeviceIdPost(token)\r\n              .pipe(take(1))\r\n              .subscribe(\r\n                (res) => {\r\n                  console.log(res);\r\n                },\r\n                (err) => console.log(err),\r\n              );\r\n          });\r\n        });\r\n      } else {\r\n        localStorage.setItem('firebaseUser', null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('userLocations');\r\n        JSON.parse(localStorage.getItem('firebaseUser'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public storeLoggedInUser() {\r\n    return new Promise<any>((resolve, reject) => {\r\n    let user: UserResponse;\r\n\r\n    this.userService.userIdGet(this.getUserId()).pipe(take(1)).subscribe(res => {\r\n        console.log(res)\r\n        this.storage.set('image',res);\r\n        user = res;\r\n        if (res.avi === undefined) {\r\n          user.avi = '../../../../assets/defaultuser.png';\r\n        }\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('userLocations', JSON.stringify(res.userLocations));\r\n      });\r\n    });\r\n  }\r\n\r\n  get storedUser(): UserResponse {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return user;\r\n  }\r\n\r\n  get storedUserLocations(): Array<UserLocation> {\r\n    return JSON.parse(localStorage.getItem('userLocations'));\r\n  }\r\n\r\n  public async logout() {\r\n    return this.ngFireAuth.signOut().then(() => {\r\n      localStorage.removeItem('firebaseUser');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('userLocations');\r\n\r\n      this.zone.run(() => {\r\n        this.router.navigate(['sign-in']);\r\n      });\r\n    });\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return (user !== null);\r\n  }\r\n\r\n  // Email verification when new user register\r\n  SendVerificationMail() {\r\n    return from(firebase\r\n      .auth()\r\n      .currentUser.sendEmailVerification()\r\n      .then(() => {\r\n        this.zone.run(() => {\r\n          this.router.navigate(['verify-email']);\r\n        });\r\n      }));\r\n  }\r\n\r\n  get isEmailVerified(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return user.emailVerified !== false;\r\n  }\r\n\r\n  // Recover password\r\n  PasswordRecover(passwordResetEmail) {\r\n    return firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(passwordResetEmail)\r\n      .then(() => {\r\n        this.alert(\r\n          'Success',\r\n          'Password reset email has been sent, please check your inbox.',\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.alert('Reset error', error);\r\n      });\r\n  }\r\n\r\n  async alert(title: string, body: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: body,\r\n      buttons: [\r\n        {\r\n          text: 'OKAY',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            alert.dismiss();\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async getToken() {\r\n    try {\r\n      return await firebase.auth().currentUser.getIdToken();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getUserId() {\r\n    return firebase.auth().currentUser.uid;\r\n  }\r\n\r\n  // Login in with email/password\r\n  login(email, password) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n        .then(async () => {\r\n          await firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(\r\n              (res) => {\r\n                if (Capacitor.isNativePlatform()) {\r\n                  this.getFcmToken()\r\n                    .pipe(take(1))\r\n                    .subscribe((token) => {\r\n                      this.accountUpdateFcmDeviceIdPost(token);\r\n                      resolve(res);\r\n                    });\r\n                } else {\r\n                  resolve(res);\r\n                }\r\n              },\r\n              (err) => reject(err),\r\n            );\r\n        });\r\n    });\r\n  }\r\n\r\n  loginFacebook() {\r\n\r\n  }\r\n\r\n  async loginApple(): Promise<SsoUser> {\r\n      return this.signInWithApple.signin({\r\n      requestedScopes: [\r\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeFullName,\r\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeEmail\r\n      ]\r\n    }).then(async (res: AppleSignInResponse) => {\r\n      const credential = new firebase.auth.OAuthProvider('apple.com').credential(\r\n        res.identityToken\r\n      );\r\n      let firstLogin = false;\r\n\r\n      const response = await firebase.auth().signInWithCredential(credential).then(async (cred) => {\r\n          await firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n              return res;\r\n            }\r\n          });\r\n          firstLogin = cred.additionalUserInfo.isNewUser;\r\n        });\r\n\r\n      return {\r\n        firstLogin,\r\n        firstName: res.fullName.givenName,\r\n        lastName: res.fullName.familyName,\r\n        email: res.email,\r\n      } as SsoUser;\r\n    });\r\n  }\r\n\r\n    // GoogleAuth() {\r\n    //   return this.AuthLogin(new auth.GoogleAuthProvider());\r\n    // }\r\n\r\n\r\n  public loginWithToken(token): Observable<any> {\r\n    return from(\r\n      firebase\r\n        .auth()\r\n        .signInWithCustomToken(token)\r\n        .then(() => this.getFcmToken()\r\n          .pipe(take(1))\r\n          .subscribe((token) => this.accountUpdateFcmDeviceIdPost(token))),\r\n    );\r\n  }\r\n\r\n  public getFcmToken() {\r\n    return from(this.storage.get('fcm'));\r\n  }\r\n\r\n  public setFcmToken(token) {\r\n    return from(this.storage.set('fcm', token));\r\n  }\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (email !== undefined && email !== null) {\r\n      queryParameters = queryParameters.set('email', email as string);\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'get',\r\n      `${this.basePath}/account/email_taken`,\r\n      {\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    if (deviceId === null || deviceId === undefined) {\r\n      throw new Error(\r\n        'Required parameter deviceId was null or undefined when calling accountUpdateFcmDeviceIdPost.',\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys\r\n      && this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization,\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/fcm/${encodeURIComponent(\r\n        String(deviceId),\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountRegisterPostForm(\r\n    body?: RegisterRequest,\r\n    blob?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean,\r\n  ): Observable<string> {\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<JwtToken>>;\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<JwtToken>>;\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    return this.httpClient.request<string>(\r\n      'post',\r\n      `${this.basePath}/account/register`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/locations`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n\r\n    const body = new FormData();\r\n    body.append('image', blob);\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/profile_image`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (firstname !== undefined && firstname !== null) {\r\n      queryParameters = queryParameters.set('Firstname', firstname as any);\r\n    }\r\n    if (lastname !== undefined && lastname !== null) {\r\n      queryParameters = queryParameters.set('Lastname', lastname as any);\r\n    }\r\n    if (title !== undefined && title !== null) {\r\n      queryParameters = queryParameters.set('Title', title as any);\r\n    }\r\n    if (education !== undefined && education !== null) {\r\n      queryParameters = queryParameters.set('Education', education as any);\r\n    }\r\n    if (birthLocation !== undefined && birthLocation !== null) {\r\n      queryParameters = queryParameters.set(\r\n        'BirthLocation',\r\n        birthLocation as any,\r\n      );\r\n    }\r\n    if (residenceLocation !== undefined && residenceLocation !== null) {\r\n      queryParameters = queryParameters.set(\r\n        'ResidenceLocation',\r\n        residenceLocation as any,\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update`,\r\n      {\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n}\r\n","export * from './accounts.service';\r\nimport { AccountsService } from './accounts.service';\r\nexport * from './blobStorage.service';\r\nimport { BlobStorageService } from './blobStorage.service';\r\nexport * from './devops.service';\r\nimport { DevopsService } from './devops.service';\r\nexport * from './post.service';\r\nimport { PostService } from './post.service';\r\nexport * from './postTestData.service';\r\nimport { PostTestDataService } from './postTestData.service';\r\nexport * from './tag.service';\r\nimport { TagService } from './tag.service';\r\nexport * from './user.service';\r\nimport { UserService } from './user.service';\r\nexport * from './userLocation.service';\r\nimport { UserLocationService } from './userLocation.service';\r\nexport * from './userMessage.service';\r\nimport { UserMessageService } from './userMessage.service';\r\n// tslint:disable-next-line: max-line-length\r\nexport const APIS = [\r\n  AccountsService,\r\n  BlobStorageService,\r\n  DevopsService,\r\n  PostService,\r\n  PostTestDataService,\r\n  TagService,\r\n  UserService,\r\n  UserLocationService,\r\n  UserMessageService,\r\n];\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: import-spacing\r\n// tslint:disable: max-line-length\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class BlobStorageService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (fileName === null || fileName === undefined) {\r\n      throw new Error(\r\n        'Required parameter fileName was null or undefined when calling storageDeleteFileFileNameGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<any>(\r\n      'get',\r\n      `${this.basePath}/storage/DeleteFile/${encodeURIComponent(\r\n        String(fileName)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<string>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<string>>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<string>>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (fileName === null || fileName === undefined) {\r\n      throw new Error(\r\n        'Required parameter fileName was null or undefined when calling storageDownloadFileFileNameGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<string>(\r\n      'get',\r\n      `${this.basePath}/storage/DownloadFile/${encodeURIComponent(\r\n        String(fileName)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<string>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<string>>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<string>>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userId === null || userId === undefined) {\r\n      throw new Error(\r\n        'Required parameter userId was null or undefined when calling storageListFilesUserIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<string>>(\r\n      'get',\r\n      `${this.basePath}/storage/ListFiles/${encodeURIComponent(\r\n        String(userId)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param asset\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (fileName !== undefined && fileName !== null) {\r\n      queryParameters = queryParameters.set('fileName', fileName as any);\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    const canConsumeForm = this.canConsumeForm(consumes);\r\n\r\n    let formParams: { append(param: string, value: any): void };\r\n    let useForm = false;\r\n    const convertFormParamsToString = false;\r\n    // use FormData to transmit files using content-type \"multipart/form-data\"\r\n    // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\r\n    useForm = canConsumeForm;\r\n    if (useForm) {\r\n      formParams = new FormData();\r\n    } else {\r\n      formParams = new HttpParams({\r\n        encoder: new CustomHttpUrlEncodingCodec(),\r\n      });\r\n    }\r\n\r\n    if (asset !== undefined) {\r\n      formParams =\r\n        (formParams.append('asset', asset as any) as any) || formParams;\r\n    }\r\n\r\n    return this.httpClient.request<any>(\r\n      'post',\r\n      `${this.basePath}/storage/UploadFile`,\r\n      {\r\n        body: convertFormParamsToString ? formParams.toString() : formParams,\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */ /* tslint:disable:no-unused-variable member-ordering */\r\n\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BASE_PATH } from 'src/environments/environment';\r\n\r\nimport { Configuration } from '../configuration';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class DevopsService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public devopsPostTypesPost(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public devopsPostTypesPost(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public devopsPostTypesPost(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public devopsPostTypesPost(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<any>(\r\n      'post',\r\n      `${this.basePath}/devops/post_types`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */ /* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: no-redundant-jsdoc\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PostPaginatedList } from '../model/postPaginatedList';\r\nimport { BASE_PATH } from 'src/environments/environment';\r\n\r\nimport { COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\nimport { CreatePostRequest } from '../model/createPostRequest';\r\nimport { NewPostResponse } from '../model/newPostResponse';\r\nimport { CommentForPost } from '../model/commentForPost';\r\nimport { LikeForPost } from '../model/likeForPost';\r\nimport { PostApiPaginatedList } from '../model/postApiPaginatedList';\r\nimport { CommentApi } from '../model/commentApi';\r\nimport { string } from '@amcharts/amcharts4/core';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class PostService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param postId\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsCommentPostIdPost.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/posts/comment/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<CommentForPost>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<CommentForPost>>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<CommentForPost>>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsCommentsGetPostIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<CommentForPost>>(\r\n      'get',\r\n      `${this.basePath}/posts/comments/get/${encodeURIComponent(\r\n        String(postId)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsLikePostIdPost.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/posts/like/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<LikeForPost>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<LikeForPost>>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<LikeForPost>>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsLikesGetPostIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<LikeForPost>>(\r\n      'get',\r\n      `${this.basePath}/posts/likes/get/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * @param caption\r\n   * @param postType\r\n   * @param locationCode\r\n   * @param image\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<NewPostResponse>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<NewPostResponse>>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<NewPostResponse>>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    let formParams: { append(param: string, value: any): void };\r\n    formParams = new FormData();\r\n\r\n    const convertFormParamsToString = false;\r\n\r\n    if (caption !== undefined) {\r\n      formParams =\r\n        (formParams.append('Caption', caption as any) as any) || formParams;\r\n    }\r\n    if (postType !== undefined) {\r\n      formParams =\r\n        (formParams.append('PostType', postType as any) as any) || formParams;\r\n    }\r\n    if (locationCode !== undefined) {\r\n      formParams =\r\n        (formParams.append('LocationCode', locationCode as any) as any) ||\r\n        formParams;\r\n    }\r\n    if (image !== undefined) {\r\n      formParams =\r\n        (formParams.append('Image', image as any) as any) || formParams;\r\n    }\r\n\r\n    return this.httpClient.request<NewPostResponse>(\r\n      'post',\r\n      `${this.basePath}/posts/new`,\r\n      {\r\n        body: convertFormParamsToString ? formParams.toString() : formParams,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param page\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<PostApiPaginatedList>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<PostApiPaginatedList>>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<PostApiPaginatedList>>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (page === null || page === undefined) {\r\n      throw new Error(\r\n        'Required parameter page was null or undefined when calling postsPageGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    let uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}`;\r\n\r\n    if (filter !== '' && userId === '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/filter/${encodeURIComponent(String(filter))}`;\r\n    } else if (userId !== '' && filter === '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/user/${encodeURIComponent(String(userId))}`;\r\n    } else if (userId !== '' && filter !== '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/${encodeURIComponent(String(filter))}/${encodeURIComponent(\r\n        String(userId)\r\n      )}`;\r\n    }\r\n\r\n    return this.httpClient.request<PostApiPaginatedList>('get', uri, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers,\r\n      observe,\r\n      reportProgress,\r\n    });\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../model/user';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class PostTestDataService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postTestDataGetAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<User>>;\r\n  public postTestDataGetAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<User>>>;\r\n  public postTestDataGetAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<User>>>;\r\n  public postTestDataGetAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<User>>(\r\n      `${this.basePath}/api/TestData/users`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postTestDataPostTest(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<string>;\r\n  public postTestDataPostTest(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<string>>;\r\n  public postTestDataPostTest(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<string>>;\r\n  public postTestDataPostTest(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.post<string>(\r\n      `${this.basePath}/api/TestData/post`,\r\n      null,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Tag } from '../model/tag';\r\nimport { TagController } from '../model/tagController';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TagService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Tag>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Tag>>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Tag>>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagDeleteTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<Tag>(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Tag>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Tag>>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Tag>>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagGetTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Tag>(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagGetTagAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<Tag>>;\r\n  public tagGetTagAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<Tag>>>;\r\n  public tagGetTagAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<Tag>>>;\r\n  public tagGetTagAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<Tag>>(`${this.basePath}/api/Tag`, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers,\r\n      observe,\r\n      reportProgress,\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param tag\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<TagController>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<TagController>>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<TagController>>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (tag === null || tag === undefined) {\r\n      throw new Error(\r\n        'Required parameter tag was null or undefined when calling tagPostTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<TagController>(\r\n      `${this.basePath}/api/Tag`,\r\n      tag,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param tag\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagPutTag.'\r\n      );\r\n    }\r\n\r\n    if (tag === null || tag === undefined) {\r\n      throw new Error(\r\n        'Required parameter tag was null or undefined when calling tagPutTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      tag,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserResponse } from '../model/userResponse';\r\nimport { BASE_PATH } from 'src/environments/environment';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Configuration } from '../configuration';\r\nimport { SlimUserResponse } from '../model/slimUserResponse';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userAllGet(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<User>>;\r\n  public userAllGet(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<User>>>;\r\n  public userAllGet(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<User>>>;\r\n  public userAllGet(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<User>>(\r\n      'get',\r\n      `${this.basePath}/User/all`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserResponse>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserResponse>>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserResponse>>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<UserResponse>(\r\n      'get',\r\n      `${this.basePath}/User/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param query\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<SlimUserResponse>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<SlimUserResponse>>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<SlimUserResponse>>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (query === null || query === undefined) {\r\n      throw new Error(\r\n        'Required parameter query was null or undefined when calling userSearchQueryGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<SlimUserResponse>>(\r\n      'get',\r\n      `${this.basePath}/User/search/${encodeURIComponent(String(query))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userSelfGet(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<SlimUserResponse>;\r\n  public userSelfGet(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<SlimUserResponse>>;\r\n  public userSelfGet(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<SlimUserResponse>>;\r\n  public userSelfGet(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<SlimUserResponse>(\r\n      'get',\r\n      `${this.basePath}/User/self`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserLocation } from '../model/userLocation';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UserLocationService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationDeleteUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<UserLocation>(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationGetUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<UserLocation>(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<UserLocation>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<UserLocation>>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<UserLocation>>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<UserLocation>>(\r\n      `${this.basePath}/api/UserLocation`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userLocation\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userLocation === null || userLocation === undefined) {\r\n      throw new Error(\r\n        'Required parameter userLocation was null or undefined when calling userLocationPostUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<UserLocation>(\r\n      `${this.basePath}/api/UserLocation`,\r\n      userLocation,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param userLocation\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationPutUserLocation.'\r\n      );\r\n    }\r\n\r\n    if (userLocation === null || userLocation === undefined) {\r\n      throw new Error(\r\n        'Required parameter userLocation was null or undefined when calling userLocationPutUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      userLocation,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserMessage } from '../model/userMessage';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UserMessageService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessageDeleteUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<UserMessage>(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessageGetUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<UserMessage>(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<UserMessage>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<UserMessage>>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<UserMessage>>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<UserMessage>>(\r\n      `${this.basePath}/api/UserMessage`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userMessage\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userMessage === null || userMessage === undefined) {\r\n      throw new Error(\r\n        'Required parameter userMessage was null or undefined when calling userMessagePostUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<UserMessage>(\r\n      `${this.basePath}/api/UserMessage`,\r\n      userMessage,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param userMessage\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessagePutUserMessage.'\r\n      );\r\n    }\r\n\r\n    if (userMessage === null || userMessage === undefined) {\r\n      throw new Error(\r\n        'Required parameter userMessage was null or undefined when calling userMessagePutUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      userMessage,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","export interface ConfigurationParameters {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n}\r\n\r\nexport class Configuration {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n\r\n  constructor(configurationParameters: ConfigurationParameters = {}) {\r\n    this.apiKeys = configurationParameters.apiKeys;\r\n    this.username = configurationParameters.username;\r\n    this.password = configurationParameters.password;\r\n    this.accessToken = configurationParameters.accessToken;\r\n    this.basePath = configurationParameters.basePath;\r\n    this.withCredentials = configurationParameters.withCredentials;\r\n  }\r\n\r\n  /**\r\n   * Select the correct content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param contentTypes - the array of content types that are available for selection\r\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\r\n    if (contentTypes.length == 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = contentTypes.find((x) => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return contentTypes[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Select the correct accept content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param accepts - the array of content types that are available for selection.\r\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderAccept(accepts: string[]): string | undefined {\r\n    if (accepts.length == 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = accepts.find((x) => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return accepts[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Check if the given MIME is a JSON MIME.\r\n   * JSON MIME examples:\r\n   *   application/json\r\n   *   application/json; charset=UTF8\r\n   *   APPLICATION/JSON\r\n   *   application/vnd.company+json\r\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\r\n   * @return True if the given MIME is JSON, false otherwise.\r\n   */\r\n  public isJsonMime(mime: string): boolean {\r\n    const jsonMime: RegExp = new RegExp(\r\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\r\n      'i'\r\n    );\r\n    return (\r\n      mime != null &&\r\n      (jsonMime.test(mime) ||\r\n        mime.toLowerCase() === 'application/json-patch+json')\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\n\r\n/**\r\n * CustomHttpUrlEncodingCodec\r\n * Fix plus sign (+) not encoding, so sent as blank space\r\n * See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\r\n */\r\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\r\n  encodeKey(k: string): string {\r\n    k = super.encodeKey(k);\r\n    return k.replace(/\\+/gi, '%2B');\r\n  }\r\n  encodeValue(v: string): string {\r\n    v = super.encodeValue(v);\r\n    return v.replace(/\\+/gi, '%2B');\r\n  }\r\n}\r\n","export * from './api/api';\r\nexport * from './model/models';\r\nexport * from './variables';\r\nexport * from './configuration';\r\nexport * from './api.module';\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type AddressFamily =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n  | 12\r\n  | 13\r\n  | 14\r\n  | 15\r\n  | 16\r\n  | 17\r\n  | 18\r\n  | 19\r\n  | 21\r\n  | 22\r\n  | 23\r\n  | 24\r\n  | 25\r\n  | 26\r\n  | 28\r\n  | 29\r\n  | 65536\r\n  | 65537\r\n  | -1;\r\n\r\nexport const AddressFamily = {\r\n  NUMBER_0: 0 as AddressFamily,\r\n  NUMBER_1: 1 as AddressFamily,\r\n  NUMBER_2: 2 as AddressFamily,\r\n  NUMBER_3: 3 as AddressFamily,\r\n  NUMBER_4: 4 as AddressFamily,\r\n  NUMBER_5: 5 as AddressFamily,\r\n  NUMBER_6: 6 as AddressFamily,\r\n  NUMBER_7: 7 as AddressFamily,\r\n  NUMBER_8: 8 as AddressFamily,\r\n  NUMBER_9: 9 as AddressFamily,\r\n  NUMBER_10: 10 as AddressFamily,\r\n  NUMBER_11: 11 as AddressFamily,\r\n  NUMBER_12: 12 as AddressFamily,\r\n  NUMBER_13: 13 as AddressFamily,\r\n  NUMBER_14: 14 as AddressFamily,\r\n  NUMBER_15: 15 as AddressFamily,\r\n  NUMBER_16: 16 as AddressFamily,\r\n  NUMBER_17: 17 as AddressFamily,\r\n  NUMBER_18: 18 as AddressFamily,\r\n  NUMBER_19: 19 as AddressFamily,\r\n  NUMBER_21: 21 as AddressFamily,\r\n  NUMBER_22: 22 as AddressFamily,\r\n  NUMBER_23: 23 as AddressFamily,\r\n  NUMBER_24: 24 as AddressFamily,\r\n  NUMBER_25: 25 as AddressFamily,\r\n  NUMBER_26: 26 as AddressFamily,\r\n  NUMBER_28: 28 as AddressFamily,\r\n  NUMBER_29: 29 as AddressFamily,\r\n  NUMBER_65536: 65536 as AddressFamily,\r\n  NUMBER_65537: 65537 as AddressFamily,\r\n  NUMBER_MINUS_1: -1 as AddressFamily,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type CallingConventions = 1 | 2 | 3 | 32 | 64;\r\n\r\nexport const CallingConventions = {\r\n  NUMBER_1: 1 as CallingConventions,\r\n  NUMBER_2: 2 as CallingConventions,\r\n  NUMBER_3: 3 as CallingConventions,\r\n  NUMBER_32: 32 as CallingConventions,\r\n  NUMBER_64: 64 as CallingConventions,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type EventAttributes = 0 | 512 | 1024;\r\n\r\nexport const EventAttributes = {\r\n  NUMBER_0: 0 as EventAttributes,\r\n  NUMBER_512: 512 as EventAttributes,\r\n  NUMBER_1024: 1024 as EventAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type FieldAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 1024\r\n  | 4096\r\n  | 8192\r\n  | 32768\r\n  | 38144;\r\n\r\nexport const FieldAttributes = {\r\n  NUMBER_0: 0 as FieldAttributes,\r\n  NUMBER_1: 1 as FieldAttributes,\r\n  NUMBER_2: 2 as FieldAttributes,\r\n  NUMBER_3: 3 as FieldAttributes,\r\n  NUMBER_4: 4 as FieldAttributes,\r\n  NUMBER_5: 5 as FieldAttributes,\r\n  NUMBER_6: 6 as FieldAttributes,\r\n  NUMBER_7: 7 as FieldAttributes,\r\n  NUMBER_16: 16 as FieldAttributes,\r\n  NUMBER_32: 32 as FieldAttributes,\r\n  NUMBER_64: 64 as FieldAttributes,\r\n  NUMBER_128: 128 as FieldAttributes,\r\n  NUMBER_256: 256 as FieldAttributes,\r\n  NUMBER_512: 512 as FieldAttributes,\r\n  NUMBER_1024: 1024 as FieldAttributes,\r\n  NUMBER_4096: 4096 as FieldAttributes,\r\n  NUMBER_8192: 8192 as FieldAttributes,\r\n  NUMBER_32768: 32768 as FieldAttributes,\r\n  NUMBER_38144: 38144 as FieldAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type GenericParameterAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;\r\n\r\nexport const GenericParameterAttributes = {\r\n  NUMBER_0: 0 as GenericParameterAttributes,\r\n  NUMBER_1: 1 as GenericParameterAttributes,\r\n  NUMBER_2: 2 as GenericParameterAttributes,\r\n  NUMBER_3: 3 as GenericParameterAttributes,\r\n  NUMBER_4: 4 as GenericParameterAttributes,\r\n  NUMBER_8: 8 as GenericParameterAttributes,\r\n  NUMBER_16: 16 as GenericParameterAttributes,\r\n  NUMBER_28: 28 as GenericParameterAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type LayoutKind = 0 | 2 | 3;\r\n\r\nexport const LayoutKind = {\r\n  NUMBER_0: 0 as LayoutKind,\r\n  NUMBER_2: 2 as LayoutKind,\r\n  NUMBER_3: 3 as LayoutKind,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MemberTypes = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;\r\n\r\nexport const MemberTypes = {\r\n  NUMBER_1: 1 as MemberTypes,\r\n  NUMBER_2: 2 as MemberTypes,\r\n  NUMBER_4: 4 as MemberTypes,\r\n  NUMBER_8: 8 as MemberTypes,\r\n  NUMBER_16: 16 as MemberTypes,\r\n  NUMBER_32: 32 as MemberTypes,\r\n  NUMBER_64: 64 as MemberTypes,\r\n  NUMBER_128: 128 as MemberTypes,\r\n  NUMBER_191: 191 as MemberTypes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MethodAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 1024\r\n  | 2048\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 53248;\r\n\r\nexport const MethodAttributes = {\r\n  NUMBER_0: 0 as MethodAttributes,\r\n  NUMBER_1: 1 as MethodAttributes,\r\n  NUMBER_2: 2 as MethodAttributes,\r\n  NUMBER_3: 3 as MethodAttributes,\r\n  NUMBER_4: 4 as MethodAttributes,\r\n  NUMBER_5: 5 as MethodAttributes,\r\n  NUMBER_6: 6 as MethodAttributes,\r\n  NUMBER_7: 7 as MethodAttributes,\r\n  NUMBER_8: 8 as MethodAttributes,\r\n  NUMBER_16: 16 as MethodAttributes,\r\n  NUMBER_32: 32 as MethodAttributes,\r\n  NUMBER_64: 64 as MethodAttributes,\r\n  NUMBER_128: 128 as MethodAttributes,\r\n  NUMBER_256: 256 as MethodAttributes,\r\n  NUMBER_512: 512 as MethodAttributes,\r\n  NUMBER_1024: 1024 as MethodAttributes,\r\n  NUMBER_2048: 2048 as MethodAttributes,\r\n  NUMBER_4096: 4096 as MethodAttributes,\r\n  NUMBER_8192: 8192 as MethodAttributes,\r\n  NUMBER_16384: 16384 as MethodAttributes,\r\n  NUMBER_32768: 32768 as MethodAttributes,\r\n  NUMBER_53248: 53248 as MethodAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MethodImplAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 8\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 4096\r\n  | 65535;\r\n\r\nexport const MethodImplAttributes = {\r\n  NUMBER_0: 0 as MethodImplAttributes,\r\n  NUMBER_1: 1 as MethodImplAttributes,\r\n  NUMBER_2: 2 as MethodImplAttributes,\r\n  NUMBER_3: 3 as MethodImplAttributes,\r\n  NUMBER_4: 4 as MethodImplAttributes,\r\n  NUMBER_8: 8 as MethodImplAttributes,\r\n  NUMBER_16: 16 as MethodImplAttributes,\r\n  NUMBER_32: 32 as MethodImplAttributes,\r\n  NUMBER_64: 64 as MethodImplAttributes,\r\n  NUMBER_128: 128 as MethodImplAttributes,\r\n  NUMBER_256: 256 as MethodImplAttributes,\r\n  NUMBER_512: 512 as MethodImplAttributes,\r\n  NUMBER_4096: 4096 as MethodImplAttributes,\r\n  NUMBER_65535: 65535 as MethodImplAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type ModelValidationState = 0 | 1 | 2 | 3;\r\n\r\nexport const ModelValidationState = {\r\n  NUMBER_0: 0 as ModelValidationState,\r\n  NUMBER_1: 1 as ModelValidationState,\r\n  NUMBER_2: 2 as ModelValidationState,\r\n  NUMBER_3: 3 as ModelValidationState,\r\n};\r\n","export * from './actionContext';\r\nexport * from './actionContextBooleanFunc';\r\nexport * from './actionDescriptor';\r\nexport * from './addressFamily';\r\nexport * from './asnEncodedData';\r\nexport * from './assembly';\r\nexport * from './asymmetricAlgorithm';\r\nexport * from './attributeRouteInfo';\r\nexport * from './bindingInfo';\r\nexport * from './bindingSource';\r\nexport * from './body';\r\nexport * from './body1';\r\nexport * from './callingConventions';\r\nexport * from './cancellationToken';\r\nexport * from './claim';\r\nexport * from './claimsIdentity';\r\nexport * from './claimsPrincipal';\r\nexport * from './connectionInfo';\r\nexport * from './constructorInfo';\r\nexport * from './controllerActionDescriptor';\r\nexport * from './controllerContext';\r\nexport * from './customAttributeData';\r\nexport * from './customAttributeNamedArgument';\r\nexport * from './customAttributeTypedArgument';\r\nexport * from './eventAttributes';\r\nexport * from './eventInfo';\r\nexport * from './exception';\r\nexport * from './fieldAttributes';\r\nexport * from './fieldInfo';\r\nexport * from './filterDescriptor';\r\nexport * from './genericParameterAttributes';\r\nexport * from './hostString';\r\nexport * from './httpContext';\r\nexport * from './httpRequest';\r\nexport * from './httpResponse';\r\nexport * from './iActionConstraintMetadata';\r\nexport * from './iCustomAttributeProvider';\r\nexport * from './iFilterMetadata';\r\nexport * from './iIdentity';\r\nexport * from './iModelBinderFactory';\r\nexport * from './iModelMetadataProvider';\r\nexport * from './iObjectModelValidator';\r\nexport * from './iPAddress';\r\nexport * from './iPropertyFilterProvider';\r\nexport * from './iResponseCookies';\r\nexport * from './iRouter';\r\nexport * from './iServiceProvider';\r\nexport * from './iSession';\r\nexport * from './iUrlHelper';\r\nexport * from './iValueProviderFactory';\r\nexport * from './intPtr';\r\nexport * from './jwtToken';\r\nexport * from './keySizes';\r\nexport * from './layoutKind';\r\nexport * from './like';\r\nexport * from './location';\r\nexport * from './locationTag';\r\nexport * from './loginApiRequest';\r\nexport * from './markLocationsRequest';\r\nexport * from './memberInfo';\r\nexport * from './memberTypes';\r\nexport * from './methodAttributes';\r\nexport * from './methodBase';\r\nexport * from './methodImplAttributes';\r\nexport * from './methodInfo';\r\nexport * from './modelError';\r\nexport * from './modelMetadataBooleanFunc';\r\nexport * from './modelStateEntry';\r\nexport * from './modelValidationState';\r\nexport * from './module';\r\nexport * from './moduleHandle';\r\nexport * from './oid';\r\nexport * from './parameterAttributes';\r\nexport * from './parameterDescriptor';\r\nexport * from './parameterInfo';\r\nexport * from './pathString';\r\nexport * from './pipeReader';\r\nexport * from './pipeWriter';\r\nexport * from './post';\r\nexport * from './postComment';\r\nexport * from './postPaginatedList';\r\nexport * from './postTag';\r\nexport * from './postType';\r\nexport * from './postUserLocation';\r\nexport * from './problemDetailsFactory';\r\nexport * from './propertyAttributes';\r\nexport * from './propertyInfo';\r\nexport * from './publicKey';\r\nexport * from './queryString';\r\nexport * from './registerRequest';\r\nexport * from './routeData';\r\nexport * from './runtimeFieldHandle';\r\nexport * from './runtimeMethodHandle';\r\nexport * from './runtimeTypeHandle';\r\nexport * from './safeWaitHandle';\r\nexport * from './securityRuleSet';\r\nexport * from './slimUserResponse';\r\nexport * from './stream';\r\nexport * from './stringStringKeyValuePair';\r\nexport * from './stringStringValuesKeyValuePair';\r\nexport * from './structLayoutAttribute';\r\nexport * from './tag';\r\nexport * from './tagController';\r\nexport * from './type';\r\nexport * from './typeAttributes';\r\nexport * from './typeInfo';\r\nexport * from './typeObjectKeyValuePair';\r\nexport * from './user';\r\nexport * from './userFollowing';\r\nexport * from './userLocation';\r\nexport * from './userMessage';\r\nexport * from './userResponse';\r\nexport * from './waitHandle';\r\nexport * from './webSocketManager';\r\nexport * from './x500DistinguishedName';\r\nexport * from './x509Certificate2';\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type ParameterAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 4\r\n  | 8\r\n  | 16\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 61440;\r\n\r\nexport const ParameterAttributes = {\r\n  NUMBER_0: 0 as ParameterAttributes,\r\n  NUMBER_1: 1 as ParameterAttributes,\r\n  NUMBER_2: 2 as ParameterAttributes,\r\n  NUMBER_4: 4 as ParameterAttributes,\r\n  NUMBER_8: 8 as ParameterAttributes,\r\n  NUMBER_16: 16 as ParameterAttributes,\r\n  NUMBER_4096: 4096 as ParameterAttributes,\r\n  NUMBER_8192: 8192 as ParameterAttributes,\r\n  NUMBER_16384: 16384 as ParameterAttributes,\r\n  NUMBER_32768: 32768 as ParameterAttributes,\r\n  NUMBER_61440: 61440 as ParameterAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type PropertyAttributes =\r\n  | 0\r\n  | 512\r\n  | 1024\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 62464;\r\n\r\nexport const PropertyAttributes = {\r\n  NUMBER_0: 0 as PropertyAttributes,\r\n  NUMBER_512: 512 as PropertyAttributes,\r\n  NUMBER_1024: 1024 as PropertyAttributes,\r\n  NUMBER_4096: 4096 as PropertyAttributes,\r\n  NUMBER_8192: 8192 as PropertyAttributes,\r\n  NUMBER_16384: 16384 as PropertyAttributes,\r\n  NUMBER_32768: 32768 as PropertyAttributes,\r\n  NUMBER_62464: 62464 as PropertyAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type SecurityRuleSet = 0 | 1 | 2;\r\n\r\nexport const SecurityRuleSet = {\r\n  NUMBER_0: 0 as SecurityRuleSet,\r\n  NUMBER_1: 1 as SecurityRuleSet,\r\n  NUMBER_2: 2 as SecurityRuleSet,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type TypeAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 16\r\n  | 24\r\n  | 32\r\n  | 128\r\n  | 256\r\n  | 1024\r\n  | 2048\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 65536\r\n  | 131072\r\n  | 196608\r\n  | 262144\r\n  | 264192\r\n  | 1048576\r\n  | 12582912;\r\n\r\nexport const TypeAttributes = {\r\n  NUMBER_0: 0 as TypeAttributes,\r\n  NUMBER_1: 1 as TypeAttributes,\r\n  NUMBER_2: 2 as TypeAttributes,\r\n  NUMBER_3: 3 as TypeAttributes,\r\n  NUMBER_4: 4 as TypeAttributes,\r\n  NUMBER_5: 5 as TypeAttributes,\r\n  NUMBER_6: 6 as TypeAttributes,\r\n  NUMBER_7: 7 as TypeAttributes,\r\n  NUMBER_8: 8 as TypeAttributes,\r\n  NUMBER_16: 16 as TypeAttributes,\r\n  NUMBER_24: 24 as TypeAttributes,\r\n  NUMBER_32: 32 as TypeAttributes,\r\n  NUMBER_128: 128 as TypeAttributes,\r\n  NUMBER_256: 256 as TypeAttributes,\r\n  NUMBER_1024: 1024 as TypeAttributes,\r\n  NUMBER_2048: 2048 as TypeAttributes,\r\n  NUMBER_4096: 4096 as TypeAttributes,\r\n  NUMBER_8192: 8192 as TypeAttributes,\r\n  NUMBER_16384: 16384 as TypeAttributes,\r\n  NUMBER_65536: 65536 as TypeAttributes,\r\n  NUMBER_131072: 131072 as TypeAttributes,\r\n  NUMBER_196608: 196608 as TypeAttributes,\r\n  NUMBER_262144: 262144 as TypeAttributes,\r\n  NUMBER_264192: 264192 as TypeAttributes,\r\n  NUMBER_1048576: 1048576 as TypeAttributes,\r\n  NUMBER_12582912: 12582912 as TypeAttributes,\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BASE_PATH = new InjectionToken<string>('basePath');\r\nexport const COLLECTION_FORMATS = {\r\n  csv: ',',\r\n  tsv: '   ',\r\n  ssv: ' ',\r\n  pipes: '|',\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { map, catchError, switchMap } from 'rxjs/operators';\r\n\r\nimport { AlertController } from '@ionic/angular';\r\nimport { BASE_PATH } from '../../../environments/environment';\r\nimport { AccountsService } from '../clients/api/accounts.service';\r\n\r\nconst TOKEN_KEY = 'ACCESS_TOKEN';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private alertController: AlertController,\r\n    private accountService: AccountsService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return from(this.accountService.getToken()).pipe(\r\n      switchMap((token) => {\r\n        if (token !== '') {\r\n          request = request.clone({\r\n            headers: request.headers.set('Authorization', 'Bearer ' + token),\r\n          });\r\n        }\r\n\r\n        // if (!request.headers.has('Content-Type')) {\r\n        //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        // }\r\n\r\n        return next.handle(request).pipe(\r\n          map((event: HttpEvent<any>) => {\r\n            if (event instanceof HttpResponse) {\r\n              // do nothing for now\r\n            }\r\n            return event;\r\n          }),\r\n          catchError((error: HttpErrorResponse) => {\r\n            const status = error.status;\r\n            const reason = error;\r\n\r\n            // this.presentAlert(status, reason);\r\n            return throwError(error);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  async presentAlert(status, reason) {\r\n    const alert = await this.alertController.create({\r\n      header: status + ' Error',\r\n      subHeader: 'Subtitle',\r\n      message: reason,\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(public router: Router, private zone: NgZone) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          // User is signed in.\r\n\r\n          resolve(true);\r\n        } else {\r\n          // No user is signed in.\r\n\r\n          resolve(false);\r\n          this.zone.run(() => {\r\n            this.router.navigate(['sign-in']);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'card-flip',\r\n  templateUrl: './card-flip.component.html',\r\n  styleUrls: ['./card-flip.component.scss'],\r\n})\r\nexport class CardFlipComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  flipped = false;\r\n\r\n  ngOnInit() {}\r\n\r\n  public flip() {\r\n    this.flipped = !this.flipped;\r\n  }\r\n}\r\n","<div class=\"flip-container\" [class.flipped]=\"flipped\">\r\n  <div class=\"flipper\">\r\n    <div class=\"front\">\r\n      <ng-content select=\".card-flip-front\"></ng-content>\r\n      <ng-content select=\"flip-card\"></ng-content>\r\n    </div>\r\n\r\n    <div class=\"back\">\r\n      <ng-content select=\".card-flip-back\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { Post, PostService } from 'src/app/backend/clients';\r\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\r\n\r\n@Component({\r\n  selector: 'post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.scss'],\r\n})\r\nexport class PostComponent implements OnInit {\r\n  postfaa: any;\r\n  constructor(\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private postSvc: PostService,\r\n    public modalController: ModalController\r\n  ) {\r\n    // this.route.queryParams.subscribe(params => {\r\n    //   if (this.router.getCurrentNavigation().extras.state) {\r\n    //     this.displayNewUser = true;\r\n    //     this.username = this.router.getCurrentNavigation().extras.state.newUser;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  @Input() posts: PostApi[] = [];\r\n\r\n  location = 'Charleston, SC';\r\n\r\n  // flipped = false;\r\n  likeIcon = '../../assets/UI/heart.svg';\r\n  likedIcon = '../../assets/UI/liked-icon.svg';\r\n  ngOnInit() {}\r\n\r\n  async openViewer(post) {\r\n    console.log(post);\r\n    this.postfaa = post;\r\n    const modal = await this.modalController.create({\r\n      component: ViewerModalComponent,\r\n      componentProps: {\r\n        src: this.postfaa\r\n      },\r\n      cssClass: 'ion-img-viewer',\r\n      keyboardClose: true,\r\n      showBackdrop: true\r\n    });\r\n \r\n    return await modal.present();\r\n  }\r\n  likePost(post: PostApi) {\r\n    if (!post.likedByCurrentUser) {\r\n      this.postSvc\r\n        .postsLikePostIdPost(post.postId.toString())\r\n        .pipe(take(1))\r\n        .subscribe();\r\n      post.likeCount++;\r\n      post.likedByCurrentUser = true;\r\n      console.log(post);\r\n    }\r\n  }\r\n\r\n  viewComments(post: PostApi) {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: false,\r\n      state: {\r\n        postId: post.postId,\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/comments', navigationExtras);\r\n    });\r\n  }\r\n\r\n  openProfile(post: PostApi) {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: false,\r\n      state: {\r\n        userId: post.fkUserId,\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n}\r\n","<ion-virtual-scroll [items]=\"posts\" approxItemHeight=\"500\">\r\n  <ion-card\r\n    *virtualItem=\"let post; let itemBounds = bounds\"\r\n    [ngClass]=\"{\r\n      'post-image-container': post.postContentLink,\r\n      'post-container': post.postContentLink === undefined\r\n    }\"\r\n  >\r\n    <!-- <card-flip #card> -->\r\n    <!-- <div class =\"card-flip-front\" *ngIf=\"!card.flipped\"> -->\r\n    <div class=\"card-flip-front\">\r\n      <ion-grid class=\"three-col-grid\">\r\n        <ion-row>\r\n          <ion-col size=\".6\">\r\n            <ion-avatar>\r\n              <img [src]=\"post.fkUser.avi\" (click)=\"openProfile(post)\" />\r\n            </ion-avatar>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-row>\r\n              <ion-card-title class=\"card-title\"\r\n                >{{ post.fkUser.firstname }}\r\n                {{ post.fkUser.lastname }}</ion-card-title\r\n              >\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-card-subtitle color=\"medium\">{{\r\n                post.location.locationName\r\n              }}</ion-card-subtitle>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\".4\">\r\n            <ion-buttons>\r\n              <ion-button class=\"ion-justify-content-center\">\r\n                <img src=\"../../assets/UI/optionsDots.svg\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <ion-card-content>\r\n        <ion-grid>\r\n          <ion-row class=\"ion-align-items-baseline\">\r\n            <ion-col>\r\n              {{ post.postCaption }}\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row *ngIf=\"post.postContentLink\">\r\n            <ion-col>\r\n              <div class=\"swiper-zoom-container\" >\r\n                <img ionImgViewer \r\n                  [src]=\"post.postContentLink\"\r\n                  height=\"300\"\r\n                  [alt]=\"post.name\"\r\n                  class=\"rcorners\"\r\n                  (click)=\"openViewer(post.postContentLink)\"\r\n                />\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row>\r\n            <ion-col>\r\n              <ion-buttons>\r\n                <ion-button\r\n                  class=\"ion-justify-content-center\"\r\n                  (click)=\"likePost(post)\"\r\n                >\r\n                  <img\r\n                    [src]=\"\r\n                      post.likedByCurrentUser == true ? likedIcon : likeIcon\r\n                    \"\r\n                  />\r\n                </ion-button>\r\n                {{ post.likeCount || 0 }}\r\n              </ion-buttons>\r\n            </ion-col>\r\n            <ion-col size=\"4\">\r\n              <ion-buttons>\r\n                <ion-button\r\n                  class=\"ion-justify-content-center\"\r\n                  (click)=\"viewComments(post)\"\r\n                >\r\n                  <img src=\"../../assets/UI/comments.svg\" />\r\n                </ion-button>\r\n                {{ post.commentCount || 0 }}\r\n              </ion-buttons>\r\n            </ion-col>\r\n            <ion-col class=\"align-self-center text-center\">\r\n              <ion-note>{{ post.postTime | dateAgo }}</ion-note>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n        <ion-buttons>\r\n          <!-- <ion-button class=\"btn\" flip-card (click)=\"card.flip()\"> -->\r\n          <ion-button class=\"btn\" (click)=\"viewComments(post)\">\r\n            View all comments\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-card-content>\r\n    </div>\r\n    <!-- <div class =\"card-flip-back\" *ngIf=\"card.flipped\">\r\n        <ion-card-content>\r\n          <ion-buttons>\r\n            <ion-button class=\"btn\" flip-card (click)=\"card.flip()\">\r\n              Back to post\r\n            </ion-button>\r\n          </ion-buttons>\r\n            <ion-virtual-scroll [items]=\"notifications\">\r\n            <ion-item  *virtualItem=\"let comment; let itemBounds = bounds;\" class=\"comment\">\r\n              <ion-grid class=\"comments-grid\">\r\n                <ion-row>\r\n                  <ion-col class=\"ion-align-self-center\">\r\n                    <ion-row class=\"ion-align-items-center\">\r\n                      <ion-col>\r\n                        <img src=\"../../../assets/stockPhoto.png\" class=\"user-pic img-center\">\r\n                      </ion-col>\r\n                    </ion-row>\r\n                  </ion-col>\r\n                  <ion-col size=\"2.2\">\r\n                    <ion-row>\r\n                      <ion-col>\r\n                        <p><strong>{{comment.name}}</strong> {{comment.verbage}} {{comment.isComment == true ? \"\\\"\" + comment.comment + \"\\\"\": \"\"}}</p>\r\n                      </ion-col>\r\n                    </ion-row>\r\n                    <ion-row>\r\n                      <ion-col>\r\n                        <ion-text color=\"medium\">{{comment.time}}</ion-text>\r\n                      </ion-col>\r\n                    </ion-row>          \r\n                  </ion-col>\r\n                </ion-row>\r\n              </ion-grid>\r\n            </ion-item>\r\n          </ion-virtual-scroll>\r\n        </ion-card-content>\r\n      </div> -->\r\n    <!-- </card-flip> -->\r\n  </ion-card>\r\n</ion-virtual-scroll>\r\n","export enum MapSelectionMode {\r\n  MULTI_VISIT,\r\n  MULTI_TO_VISIT,\r\n  VISITED,\r\n  TO_VISIT,\r\n  FILTER,\r\n  NONE,\r\n}\r\n","import { OnInit, Injectable } from '@angular/core';\r\nimport stateRaw from './json/states.json';\r\nimport countryRaw from './json/countries.json';\r\n\r\nexport interface Country {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface State {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IJsonCountries {\r\n  Countries: Country[];\r\n}\r\nexport interface IJsonStates {\r\n  States: State[];\r\n}\r\n\r\n@Injectable()\r\nexport class LocationSelector implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  public getStates() {\r\n    return stateRaw as IJsonStates;\r\n  }\r\n\r\n  public getCountries() {\r\n    return countryRaw as IJsonCountries;\r\n  }\r\n\r\n  public getAllLocations(): any[] {\r\n    const options: Array<{ id: string; name: string }> = [];\r\n\r\n    this.getCountries().Countries.forEach((e) => {\r\n      const name = e.name;\r\n      const id = e.id;\r\n      options.push({ id, name });\r\n    });\r\n\r\n    this.getStates().States.forEach((e) => {\r\n      const name = e.name;\r\n      const id = e.id;\r\n      options.push({ id, name });\r\n    });\r\n\r\n    return options.sort(this.compare);\r\n  }\r\n\r\n  public compare(a, b) {\r\n    let comparison = 0;\r\n    if (a.name > b.name) {\r\n      comparison = 1;\r\n    } else if (a.name < b.name) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  NgZone,\r\n  OnDestroy,\r\n  Injectable,\r\n} from '@angular/core';\r\n\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4maps from '@amcharts/amcharts4/maps';\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\nimport worldLow from '@amcharts/amcharts4-geodata/worldLow';\r\nimport am4geodata_usaLow from '@amcharts/amcharts4-geodata/usaLow';\r\n// import am4geodata_canadaLow from '@amcharts/amcharts4-geodata/canadaLow';\r\n// import am4geodata_russiaLow from '@amcharts/amcharts4-geodata/russiaLow';\r\nimport { MapSelectionMode } from './enums/map-selection-mode';\r\n\r\n@Injectable()\r\nexport class Map {\r\n  public selectedArr: Array<{\r\n    locationId: string;\r\n    status: string;\r\n  }>;\r\n\r\n  public changedAreas: Array<{\r\n    locationId: string;\r\n    status: string;\r\n  }>;\r\n\r\n  private chart: am4maps.MapChart;\r\n  private polygonArr: Array<am4maps.MapPolygon>;\r\n  private seriesArr: Array<am4maps.MapPolygonSeries>;\r\n  private selectedArea: am4maps.MapPolygon;\r\n  private selectionMode: MapSelectionMode;\r\n  private lastSelected: am4maps.MapPolygon;\r\n  private name: string;\r\n  private id: any;\r\n\r\n  constructor(private zone: NgZone) {\r\n    this.destroyMap();\r\n    this.selectedArea = new am4maps.MapPolygon();\r\n    this.polygonArr = new Array<am4maps.MapPolygon>();\r\n    this.selectedArr = new Array();\r\n    this.changedAreas = new Array();\r\n    this.seriesArr = new Array<am4maps.MapPolygonSeries>();\r\n    this.createMap(MapSelectionMode.NONE);\r\n    this.selectionMode = MapSelectionMode.NONE;\r\n  }\r\n\r\n  // static getInstance(zone: NgZone): Map {\r\n  //   if (!Map.instance) {\r\n  //     Map.instance = new Map(zone);\r\n  //   }\r\n\r\n  //   return Map.instance;\r\n  // }\r\n\r\n  get selectedId() {\r\n    return this.id;\r\n  }\r\n\r\n  set selectedId(id) {\r\n    this.id = id;\r\n  }\r\n\r\n  get selectedName() {\r\n    return this.name;\r\n  }\r\n\r\n  set selectedName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n async createMap(selectionMode: MapSelectionMode) {\r\n    am4core.disposeAllCharts();\r\n    this.zone.runOutsideAngular(() => {\r\n      let worldSeries: am4maps.MapPolygonSeries;\r\n      let usaSeries: am4maps.MapPolygonSeries;\r\n      // let canadaSeries: am4maps.MapPolygonSeries;\r\n      // let russiaSeries: am4maps.MapPolygonSeries;\r\n      let chart: am4maps.MapChart;\r\n\r\n        am4core.ready(() => {\r\n        am4core.useTheme(am4themes_animated);\r\n        am4core.options.autoDispose = true;\r\n        // Create map instance\r\n        chart = am4core.create(undefined, am4maps.MapChart);\r\n        chart.geodata = worldLow;\r\n        chart.projection = new am4maps.projections.Miller();\r\n        chart.zoomControl = new am4maps.ZoomControl();\r\n        chart.zoomControl.plusButton.hide();\r\n        chart.zoomControl.minusButton.hide();\r\n        chart.tapToActivate = true;\r\n        chart.seriesContainer.events.disableType('doublehit');\r\n        chart.chartContainer.background.events.disableType('doublehit');\r\n        chart.showOnInit = true;\r\n        // Home button\r\n        const homeButton = new am4core.Button();\r\n        homeButton.events.on('hit', () => {\r\n          chart.goHome();\r\n        });\r\n\r\n        homeButton.icon = new am4core.Sprite();\r\n        homeButton.padding(7, 5, 7, 5);\r\n        homeButton.width = 30;\r\n        homeButton.icon.path =\r\n          'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8';\r\n        homeButton.marginBottom = 10;\r\n        homeButton.parent = chart.zoomControl;\r\n        homeButton.insertAfter(chart.zoomControl.minusButton);\r\n\r\n        // Series for World map\r\n        worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        worldSeries.exclude = ['AQ'];\r\n        worldSeries.useGeodata = true;\r\n        this.seriesArr.push(worldSeries);\r\n        this.polygonArr.push(worldSeries.mapPolygons.template);\r\n\r\n        // Series for United States map\r\n        usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        usaSeries.geodata = am4geodata_usaLow;\r\n        this.seriesArr.push(usaSeries);\r\n        this.polygonArr.push(usaSeries.mapPolygons.template);\r\n\r\n        // // Series for Canada map\r\n        // canadaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        // canadaSeries.geodata = am4geodata_canadaLow;\r\n        // this.seriesArr.push(canadaSeries);\r\n        // this.polygonArr.push(canadaSeries.mapPolygons.template);\r\n\r\n        // // Series for Russia map\r\n        // russiaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        // russiaSeries.geodata = am4geodata_russiaLow;\r\n        // this.seriesArr.push(russiaSeries);\r\n        // this.polygonArr.push(russiaSeries.mapPolygons.template);\r\n      });\r\n\r\n      this.setupTemplates();\r\n      this.setSelectionMode(selectionMode);\r\n      this.chart = chart;\r\n    });\r\n  }\r\n\r\n  addMapToDiv(selectionMode: MapSelectionMode, divName: string) {\r\n    this.selectionMode = selectionMode;\r\n    this.setSelectionMode(this.selectionMode);\r\n    this.chart.moveHtmlContainer(divName);\r\n  }\r\n\r\n  setupTemplates() {\r\n    this.polygonArr.forEach((polygonTemplate) => {\r\n      polygonTemplate.tooltipText = '{name}';\r\n      polygonTemplate.nonScalingStroke = true;\r\n      polygonTemplate.applyOnClones = true;\r\n      polygonTemplate.strokeOpacity = 0.5;\r\n\r\n      const activeState = polygonTemplate.states.create('active');\r\n\r\n      const visited = polygonTemplate.states.create('visited');\r\n      visited.properties.fill = am4core.color('#128C7E');\r\n\r\n      const toVisit = polygonTemplate.states.create('toVisit');\r\n      toVisit.properties.fill = am4core.color('#F05E23');\r\n\r\n      const filter = polygonTemplate.states.create('filter');\r\n      filter.properties.fill = am4core.color('yellow');\r\n\r\n\r\n      const defaultState = polygonTemplate.states.create('default');\r\n      defaultState.properties.fill = am4core.color('#d9d9d9');\r\n\r\n      polygonTemplate.events.on('hit', (ev) => {\r\n        const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n\r\n        this.selectedArea = data;\r\n        // this.selectedName = data.name;\r\n\r\n        this.selectedId = data.id;\r\n\r\n        if (this.lastSelected !== ev.target) {\r\n          ev.target.series.chart.zoomToMapObject(ev.target);\r\n          this.lastSelected = ev.target;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setSelectionMode(selectionMode: MapSelectionMode) {\r\n    this.selectionMode = selectionMode;\r\n    // Allow only one location to be hightlighted at a time\r\n    if (this.selectionMode === MapSelectionMode.FILTER) {\r\n      this.polygonArr.forEach((polygonTemplate) => {\r\n        polygonTemplate.events.on('doublehit', (ev) => {\r\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n          this.resetAllLocations();\r\n          this.changeVisitStatus(data.id, 'filter');\r\n        });\r\n      });\r\n    } else if (this.selectionMode !== MapSelectionMode.NONE) {\r\n      this.polygonArr.forEach((polygonTemplate) => {\r\n        polygonTemplate.events.off('doublehit');\r\n        polygonTemplate.events.on('doublehit', (ev) => {\r\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n          if (this.selectionMode === MapSelectionMode.TO_VISIT) {\r\n            this.changeVisitStatus(data.id, 'toVisit');\r\n          } else {\r\n            this.changeVisitStatus(data.id, 'visited');\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  zoomToLocation(locationId: string) {\r\n    for (const series of this.seriesArr) {\r\n      const result = series.getPolygonById(locationId);\r\n\r\n      if (result !== undefined) {\r\n        this.chart.zoomToMapObject(result);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  zoomHome() {\r\n    this.chart.goHome();\r\n  }\r\n\r\n  resetAllLocations() {\r\n    this.changedAreas.forEach((location) => {\r\n      for (const series of this.seriesArr) {\r\n        const result = series.getPolygonById(location.locationId);\r\n        if (result !== undefined) {\r\n          result.setState('default');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async changeVisitStatus(locationId: string, status: string, init: boolean = false) {\r\n    for (const series of this.seriesArr) {\r\n      const result = series.getPolygonById(locationId);\r\n\r\n      if (result !== undefined) {\r\n        this.selectedArea = result;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const locationInArray = this.changedAreas.find(\r\n      (d) => d.locationId === locationId\r\n    );\r\n    if (locationInArray !== undefined) {\r\n      const index = this.changedAreas.indexOf(locationInArray, 0);\r\n      if (index > -1) {\r\n        this.changedAreas.splice(index, 1);\r\n        if (status === 'filter') {\r\n          this.selectedArea.setState('filter');\r\n        } else {\r\n          this.selectedArea.setState('default');\r\n        }\r\n      }\r\n    } else {\r\n      if (status === 'visited') {\r\n        this.selectedArea.setState('visited');\r\n      } else if (status === 'toVisit') {\r\n        this.selectedArea.setState('toVisit');\r\n      } else if (status === 'filter') {\r\n        this.selectedArea.setState('filter');\r\n      }\r\n      this.selectedArr.push({ locationId, status });\r\n\r\n      // if the map already had locations, do not add them to this array\r\n      // this array is only the locations that have changed post initialization\r\n      if (!init) {\r\n        this.changedAreas.push({ locationId, status });\r\n      }\r\n    }\r\n\r\n    // this.chart.reinit();\r\n  }\r\n\r\ndestroyMap() {\r\n    this.zone.runOutsideAngular(() => {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPostImagePage } from './add-post-image.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPostImagePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostImagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPostImagePageRoutingModule } from './add-post-image-routing.module';\r\n\r\nimport { AddPostImagePage } from './add-post-image.page';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddPostImagePageRoutingModule,\r\n    IonicSelectableModule,\r\n  ],\r\n  declarations: [AddPostImagePage],\r\n})\r\nexport class AddPostImagePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CameraResultType, Photo, Camera } from '@capacitor/camera';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { take } from 'rxjs/operators';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\r\n\r\n@Component({\r\n  selector: 'app-add-post-image',\r\n  templateUrl: './add-post-image.page.html',\r\n  styleUrls: ['./add-post-image.page.scss'],\r\n})\r\nexport class AddPostImagePage implements OnInit {\r\n  public selectedLocation: { id: string; name: string } = undefined;\r\n  public postText: string = undefined;\r\n  public locationOptions: { id: string; name: string }[] = [];\r\n  public userImage = '../../../assets/UI/clickToUpload.jpg';\r\n  image: Photo;\r\n  blob: Blob;\r\n  error: boolean;\r\n\r\n  constructor(\r\n    public loadingController: LoadingController,\r\n    private modalCtrl: ModalController,\r\n    private selector: LocationSelector,\r\n    private postService: PostService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.locationOptions = this.selector.getAllLocations();\r\n  }\r\n\r\n  filterLocations(text: string) {\r\n    return this.locationOptions.filter((option) => {\r\n      return option.name.toLowerCase().indexOf(text) !== -1;\r\n    });\r\n  }\r\n\r\n  searchLocations(event: {\r\n    component: IonicSelectableComponent;\r\n    text: string;\r\n  }) {\r\n    const text = event.text.trim().toLowerCase();\r\n    event.component.startSearch();\r\n\r\n    if (!text) {\r\n      event.component.items = [];\r\n      event.component.endSearch();\r\n      return;\r\n    }\r\n\r\n    event.component.items = this.filterLocations(text);\r\n    event.component.endSearch();\r\n  }\r\n\r\n  async post() {\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    this.postService\r\n      .postsNewPostForm(\r\n        this.postText,\r\n        'image',\r\n        this.selectedLocation.id,\r\n        this.blob\r\n      )\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          loading.dismiss();\r\n          this.dismiss();\r\n        },\r\n        (err) => {\r\n          this.error = true;\r\n          loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n\r\n  b64toBlob(dataURI) {\r\n    const byteString = atob(dataURI.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\r\n  }\r\n\r\n  async getUserImage() {\r\n    this.image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: CameraResultType.DataUrl,\r\n    });\r\n    // image.webPath will contain a path that can be set as an image src.\r\n    // You can access the original file using image.path, which can be\r\n    // passed to the Filesystem API to read the raw data of the image,\r\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\r\n    const imageUrl = this.image.dataUrl;\r\n    // Can be set to the src of an image now\r\n    this.userImage = imageUrl;\r\n    this.b64toBlob(this.image.dataUrl);\r\n  }\r\n}\r\n","\r\n   \r\n    \r\n<ion-content no-bounce>\r\n \r\n  <div class=\"splash\">\r\n    <ion-row class=\"ion-align-items-baseline\">\r\n      <ion-col class=\"ion-justify-content-start\">\r\n        <ion-buttons>\r\n          <ion-back-button defaultHref=\"/tab1\"   (click)=\"dismiss()\" style=\"color: beige;\"></ion-back-button>\r\n        </ion-buttons>\r\n      </ion-col>  \r\n    </ion-row> \r\n    <h1>Upload Image</h1>\r\n    <h3>Everyone loves a nice travel related photo!</h3>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <div>\r\n            <ion-button\r\n            style=\"margin: 0px;\r\n            padding: 0px;\"\r\n            class=\"submit-button\"\r\n            expand=\"block\"\r\n            type=\"submit\"\r\n            (click)=\"getUserImage()\"\r\n            >Click here to Upload Image</ion-button\r\n          >\r\n            <!-- <img\r\n              (click)=\"getUserImage()\"\r\n              height=\"300\"\r\n              [src]=\"userImage\"\r\n              class=\"rcorners\"\r\n            /> -->\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-textarea\r\n              [(ngModel)]=\"postText\"\r\n              rows=\"10\"\r\n              placeholder=\"Caption*\"\r\n              maxlength=\"250\"\r\n              autocapitalize=\"true\"\r\n              required\r\n            ></ion-textarea>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-label>Location*</ion-label>\r\n            <ionic-selectable\r\n              [(ngModel)]=\"selectedLocation\"\r\n              [items]=\"locationOptions\"\r\n              itemValueField=\"id\"\r\n              itemTextField=\"name\"\r\n              [canSearch]=\"true\"\r\n            >\r\n            </ionic-selectable>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n    <div class=\"validation-errors\">\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\r\n        when creating post\r\n      </div>\r\n    </div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"post()\"\r\n        [disabled]=\"!postText && selectedLocation !== undefined\"\r\n        >Add post</ion-button\r\n      >\r\n        </ion-col>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      >\r\n      </ion-col>\r\n      </ion-row>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPostPage } from './add-post.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPostPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\r\n\r\nimport { AddPostPage } from './add-post.page';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddPostPageRoutingModule,\r\n    IonicSelectableModule,\r\n  ],\r\n  declarations: [AddPostPage],\r\n})\r\nexport class AddPostPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { take } from 'rxjs/operators';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { CreatePostRequest } from 'src/app/backend/clients/model/createPostRequest';\r\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\r\n\r\n@Component({\r\n  selector: 'app-add-post',\r\n  templateUrl: './add-post.page.html',\r\n  styleUrls: ['./add-post.page.scss'],\r\n})\r\nexport class AddPostPage implements OnInit {\r\n  public selectedLocation: { id: string; name: string } = undefined;\r\n  public postText: string = undefined;\r\n  public locationOptions: { id: string; name: string }[] = [];\r\n  error: boolean;\r\n\r\n  constructor(\r\n    public loadingController: LoadingController,\r\n    private modalCtrl: ModalController,\r\n    private selector: LocationSelector,\r\n    private postService: PostService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.locationOptions = this.selector.getAllLocations();\r\n  }\r\n\r\n  filterLocations(text: string) {\r\n    return this.locationOptions.filter((option) => {\r\n      return option.name.toLowerCase().indexOf(text) !== -1;\r\n    });\r\n  }\r\n\r\n  searchLocations(event: {\r\n    component: IonicSelectableComponent;\r\n    text: string;\r\n  }) {\r\n    const text = event.text.trim().toLowerCase();\r\n    event.component.startSearch();\r\n\r\n    if (!text) {\r\n      event.component.items = [];\r\n      event.component.endSearch();\r\n      return;\r\n    }\r\n\r\n    event.component.items = this.filterLocations(text);\r\n    event.component.endSearch();\r\n  }\r\n\r\n  async post() {\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    this.postService\r\n      .postsNewPostForm(this.postText, 'text', this.selectedLocation.id)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          loading.dismiss();\r\n          this.dismiss();\r\n        },\r\n        (err) => {\r\n          this.error = true;\r\n          loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n}\r\n","\r\n<ion-content no-bounce>\r\n \r\n\r\n  <div class=\"splash\">\r\n    <ion-row class=\"ion-align-items-baseline\">\r\n      <ion-col class=\"ion-justify-content-start\">\r\n        <ion-buttons>\r\n          <ion-back-button defaultHref=\"/tab1\"   (click)=\"dismiss()\" style=\"color: beige;\"></ion-back-button>\r\n        </ion-buttons>\r\n      </ion-col>  \r\n    </ion-row> \r\n    <h1>Create Post</h1>\r\n    <h3>\r\n      Looking for travel advice? Want to share something interesting about a\r\n      destination? Let's hear it!\r\n    </h3>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-textarea\r\n              [(ngModel)]=\"postText\"\r\n              rows=\"10\"\r\n              placeholder=\"Travel related content*\"\r\n              maxlength=\"250\"\r\n              autocapitalize=\"true\"\r\n              required\r\n            ></ion-textarea>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-label>Location*</ion-label>\r\n            <ionic-selectable\r\n              [(ngModel)]=\"selectedLocation\"\r\n              [items]=\"locationOptions\"\r\n              itemValueField=\"id\"\r\n              itemTextField=\"name\"\r\n              [canSearch]=\"true\"\r\n            >\r\n            </ionic-selectable>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n    <div class=\"validation-errors\">\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\r\n        when creating post\r\n      </div>\r\n    </div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"post()\"\r\n        [disabled]=\"!postText && !selectedLocation\"\r\n        >Add post</ion-button\r\n      ></ion-col>\r\n    <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      ></ion-col>\r\n      </ion-row>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MarkLocationPage } from './mark-location.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MarkLocationPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MarkLocationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MarkLocationPageRoutingModule } from './mark-location-routing.module';\r\n\r\nimport { MarkLocationPage } from './mark-location.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MarkLocationPageRoutingModule,\r\n  ],\r\n  declarations: [MarkLocationPage],\r\n})\r\nexport class MarkLocationPageModule {}\r\n","import { Component, Input, NgZone } from '@angular/core';\r\nimport { AccountsService, MarkLocationsRequest } from 'src/app/backend/clients';\r\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\r\nimport { Map } from 'src/app/objects/map';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mark-location',\r\n  templateUrl: './mark-location.page.html',\r\n  styleUrls: ['./mark-location.page.scss'],\r\n})\r\nexport class MarkLocationPage {\r\n  // Data passed in by componentProps\r\n  @Input() selectionMode: MapSelectionMode;\r\n  public locationRequest = {\r\n    locations: {},\r\n  } as MarkLocationsRequest;\r\n  private map: Map;\r\n  public titleTextVisited = 'Where have you visited?';\r\n  public titleTextToVisit = 'Bucketlist';\r\n  public subtitleTextVisited = `Show your friends (and yourself) where you've been!`;\r\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\r\n  public displayVisitedText = true;\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController,\r\n    private loadingController: LoadingController,\r\n    private zone: NgZone,\r\n    private accountService: AccountsService\r\n  ) {}\r\n\r\n  async ionViewWillEnter() {\r\n    this.map = new Map(this.zone);\r\n    this.map.addMapToDiv(this.selectionMode, 'mark-map');\r\n\r\n    if (this.selectionMode === MapSelectionMode.TO_VISIT) {\r\n      this.displayVisitedText = false;\r\n    }\r\n\r\n    const userLocations = this.accountService.storedUserLocations;\r\n\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    this.zone.run(() => {\r\n      userLocations.forEach(location => {\r\n        this.map.changeVisitStatus(location.fkLocation.locationCode, location.status, true);\r\n      });\r\n      loading.dismiss();\r\n    });\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    this.map.destroyMap();\r\n  }\r\n\r\n  mapLocationsToRequest() {\r\n    this.map.changedAreas.forEach((location) => {\r\n      this.locationRequest.locations[location.locationId] = location.status;\r\n    });\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.mapLocationsToRequest();\r\n    this.accountService\r\n      .accountUpdateLocationsPost(this.locationRequest)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          this.dismiss();\r\n        }\r\n        // (error) => {\r\n        //   this.hasError = true;\r\n        //   this.error = 'An unexpected error has occurred.';\r\n        // }\r\n      );\r\n  }\r\n}\r\n","\r\n     \r\n    \r\n<ion-content no-bounce>\r\n \r\n \r\n  <div class=\"splash\">\r\n    <ion-row class=\"ion-align-items-baseline\">\r\n    <ion-col class=\"ion-justify-content-start\">\r\n      <ion-buttons>\r\n        <ion-back-button defaultHref=\"/tab1\"   (click)=\"dismiss()\" style=\"color: beige;\"></ion-back-button>\r\n      </ion-buttons>\r\n    </ion-col>  \r\n  </ion-row> \r\n    <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\r\n    <h3>\r\n      Click a location on the map to zoom to it. Double click the location to\r\n      select/deselect it.\r\n    </h3>\r\n    <div id=\"mark-map\" class=\"chartdiv\"></div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        >Update my map</ion-button\r\n      >\r\n      </ion-col>\r\n      <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      >\r\n      </ion-col>\r\n      </ion-row>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPage } from './add.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPageRoutingModule } from './add-routing.module';\r\n\r\nimport { AddPage } from './add.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, AddPageRoutingModule],\r\n  declarations: [AddPage],\r\n})\r\nexport class AddPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { MarkLocationPage } from '../../mark-location/mark-location.page';\r\nimport { AddPostPage } from '../../add-post/add-post.page';\r\nimport { AddPostImagePage } from '../../add-post-image/add-post-image.page';\r\n\r\n@Component({\r\n  selector: 'add-modal',\r\n  templateUrl: './add.page.html',\r\n  styleUrls: ['./add.page.scss'],\r\n})\r\nexport class AddPage {\r\n  constructor(public router: Router, private modalCtrl: ModalController) {}\r\n\r\n  async markLocationsToVisit() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: MarkLocationPage,\r\n      componentProps: {\r\n        selectionMode: MapSelectionMode.TO_VISIT,\r\n      },\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async markVisitedLocations() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: MarkLocationPage,\r\n      componentProps: {\r\n        selectionMode: MapSelectionMode.VISITED,\r\n      },\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addNewPost() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: AddPostPage,\r\n      componentProps: {},\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addNewImage() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: AddPostImagePage,\r\n      componentProps: {},\r\n    });\r\n    return await modal.present();\r\n  }\r\n}\r\n","<ion-content lines=\"none\" [scrollY]=\"true\">\r\n  <ion-item lines=\"none\"><b>Mark Location</b></ion-item>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/visitedIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col size=\"10\" (click)=\"markVisitedLocations()\"\r\n          ><b>Visited</b></ion-col\r\n        >\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/toVisitIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col size=\"10\" (click)=\"markLocationsToVisit()\"\r\n          ><b>Wants to visit</b></ion-col\r\n        >\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-item lines=\"none\"><b>Add Post</b></ion-item>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/pictureIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col (click)=\"addNewImage()\" size=\"10\"><b>Image</b></ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/postIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col (click)=\"addNewPost()\" size=\"10\"><b>Post</b></ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ForgotPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\r\nimport { AccountsService } from 'src/app/backend/clients/api/accounts.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n  userEmail = '';\r\n\r\n  constructor(\r\n    private accountService: AccountsService,\r\n    private modalController: ModalController,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async closeModal() {\r\n    await this.modalController.dismiss();\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.accountService.PasswordRecover(this.userEmail).then(() =>\r\n      this.closeModal()\r\n    );\r\n  }\r\n}\r\n","<ion-content [scrollY]=\"false\">\r\n  <div class=\"center-any-object\">\r\n    <h3 >Reset Password</h3>\r\n  </div>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-item class=\"roundedInput\">\r\n          <ion-input\r\n            autocapitalize=\"true\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            [(ngModel)]=\"userEmail\"\r\n            required\r\n          ></ion-input>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button class=\"reset-button\" expand=\"block\" (click)=\"onSubmit()\"\r\n          >Submit</ion-button\r\n        >\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-button\r\n          color=\"medium\"\r\n          expand=\"block\"\r\n          (click)=\"closeModal()\"\r\n          >Close</ion-button\r\n        >\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MapFilterPage } from './map-filter.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MapFilterPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MapFilterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MapFilterPageRoutingModule } from './map-filter-routing.module';\r\n\r\nimport { MapFilterPage } from './map-filter.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Ng2SearchPipeModule,\r\n    MapFilterPageRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [MapFilterPage],\r\n})\r\nexport class MapFilterPageModule {}\r\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\r\nimport { Map } from '../../../objects/map';\r\nimport { MapSelectionMode } from '../../../objects/enums/map-selection-mode';\r\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { AccountsService } from 'src/app/backend/clients';\r\nimport  * as data from  '../../../objects/location-json/json/countries.json';\r\nimport {ModalService} from '../../../services/modal.service';\r\n\r\n@Component({\r\n  selector: 'map-filter',\r\n  templateUrl: './map-filter.page.html',\r\n  styleUrls: ['./map-filter.page.scss'],\r\n})\r\nexport class MapFilterPage {\r\n  private map: Map;\r\n  public selectionMode: MapSelectionMode = MapSelectionMode.FILTER;\r\n  public filter = '';\r\n  public selectedLocation: string;\r\n\r\n  \r\n  data: any;\r\n  country: any;\r\n  searchTerm: any;\r\n  filterTerm: string;\r\n   countries = (data as any).default;\r\n  mapvalue: any;\r\n  hide: boolean;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private loadingController: LoadingController,\r\n    private accountService: AccountsService,\r\n    private zone: NgZone,\r\n    public myservice: ModalService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.hide = false;\r\n  }\r\n\r\n  dataas(data) {\r\n    this.hide = false;\r\n    this.map.zoomToLocation(data.id);\r\n  }\r\n\r\n  searchvalue() {\r\n    this.hide = true;\r\n    this.mapvalue = this.filterTerm;\r\n    this.map.zoomToLocation(this.mapvalue);\r\n  }\r\n  \r\n  async ionViewWillEnter() {\r\n    this.map = new Map(this.zone);\r\n    this.map.addMapToDiv(this.selectionMode, 'filter-map');\r\n\r\n    this.filter = this.navParams.data.filter;\r\n\r\n    let userLocations;\r\n    if (this.navParams.data.userLocations) {\r\n      userLocations = JSON.parse(this.navParams.data.userLocations);\r\n    } else {\r\n      userLocations = this.accountService.storedUserLocations;\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    this.zone.run(() => {\r\n      userLocations.forEach(location => {\r\n        this.map.changeVisitStatus(location.fkLocation.locationCode, location.status, true);\r\n      });\r\n      loading.dismiss();\r\n    });\r\n\r\n  }\r\n\r\n  show(e) {\r\n    console.log(e);\r\n    this.myservice.dis = e;\r\n    console.log(this.myservice.dis);\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    await this.closeModal();\r\n  }\r\n\r\n  async resetFilter() {\r\n    this.filter = '';\r\n    await this.closeModal();\r\n  }\r\n\r\n  async filterSubmit() {\r\n    if (this.map.selectedArr.length > 0) {\r\n      this.filter = this.map.changedAreas[0].locationId;\r\n    }\r\n    await this.closeModal();\r\n  }\r\n\r\n  async closeModal() {\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n    await loading.present();\r\n    const onClosedData = this.filter;\r\n    this.map.destroyMap();\r\n    loading.dismiss();\r\n    await this.modalController.dismiss(onClosedData);\r\n  }\r\n}\r\n","<ion-content [scrollY]=\"false\">\r\n  <div class=\"map-search-container\">\r\n    <ion-searchbar (focusout)=\"show(true)\"  (search)=\"searchvalue()\" (focusin)=\"show(false)\"  spellcheck=\"true\"  [(ngModel)]=\"filterTerm\"></ion-searchbar>\r\n    <ion-list  *ngIf=\"hide == true\">\r\n      <ion-item *ngFor=\"let data of countries.Countries | filter:filterTerm\" (click)=\"dataas(data)\">\r\n       \r\n        <ion-label>{{data.name}}</ion-label>\r\n      \r\n      </ion-item>\r\n    </ion-list>\r\n  </div>\r\n  <div id=\"filter-map\" class=\"chartdiv\" onload=\"onLoad()\"></div>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button color=\"medium\" expand=\"block\" (click)=\"resetFilter()\"\r\n          >Reset</ion-button\r\n        >\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-button\r\n          class=\"filter-button\"\r\n          expand=\"block\"\r\n          (click)=\"filterSubmit()\"\r\n          >Filter</ion-button\r\n        >\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SearchPage } from './search.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SearchPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SearchPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SearchPageRoutingModule } from './search-routing.module';\r\n\r\nimport { SearchPage } from './search.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, SearchPageRoutingModule],\r\n  declarations: [SearchPage],\r\n})\r\nexport class SearchPageModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { UserService } from 'src/app/backend/clients';\r\nimport { take } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SlimUserResponse } from 'src/app/backend/clients/model/slimUserResponse';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'search',\r\n  templateUrl: './search.page.html',\r\n  styleUrls: ['./search.page.scss'],\r\n})\r\nexport class SearchPage implements OnInit {\r\n  data: any;\r\n  constructor(\r\n    public viewCtrl: ModalController,\r\n    public userService: UserService,\r\n    private zone: NgZone,\r\n    private router: Router\r\n  ) {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  people: BehaviorSubject<SlimUserResponse[]> = new BehaviorSubject([]);\r\n  searchQuery = '';\r\n\r\n  ngOnInit() {\r\n    // fetch('./app/objects/location-json/json/countries.json').then(res => res.json())\r\n    // .then(json => {\r\n    //   this.data = json;\r\n    //   console.log(json);\r\n    // });\r\n  \r\n  }\r\n\r\n  search() {\r\n    this.userService\r\n      .userSearchQueryGet(this.searchQuery)\r\n      .pipe(take(1))\r\n      .subscribe((users) => {\r\n        this.people.next(users);\r\n      });\r\n  }\r\n\r\n  goToProfile(user: SlimUserResponse) {\r\n    console.log(user);\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      skipLocationChange: true,\r\n      state: {\r\n        userId: user.id,\r\n      },\r\n    };\r\n    const onClosedData = user.id;\r\n    this.viewCtrl.dismiss(onClosedData);\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n\r\n  dismiss() {\r\n    this.viewCtrl.dismiss();\r\n  }\r\n}\r\n","<ion-toolbar>\r\n  <ion-buttons slot=\"end\">\r\n    <ion-button large (click)=\"dismiss()\" slot=\"end\">\r\n      <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\r\n    </ion-button>\r\n  </ion-buttons>\r\n</ion-toolbar>\r\n\r\n<ion-searchbar\r\n  spellcheck=\"true\"\r\n  (search)=\"search()\"\r\n  [(ngModel)]=\"searchQuery\"\r\n></ion-searchbar>\r\n<ion-content>\r\n  <ion-virtual-scroll [items]=\"people | async\">\r\n    <ion-card\r\n      (click)=\"goToProfile(item)\"\r\n      *virtualItem=\"let item; let itemBounds = bounds;\"\r\n    >\r\n      <ion-grid class=\"search-grid\">\r\n        <ion-row>\r\n          <ion-col class=\"ion-align-self-center\">\r\n            <ion-row class=\"ion-align-items-center\">\r\n              <ion-col>\r\n                <img [src]=\"item.avi\" class=\"user-pic img-center\" />\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\"1.5\" class=\"ion-align-self-center\">\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-text color=\"dark\"\r\n                  >{{item.firstName}} {{item.lastName}}</ion-text\r\n                >\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-text>{{item.residenceLocation}}</ion-text>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-card>\r\n  </ion-virtual-scroll>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserSettingsPage } from './user-settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserSettingsPage,\r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserSettingsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserSettingsPageRoutingModule } from './user-settings-routing.module';\r\n\r\nimport { UserSettingsPage } from './user-settings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    UserSettingsPageRoutingModule,\r\n  ],\r\n  declarations: [UserSettingsPage],\r\n})\r\nexport class UserSettingsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Photo, Camera, CameraResultType } from '@capacitor/camera';\r\nimport { LoadingController, ModalController, NavParams ,NavController} from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { Router,  } from '@angular/router';\r\n\r\nimport {\r\n  AccountsService,\r\n  UserResponse,\r\n} from 'src/app/backend/clients';\r\n\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.page.html',\r\n  styleUrls: ['./user-settings.page.scss'],\r\n})\r\nexport class UserSettingsPage implements OnInit {\r\n  userImage = '../../../assets/UI/profilePicUpload.svg';\r\n\r\n  aboutForm: FormGroup;\r\n\r\n  image: Photo;\r\n\r\n  blob: Blob = undefined;\r\n\r\n  user: UserResponse;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public loadingController: LoadingController,\r\n    private route: ActivatedRoute,\r\n    public navCtrl: NavController,\r\n    private modalController: ModalController,\r\n    private accountService: AccountsService,\r\n  ) {\r\n    // this.route.params.subscribe(params => {\r\n      this.route.params.subscribe(params => {\r\n        this.user = params;\r\n        console.log(params);\r\n      });\r\n    // this.user = this.navParams.data.user;\r\n    // this.userImage = this.user.avi;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const birthPlace = new FormControl('');\r\n    const residence = new FormControl('');\r\n    const education = new FormControl('');\r\n    const title = new FormControl('');\r\n    this.aboutForm = new FormGroup({\r\n      birthPlace,\r\n      residence,\r\n      education,\r\n      title,\r\n    });\r\n  }\r\n  back(){\r\n    this.router.navigateByUrl('/user-profile');\r\n  }\r\n  async onSubmit() {\r\n    const loading = await this.loadingController.create({\r\n      duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    const title = this.aboutForm.controls.title.value === ''\r\n      ? this.user.title\r\n      : this.aboutForm.controls.title.value;\r\n    const education = this.aboutForm.controls.education.value === ''\r\n      ? this.user.education\r\n      : this.aboutForm.controls.education.value;\r\n    const birthPlace = this.aboutForm.controls.birthPlace.value === ''\r\n      ? this.user.birthLocation\r\n      : this.aboutForm.controls.birthPlace.value;\r\n    const residence = this.aboutForm.controls.residence.value === ''\r\n      ? this.user.residenceLocation\r\n      : this.aboutForm.controls.residence.value;\r\n\r\n    // todo create a forkjoin or something here to make these run together\r\n    this.accountService\r\n      .accountUpdatePost(\r\n        this.user.firstname,\r\n        this.user.lastname,\r\n        title,\r\n        education,\r\n        birthPlace,\r\n        residence,\r\n      )\r\n      .pipe(take(1))\r\n      .subscribe(async () => {\r\n        if (this.blob !== undefined) {\r\n          this.accountService\r\n            .accountUpdateProfileImagePost(this.blob)\r\n            .pipe(take(1))\r\n            .subscribe(() => {});\r\n        }\r\n        await loading.dismiss();\r\n        // this.dismiss();\r\n       // alert('hii');\r\n        this.router.navigateByUrl('/user-profile');\r\n        // this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n      });\r\n  }\r\n\r\n  b64toBlob(dataURI) {\r\n    const byteString = atob(dataURI.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i += 1) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\r\n  }\r\n\r\n  async getUserImage() {\r\n    this.image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: CameraResultType.DataUrl,\r\n    });\r\n    // image.webPath will contain a path that can be set as an image src.\r\n    // You can access the original file using image.path, which can be\r\n    // passed to the Filesystem API to read the raw data of the image,\r\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\r\n    const imageUrl = this.image.dataUrl;\r\n    // Can be set to the src of an image now\r\n    this.userImage = imageUrl;\r\n    this.b64toBlob(this.image.dataUrl);\r\n  }\r\n\r\n  dismiss() {\r\n    // this.modalController.dismiss();\r\n  }\r\n\r\n  async logout() {\r\n    await this.accountService.logout();\r\n    this.dismiss();\r\n  }\r\n}\r\n","<ion-content no-bounce>\r\n  <div class=\"splash\">\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"secondary\">\r\n          <ion-button color=\"dark\" (click)=\"back()\">\r\n            <ion-icon name=\"arrow-back\" ></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button color=\"dark\" (click)=\"logout()\">\r\n            <ion-icon name=\"log-out-outline\"></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <h1>Update profile</h1>\r\n    <form [formGroup]=\"aboutForm\" (ngSubmit)=\"onSubmit()\">\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col size=\"3\">\r\n            <ion-avatar>\r\n              <img (click)=\"getUserImage()\" [src]=\"userImage\" />\r\n            </ion-avatar>\r\n          </ion-col>\r\n          <ion-col>\r\n            <h3>Change your profile pic</h3>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"floating\">Birthplace</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.birthLocation\"\r\n                type=\"text\"\r\n                formControlName=\"birthPlace\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"floating\">Current Residence</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.residenceLocation\"\r\n                type=\"text\"\r\n                formControlName=\"residence\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"floating\">Education</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.education\"\r\n                type=\"text\"\r\n                formControlName=\"education\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"floating\">Title or Employment</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.title\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <div class=\"button-div\">\r\n        <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\"\r\n          >Update</ion-button\r\n        >\r\n      </div>\r\n    </form>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserTimelinePage } from './user-timeline.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserTimelinePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserTimelinePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserTimelinePageRoutingModule } from './user-timeline-routing.module';\r\n\r\nimport { UserTimelinePage } from './user-timeline.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    UserTimelinePageRoutingModule,\r\n  ],\r\n  declarations: [UserTimelinePage],\r\n})\r\nexport class UserTimelinePageModule {}\r\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  IonInfiniteScroll,\r\n  LoadingController,\r\n  ModalController,\r\n  NavParams,\r\n} from '@ionic/angular';\r\nimport { SearchPage } from '../modals/search/search.page';\r\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\r\nimport { take } from 'rxjs/operators';\r\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\r\n@Component({\r\n  selector: 'user-timeline',\r\n  templateUrl: './user-timeline.page.html',\r\n  styleUrls: ['./user-timeline.page.scss'],\r\n})\r\nexport class UserTimelinePage {\r\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n\r\n  posts: PostApi[] = [];\r\n  pageNumber = 1;\r\n  morePages = false;\r\n  filter = '';\r\n  selectedUserId = '';\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private loadingController: LoadingController,\r\n    private accountService: AccountsService,\r\n    private postService: PostService,\r\n    private navParams: NavParams,\r\n    private zone: NgZone,\r\n    private router: Router,\r\n    private imgview:NgxIonicImageViewerModule\r\n  ) {}\r\n\r\n  ionViewWillEnter() {\r\n    this.selectedUserId = this.navParams.data.userId;\r\n    this.postService\r\n      .postsPageGet(this.pageNumber, this.filter, this.selectedUserId)\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.morePages = res.hasNextPage;\r\n        this.pageNumber = res.pageIndex;\r\n        this.posts = res.items;\r\n      });\r\n  }\r\n  sliderOpt = {\r\n    zoom: {\r\n      maxRatio: 1,\r\n    },\r\n  };\r\n\r\n  getPosts(event?: any) {\r\n    if (this.morePages) {\r\n      this.postService\r\n        .postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId)\r\n        .pipe(take(1))\r\n        .subscribe((res) => {\r\n          this.morePages = res.hasNextPage;\r\n          this.pageNumber = res.pageIndex;\r\n\r\n          // TODO The posts shouldn't be overwritten here but rather appended... not working though\r\n          if (this.posts.length === 0) {\r\n            this.posts = [];\r\n          } else {\r\n            const oldposts = this.posts;\r\n            this.posts = [];\r\n            const oldResLen = oldposts.length;\r\n            for (let i = 0; i < oldResLen; i++) {\r\n              this.posts.push(oldposts[i]);\r\n            }\r\n          }\r\n          const resLen = res.items.length;\r\n          for (let i = 0; i < resLen; i++) {\r\n            this.posts.push(res.items[i]);\r\n          }\r\n          // this.posts = res.items;\r\n          if (event) {\r\n            event.target.complete();\r\n          }\r\n        });\r\n    } else {\r\n      this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\r\n    }\r\n  }\r\n\r\n  refreshPosts(event?: any) {\r\n    this.postService\r\n      .postsPageGet(1, this.filter, this.selectedUserId)\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.morePages = res.hasNextPage;\r\n        this.pageNumber = res.pageIndex;\r\n        this.posts = res.items;\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      });\r\n  }\r\n\r\n  async presentSearchModal() {\r\n    this.router.navigateByUrl('/search');\r\n    // const modal = await this.modalController.create({\r\n    //   component: SearchPage,\r\n    //   componentProps: {},\r\n    //   showBackdrop: true,\r\n    //   cssClass: 'search-modal',\r\n    // });\r\n    // return await modal.present();\r\n  }\r\n\r\n  openProfile() {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      skipLocationChange: true,\r\n      state: {\r\n        userId: this.accountService.getUserId(),\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n\r\n  async presentMapFilter() {\r\n    const modal = await this.modalController.create({\r\n      component: MapFilterPage,\r\n      showBackdrop: true,\r\n      cssClass: 'filter-modal',\r\n      componentProps: {\r\n        filter: this.filter,\r\n        userLocations: this.navParams.data.userLocations\r\n      },\r\n    });\r\n\r\n    modal.onDidDismiss().then(async (dataReturned) => {\r\n      if (dataReturned !== null) {\r\n        this.filter = dataReturned.data;\r\n        this.refreshPosts();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  dismiss() {\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n","<ion-header style=\"background-color: #128c7e\" class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button slot=\"start\" large (click)=\"dismiss()\">\r\n        <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <!-- <ion-buttons slot=\"end\">\r\n      <ion-button slot=\"end\" (click)=\"presentSearchModal()\">\r\n        <img class=\"img-center\" src=\"../../../assets/UI/search-outline.svg\" />\r\n      </ion-button>\r\n    </ion-buttons> -->\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"false\" color=\"light\">\r\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\r\n    <ion-refresher-content\r\n      pullingText=\"Pull to refresh\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Refreshing...\"\r\n    >\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <post [posts]=\"posts\"></post>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\r\n    <ion-infinite-scroll-content\r\n      loadingSpinner=\"circles\"\r\n      loadingText=\"Getting more posts...\"\r\n    >\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>\r\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\r\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\r\n    <img src=\"../../assets/UI/FilterClosed.svg\" />\r\n  </ion-button>\r\n</ion-fab>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dateAgo',\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      const now = new Date().toUTCString();\r\n      const seconds = Math.abs(\r\n        (new Date(now).getTime() - new Date(value + 'Z').getTime()) / 1000\r\n      ); // appending Z lets the date know its UTC\r\n\r\n      if (seconds < 29) {\r\n        // less than 30 seconds ago will show as 'Just now'\r\n        return 'Just now';\r\n      }\r\n      const intervals = {\r\n        day: 86400,\r\n        hour: 3600,\r\n        minute: 60,\r\n        second: 1,\r\n      };\r\n      let counter;\r\n      // tslint:disable-next-line: forin\r\n      for (const i in intervals) {\r\n        counter = Math.floor(seconds / intervals[i]);\r\n\r\n        if (Math.floor(seconds / 86400) > 1) {\r\n          const date = new Date(value);\r\n          const month = date.toLocaleString('default', { month: 'long' });\r\n          return `${month} ${date.getDate()}`;\r\n        }\r\n\r\n        if (counter > 0) {\r\n          if (counter === 1) {\r\n            return counter + ' ' + i + ' ago'; // singular (1 hour ago)\r\n          } else {\r\n            return counter + ' ' + i + 's ago'; // plural (2 hours ago)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { zip } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n  private modals: any[] = [];\r\n  public dis: boolean;\r\n  constructor() {}\r\n\r\n  add(modal: any) {\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    this.modals = this.modals.filter((x) => x.id !== id);\r\n  }\r\n\r\n  open(id: string) {\r\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\r\n    modal.present();\r\n  }\r\n\r\n  close(id: string) {\r\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\r\n    modal.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PostComponent } from '../components/post/post.component';\r\nimport { CardFlipComponent } from '../components/card-flip/card-flip.component';\r\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule],\r\n  declarations: [PostComponent, CardFlipComponent, DateAgoPipe],\r\n  providers: [],\r\n  exports: [PostComponent, CardFlipComponent, DateAgoPipe],\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyDpx-hQIOXVBbNfGRaFQQTx-vzVwKwpA4Y',\r\n    authDomain: 'visit-4efb7.firebaseapp.com',\r\n    projectId: 'visit-4efb7',\r\n    storageBucket: 'visit-4efb7.appspot.com',\r\n    messagingSenderId: '227659578598',\r\n    appId: '1:227659578598:web:94cdae4520ab27359d8f27',\r\n    measurementId: 'G-P6HNG7BB8S',\r\n  },\r\n};\r\n\r\nexport const BASE_PATH = 'https://visit-service.azurewebsites.net';\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.log(err));\r\n\r\n// Call the element loader after the platform has been bootstrapped\r\ndefineCustomElements(window);\r\n"]}
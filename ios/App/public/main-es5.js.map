{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/backend/clients/api.module.ts","webpack:///src/app/backend/clients/api/accounts.service.ts","webpack:///src/app/backend/clients/api/api.ts","webpack:///src/app/backend/clients/api/blobStorage.service.ts","webpack:///src/app/backend/clients/api/devops.service.ts","webpack:///src/app/backend/clients/api/post.service.ts","webpack:///src/app/backend/clients/api/postTestData.service.ts","webpack:///src/app/backend/clients/api/tag.service.ts","webpack:///src/app/backend/clients/api/user.service.ts","webpack:///src/app/backend/clients/api/userLocation.service.ts","webpack:///src/app/backend/clients/api/userMessage.service.ts","webpack:///src/app/backend/clients/configuration.ts","webpack:///src/app/backend/clients/encoder.ts","webpack:///src/app/backend/clients/index.ts","webpack:///src/app/backend/clients/model/addressFamily.ts","webpack:///src/app/backend/clients/model/callingConventions.ts","webpack:///src/app/backend/clients/model/eventAttributes.ts","webpack:///src/app/backend/clients/model/fieldAttributes.ts","webpack:///src/app/backend/clients/model/genericParameterAttributes.ts","webpack:///src/app/backend/clients/model/layoutKind.ts","webpack:///src/app/backend/clients/model/memberTypes.ts","webpack:///src/app/backend/clients/model/methodAttributes.ts","webpack:///src/app/backend/clients/model/methodImplAttributes.ts","webpack:///src/app/backend/clients/model/modelValidationState.ts","webpack:///src/app/backend/clients/model/models.ts","webpack:///src/app/backend/clients/model/parameterAttributes.ts","webpack:///src/app/backend/clients/model/propertyAttributes.ts","webpack:///src/app/backend/clients/model/securityRuleSet.ts","webpack:///src/app/backend/clients/model/typeAttributes.ts","webpack:///src/app/backend/clients/variables.ts","webpack:///src/app/backend/models/httpConfigInterceptor.ts","webpack:///src/app/backend/services/AuthGuard.service.ts","webpack:///src/app/components/card-flip/card-flip.component.ts","webpack:///src/app/components/card-flip/card-flip.component.html","webpack:///src/app/components/post/post.component.ts","webpack:///src/app/components/post/post.component.html","webpack:///src/app/objects/enums/map-selection-mode.ts","webpack:///src/app/objects/location-json/location.selector.ts","webpack:///src/app/objects/map.ts","webpack:///src/app/pages/add-post-image/add-post-image-routing.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.module.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.ts","webpack:///src/app/pages/add-post-image/add-post-image.page.html","webpack:///src/app/pages/add-post/add-post-routing.module.ts","webpack:///src/app/pages/add-post/add-post.module.ts","webpack:///src/app/pages/add-post/add-post.page.ts","webpack:///src/app/pages/add-post/add-post.page.html","webpack:///src/app/pages/mark-location/mark-location-routing.module.ts","webpack:///src/app/pages/mark-location/mark-location.module.ts","webpack:///src/app/pages/mark-location/mark-location.page.ts","webpack:///src/app/pages/mark-location/mark-location.page.html","webpack:///src/app/pages/modals/add/add-routing.module.ts","webpack:///src/app/pages/modals/add/add.module.ts","webpack:///src/app/pages/modals/add/add.page.ts","webpack:///src/app/pages/modals/add/add.page.html","webpack:///src/app/pages/modals/forgot-password/forgot-password-routing.module.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.module.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.page.ts","webpack:///src/app/pages/modals/forgot-password/forgot-password.page.html","webpack:///src/app/pages/modals/map-filter/map-filter-routing.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.module.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.ts","webpack:///src/app/pages/modals/map-filter/map-filter.page.html","webpack:///src/app/pages/modals/search/search-routing.module.ts","webpack:///src/app/pages/modals/search/search.module.ts","webpack:///src/app/pages/modals/search/search.page.ts","webpack:///src/app/pages/modals/search/search.page.html","webpack:///src/app/pages/user-settings/user-settings-routing.module.ts","webpack:///src/app/pages/user-settings/user-settings.module.ts","webpack:///src/app/pages/user-settings/user-settings.page.ts","webpack:///src/app/pages/user-settings/user-settings.page.html","webpack:///src/app/pages/user-timeline/user-timeline-routing.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.module.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.ts","webpack:///src/app/pages/user-timeline/user-timeline.page.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","all","slice","webpackAsyncContextKeys","Object","routes","path","redirectTo","pathMatch","children","loadChildren","m","NewsFeedPageModule","canActivate","NotificationsPageModule","SearchPageModule","AddPageModule","MapFilterPageModule","UserProfilePageModule","UserTimelinePageModule","SignInPageModule","RegisterPageModule","PostRegisterAboutPageModule","PostRegisterLocationsPageModule","MarkLocationPageModule","AddPostPageModule","AddPostImagePageModule","CommentsPageModule","UserSettingsPageModule","ForgotPasswordPageModule","AppRoutingModule","forRoot","preloadingStrategy","imports","fcm","AppComponent","platform","userService","modalController","alertController","router","zone","modalSvc","ready","initializeApp","isPluginAvailable","setStyle","style","Default","hide","registerPush","run","isLoggedIn","navigate","firebaseConfig","requestPermissions","result","receive","register","getToken","r","setFcmToken","token","err","console","log","JSON","stringify","addListener","error","notification","title","alert","body","create","header","message","buttons","text","role","handler","dismiss","present","component","showBackdrop","swipeToClose","cssClass","backdropDismiss","modal","url","dis","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","entryComponents","providers","bootstrap","ApiModule","parentModule","http","configurationFactory","ngModule","useFactory","InterceptorSkipHeader","AccountsService","httpClient","basePath","configuration","storage","signInWithApple","ngFireAuth","defaultHeaders","set","authSubject","authState","subscribe","user","localStorage","setItem","parse","getItem","getFcmToken","accountUpdateFcmDeviceIdPost","pipe","res","signOut","removeItem","auth","currentUser","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","getIdToken","uid","email","password","reject","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","isNativePlatform","signin","requestedScopes","ASAuthorizationScopeFullName","ASAuthorizationScopeEmail","credential","OAuthProvider","identityToken","firstLogin","signInWithCredential","cred","onAuthStateChanged","additionalUserInfo","isNewUser","response","firstName","fullName","givenName","lastName","familyName","signInWithCustomToken","get","observe","reportProgress","queryParameters","encoder","undefined","headers","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","consumes","request","params","withCredentials","deviceId","apiKeys","Authorization","encodeURIComponent","String","blob","httpContentTypeSelected","selectHeaderContentType","FormData","append","firstname","lastname","education","birthLocation","residenceLocation","emailVerified","APIS","BlobStorageService","form","consume","fileName","userId","asset","canConsumeForm","formParams","useForm","convertFormParamsToString","toString","DevopsService","PostService","postId","caption","postType","locationCode","image","page","filter","uri","PostTestDataService","post","TagService","tag","put","responseType","UserService","query","UserLocationService","userLocation","UserMessageService","userMessage","Configuration","configurationParameters","username","accessToken","contentTypes","length","type","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","toLowerCase","CustomHttpUrlEncodingCodec","k","replace","v","AddressFamily","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","NUMBER_10","NUMBER_11","NUMBER_12","NUMBER_13","NUMBER_14","NUMBER_15","NUMBER_16","NUMBER_17","NUMBER_18","NUMBER_19","NUMBER_21","NUMBER_22","NUMBER_23","NUMBER_24","NUMBER_25","NUMBER_26","NUMBER_28","NUMBER_29","NUMBER_65536","NUMBER_65537","NUMBER_MINUS_1","CallingConventions","NUMBER_32","NUMBER_64","EventAttributes","NUMBER_512","NUMBER_1024","FieldAttributes","NUMBER_128","NUMBER_256","NUMBER_4096","NUMBER_8192","NUMBER_32768","NUMBER_38144","GenericParameterAttributes","LayoutKind","MemberTypes","NUMBER_191","MethodAttributes","NUMBER_2048","NUMBER_16384","NUMBER_53248","MethodImplAttributes","NUMBER_65535","ModelValidationState","ParameterAttributes","NUMBER_61440","PropertyAttributes","NUMBER_62464","SecurityRuleSet","TypeAttributes","NUMBER_131072","NUMBER_196608","NUMBER_262144","NUMBER_264192","NUMBER_1048576","NUMBER_12582912","BASE_PATH","COLLECTION_FORMATS","csv","tsv","ssv","pipes","TOKEN_KEY","HttpConfigInterceptor","accountService","next","clone","handle","event","status","reason","subHeader","AuthGuard","route","CardFlipComponent","flipped","PostComponent","postSvc","posts","location","likeIcon","likedIcon","likedByCurrentUser","postsLikePostIdPost","likeCount","navigationExtras","replaceUrl","state","navigateByUrl","fkUserId","MapSelectionMode","LocationSelector","options","getCountries","Countries","forEach","name","push","getStates","States","sort","compare","a","b","comparison","Map","selectedArea","polygonArr","Array","selectedArr","seriesArr","createMap","NONE","selectionMode","runOutsideAngular","worldSeries","usaSeries","chart","autoDispose","geodata","projection","Miller","zoomControl","plusButton","minusButton","tapToActivate","seriesContainer","events","disableType","chartContainer","background","showOnInit","homeButton","on","goHome","icon","padding","width","marginBottom","parent","insertAfter","series","exclude","useGeodata","mapPolygons","template","setupTemplates","setSelectionMode","divName","moveHtmlContainer","polygonTemplate","tooltipText","nonScalingStroke","applyOnClones","strokeOpacity","activeState","states","visited","properties","fill","toVisit","defaultState","ev","data","target","dataItem","dataContext","selectedId","lastSelected","zoomToMapObject","FILTER","resetAllLocations","changeVisitStatus","off","TO_VISIT","locationId","getPolygonById","setState","locationInArray","d","index","indexOf","splice","dispose","AddPostImagePageRoutingModule","forChild","AddPostImagePage","loadingController","modalCtrl","postService","selectedLocation","postText","locationOptions","userImage","getAllLocations","option","trim","startSearch","items","endSearch","filterLocations","duration","loading","postsNewPostForm","dismissed","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","getPhoto","quality","allowEditing","resultType","DataUrl","imageUrl","dataUrl","b64toBlob","getUserImage","AddPostPageRoutingModule","AddPostPage","MarkLocationPageRoutingModule","MarkLocationPage","locationRequest","locations","titleTextVisited","titleTextToVisit","subtitleTextVisited","subtitleTextToVisit","displayVisitedText","addMapToDiv","destroyMap","mapLocationsToRequest","accountUpdateLocationsPost","onSubmit","AddPageRoutingModule","AddPage","componentProps","VISITED","markVisitedLocations","markLocationsToVisit","addNewImage","addNewPost","ForgotPasswordPageRoutingModule","ForgotPasswordPage","userEmail","PasswordRecover","closeModal","MapFilterPageRoutingModule","MapFilterPage","navParams","onClosedData","restFilter","filterSubmit","SearchPageRoutingModule","SearchPage","viewCtrl","people","searchQuery","userSearchQueryGet","users","skipLocationChange","search","UserSettingsPageRoutingModule","UserSettingsPage","avi","birthPlace","residence","aboutForm","controls","value","accountUpdatePost","accountUpdateProfileImagePost","logout","UserTimelinePageRoutingModule","UserTimelinePage","pageNumber","morePages","selectedUserId","postsPageGet","hasNextPage","pageIndex","oldposts","oldResLen","resLen","complete","infiniteScroll","disabled","getUserId","onDidDismiss","dataReturned","refreshPosts","presentSearchModal","getPosts","presentMapFilter","DateAgoPipe","args","now","Date","toUTCString","seconds","Math","abs","getTime","intervals","day","hour","minute","second","counter","floor","date","month","toLocaleString","getDate","ModalService","modals","close","providedIn","SharedModule","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'post-register-about',\n    pathMatch: 'full',\n  },\n  {\n    path: 'tab1',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/news-feed/news-feed.module').then(\n            (m) => m.NewsFeedPageModule\n          ),\n        canActivate: [AuthGuard],\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'tab2',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/notifications-page/notifications.module').then(\n            (m) => m.NotificationsPageModule\n          ),\n        canActivate: [AuthGuard],\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'search',\n    loadChildren: () =>\n      import('./pages/modals/search/search.module').then(\n        (m) => m.SearchPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add',\n    loadChildren: () =>\n      import('./pages/modals/add/add.module').then((m) => m.AddPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'map-filter',\n    loadChildren: () =>\n      import('./pages/modals/map-filter/map-filter.module').then(\n        (m) => m.MapFilterPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-profile',\n    loadChildren: () =>\n      import('./pages/user-profile/user-profile.module').then(\n        (m) => m.UserProfilePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-timeline',\n    loadChildren: () =>\n      import('./pages/user-timeline/user-timeline.module').then(\n        (m) => m.UserTimelinePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'sign-in',\n    loadChildren: () =>\n      import('./pages/sign-in/sign-in.module').then((m) => m.SignInPageModule),\n  },\n  {\n    path: 'register',\n    loadChildren: () =>\n      import('./pages/register/register.module').then(\n        (m) => m.RegisterPageModule\n      ),\n  },\n  {\n    path: 'post-register-about',\n    loadChildren: () =>\n      import('./pages/post-register-about/post-register-about.module').then(\n        (m) => m.PostRegisterAboutPageModule\n      ),\n  },\n  {\n    path: 'post-register-locations',\n    loadChildren: () =>\n      import(\n        './pages/post-register-locations/post-register-locations.module'\n      ).then((m) => m.PostRegisterLocationsPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'mark-location',\n    loadChildren: () =>\n      import('./pages/mark-location/mark-location.module').then(\n        (m) => m.MarkLocationPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add-post',\n    loadChildren: () =>\n      import('./pages/add-post/add-post.module').then(\n        (m) => m.AddPostPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add-post-image',\n    loadChildren: () =>\n      import('./pages/add-post-image/add-post-image.module').then(\n        (m) => m.AddPostImagePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'comments',\n    loadChildren: () =>\n      import('./pages/comments/comments.module').then(\n        (m) => m.CommentsPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-settings',\n    loadChildren: () =>\n      import('./pages/user-settings/user-settings.module').then(\n        (m) => m.UserSettingsPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => import('./pages/modals/forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\n  },\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { StatusBar, Style } from '@capacitor/status-bar';\nimport {\n  PushNotificationSchema,\n  Token,\n  ActionPerformed,\n  PushNotifications,\n} from '@capacitor/push-notifications';\nimport { FCM } from '@capacitor-community/fcm';\nimport { Capacitor } from '@capacitor/core';\nimport { from } from 'rxjs';\nconst fcm = new FCM();\n\nimport { AddPage } from './pages/modals/add/add.page';\nimport { AccountsService } from './backend/clients/api/accounts.service';\nimport { ModalService } from './services/modal.service';\n\nimport { environment } from 'src/environments/environment';\nimport firebase from 'firebase/app';\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  page: string;\n\n  constructor(\n    private platform: Platform,\n    private userService: AccountsService,\n    public modalController: ModalController,\n    public alertController: AlertController,\n    public router: Router,\n    public zone: NgZone,\n    public modalSvc: ModalService\n  ) {\n    this.platform.ready().then(() => {\n      this.initializeApp();\n    });\n  }\n\n  ngOnInit() {}\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (Capacitor.isPluginAvailable('StatusBar')) {\n        StatusBar.setStyle({ style: Style.Default });\n      }\n\n      if (Capacitor.isPluginAvailable('SplashScreen')) {\n        SplashScreen.hide();\n      }\n\n      if (Capacitor.isPluginAvailable('PushNotifications')) {\n        this.registerPush();\n      }\n\n      this.zone.run(() => {\n        if (this.userService.isLoggedIn) {\n          this.router.navigate(['tab1']);\n        } else {\n          this.router.navigate(['sign-in']);\n        }\n      });\n    });\n\n    firebase.initializeApp(environment.firebaseConfig);\n  }\n\n  private registerPush() {\n    PushNotifications.requestPermissions().then((result) => {\n      if (result.receive === 'granted') {\n        // Register with Apple / Google to receive push via APNS/FCM\n        PushNotifications.register().then(() =>\n          from(\n            fcm\n              .getToken()\n              .then((r) => {\n                this.userService.setFcmToken(r.token);\n              })\n              .catch((err) => {\n                console.log(`FCM Token ERROR: ${JSON.stringify(err)}`);\n              })\n          )\n        );\n      } else {\n        console.log('Push notifications not registered');\n      }\n    });\n\n    PushNotifications.addListener('registration', (token: Token) => {\n      // alert('Push registration success, token: ' + token.value);\n    });\n\n    PushNotifications.addListener('registrationError', (error: any) => {\n      // alert('Error on registration: ' + JSON.stringify(error));\n    });\n\n    PushNotifications.addListener(\n      'pushNotificationReceived',\n      async (notification: PushNotificationSchema) => {\n        console.log(notification.title);\n        this.alert(notification.title, notification.body);\n      }\n    );\n\n    PushNotifications.addListener(\n      'pushNotificationActionPerformed',\n      (notification: ActionPerformed) => {\n        // alert('Push action performed: ' + JSON.stringify(notification));\n      }\n    );\n  }\n\n  async alert(title: string, body: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: body,\n      buttons: [\n        {\n          text: 'OKAY',\n          role: 'cancel',\n          handler: () => {\n            alert.dismiss();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  get showFooter() {\n    if (this.router.url === '/sign-in') {\n      return false;\n    }\n    if (this.router.url === '/register') {\n      return false;\n    }\n    if (this.router.url === '/post-register-about') {\n      return false;\n    }\n    if (this.router.url === '/post-register-locations') {\n      return false;\n    }\n    if (this.router.url === '/comments') {\n      return false;\n    }\n    if (this.modalSvc.dis === false) {\n      return false;\n    }\n    return true;\n  }\n\n  async presentAddModal() {\n    const modal = await this.modalController.create({\n      component: AddPage,\n      showBackdrop: true,\n      swipeToClose: true,\n      cssClass: 'add-modal',\n      backdropDismiss: true,\n    });\n    return await modal.present();\n  }\n}\n","<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n  <ion-tabs>\n    <ion-tab-bar slot=\"bottom\" *ngIf=\"showFooter\">\n      <ion-tab-button tab=\"tab1\">\n        <ion-icon name=\"home-outline\"></ion-icon>\n        <ion-label>Home</ion-label>\n      </ion-tab-button>\n\n      <ion-tab-button tab=\"tab2\">\n        <ion-icon name=\"notifications-outline\"></ion-icon>\n        <ion-label>Notifications</ion-label>\n      </ion-tab-button>\n    </ion-tab-bar>\n  </ion-tabs>\n  <ion-fab horizontal=\"center\" vertical=\"bottom\" *ngIf=\"showFooter\">\n    <ion-fab-button class=\"add-button\" (click)=\"presentAddModal()\">\n      <ion-icon name=\"add\" style=\"height: 50; width: 20\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-app>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SearchPageModule } from './pages/modals/search/search.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPageModule } from './pages/modals/add/add.module';\nimport { MapFilterPageModule } from './pages/modals/map-filter/map-filter.module';\nimport { ForgotPasswordPageModule} from './pages/modals/forgot-password/forgot-password.module';\nimport { UserTimelinePageModule } from './pages/user-timeline/user-timeline.module';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpConfigInterceptor } from './backend/models/httpConfigInterceptor';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\nimport { AccountsService, UserService, PostService } from './backend/clients';\nimport { MarkLocationPageModule } from './pages/mark-location/mark-location.module';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { LocationSelector } from './objects/location-json/location.selector';\nimport { AddPostPageModule } from './pages/add-post/add-post.module';\nimport { AddPostImagePageModule } from './pages/add-post-image/add-post-image.module';\nimport { UserSettingsPageModule } from './pages/user-settings/user-settings.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\nimport { SignInWithApple } from '@ionic-native/sign-in-with-apple/ngx';\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    SearchPageModule,\n    AddPageModule,\n    HttpClientModule,\n    UserTimelinePageModule,\n    MapFilterPageModule,\n    MarkLocationPageModule,\n    AddPostPageModule,\n    UserSettingsPageModule,\n    AddPostImagePageModule,\n    ForgotPasswordPageModule,\n    IonicSelectableModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n  ],\n  providers: [\n    AuthGuard,\n    AccountsService,\n    UserService,\n    PostService,\n    LocationSelector,\n    SignInWithApple,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfigInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AccountsService } from './api/accounts.service';\nimport { BlobStorageService } from './api/blobStorage.service';\nimport { DevopsService } from './api/devops.service';\nimport { PostService } from './api/post.service';\nimport { PostTestDataService } from './api/postTestData.service';\nimport { TagService } from './api/tag.service';\nimport { UserService } from './api/user.service';\nimport { UserLocationService } from './api/userLocation.service';\nimport { UserMessageService } from './api/userMessage.service';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [\n    AccountsService,\n    BlobStorageService,\n    DevopsService,\n    PostService,\n    PostTestDataService,\n    TagService,\n    UserService,\n    UserLocationService,\n    UserMessageService,\n  ],\n})\nexport class ApiModule {\n  public static forRoot(\n    configurationFactory: () => Configuration\n  ): ModuleWithProviders<ApiModule> {\n    return {\n      ngModule: ApiModule,\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\n    };\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'ApiModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!http) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule! \\n' +\n          'See also https://github.com/angular/angular/issues/20575'\n      );\n    }\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport {\n  Inject, Injectable, NgZone, Optional,\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\n\nimport { Observable, BehaviorSubject, from } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { BASE_PATH } from 'src/environments/environment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\nimport { Capacitor } from '@capacitor/core';\nimport { MarkLocationsRequest } from '../model/markLocationsRequest';\nimport { Configuration } from '../configuration';\nimport { RegisterRequest } from '../model/registerRequest';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\nimport { AlertController } from '@ionic/angular';\n\nimport { SignInWithApple, AppleSignInResponse, AppleSignInErrorResponse, ASAuthorizationAppleIDRequest } from '@ionic-native/sign-in-with-apple/ngx';\nimport { SsoUser } from '../model/ssoUser';\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class AccountsService {\n  protected basePath = BASE_PATH;\n\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n\n  public configuration = new Configuration();\n\n  public authSubject = new BehaviorSubject(false);\n\n  public userData: any;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration,\n    private router: Router,\n    private zone: NgZone,\n    private storage: Storage,\n    private alertController: AlertController,\n    private signInWithApple: SignInWithApple,\n    private ngFireAuth: AngularFireAuth,\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n\n    this.ngFireAuth.authState.subscribe((user) => {\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        JSON.parse(localStorage.getItem('user'));\n        this.getFcmToken().subscribe((token) => {\n          console.log(`FCM:${token}`);\n          this.accountUpdateFcmDeviceIdPost(token)\n            .pipe(take(1))\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => console.log(err),\n            );\n        });\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  public async logout() {\n    return this.ngFireAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.zone.run(() => {\n        this.router.navigate(['sign-in']);\n      });\n    });\n  }\n\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null);\n  }\n\n  // Email verification when new user register\n  SendVerificationMail() {\n    return from(firebase\n      .auth()\n      .currentUser.sendEmailVerification()\n      .then(() => {\n        this.zone.run(() => {\n          this.router.navigate(['verify-email']);\n        });\n      }));\n  }\n\n  get isEmailVerified(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user.emailVerified !== false;\n  }\n\n  // Recover password\n  PasswordRecover(passwordResetEmail) {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(passwordResetEmail)\n      .then(() => {\n        this.alert(\n          'Success',\n          'Password reset email has been sent, please check your inbox.',\n        );\n      })\n      .catch((error) => {\n        this.alert('Reset error', error);\n      });\n  }\n\n  async alert(title: string, body: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: body,\n      buttons: [\n        {\n          text: 'OKAY',\n          role: 'cancel',\n          handler: () => {\n            alert.dismiss();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async getToken() {\n    try {\n      return await firebase.auth().currentUser.getIdToken();\n    } catch {\n      return '';\n    }\n  }\n\n  getUserId() {\n    return firebase.auth().currentUser.uid;\n  }\n\n  // Login in with email/password\n  login(email, password) {\n    return new Promise<any>((resolve, reject) => {\n      firebase\n        .auth()\n        .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        .then(async () => {\n          await firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(\n              (res) => {\n                if (Capacitor.isNativePlatform()) {\n                  this.getFcmToken()\n                    .pipe(take(1))\n                    .subscribe((token) => {\n                      this.accountUpdateFcmDeviceIdPost(token);\n                      resolve(res);\n                    });\n                } else {\n                  resolve(res);\n                }\n              },\n              (err) => reject(err),\n            );\n        });\n    });\n  }\n\n  loginFacebook() {\n\n  }\n\n  async loginApple(): Promise<SsoUser> {\n      return this.signInWithApple.signin({\n      requestedScopes: [\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeFullName,\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeEmail\n      ]\n    }).then(async (res: AppleSignInResponse) => {\n      const credential = new firebase.auth.OAuthProvider('apple.com').credential(\n        res.identityToken\n      );\n      let firstLogin = false;\n\n      const response = await firebase.auth().signInWithCredential(credential).then(async (cred) => {\n          await firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n              return res;\n            }\n          });\n          firstLogin = cred.additionalUserInfo.isNewUser;\n        });\n\n      return {\n        firstLogin,\n        firstName: res.fullName.givenName,\n        lastName: res.fullName.familyName,\n        email: res.email,\n      } as SsoUser;\n    });\n  }\n\n    // GoogleAuth() {\n    //   return this.AuthLogin(new auth.GoogleAuthProvider());\n    // }\n\n\n  public loginWithToken(token): Observable<any> {\n    return from(\n      firebase\n        .auth()\n        .signInWithCustomToken(token)\n        .then(() => this.getFcmToken()\n          .pipe(take(1))\n          .subscribe((token) => this.accountUpdateFcmDeviceIdPost(token))),\n    );\n  }\n\n  public getFcmToken() {\n    return from(this.storage.get('fcm'));\n  }\n\n  public setFcmToken(token) {\n    return from(this.storage.set('fcm', token));\n  }\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (email !== undefined && email !== null) {\n      queryParameters = queryParameters.set('email', email as string);\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'get',\n      `${this.basePath}/account/email_taken`,\n      {\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    if (deviceId === null || deviceId === undefined) {\n      throw new Error(\n        'Required parameter deviceId was null or undefined when calling accountUpdateFcmDeviceIdPost.',\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys\n      && this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization,\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/fcm/${encodeURIComponent(\n        String(deviceId),\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountRegisterPostForm(\n    body?: RegisterRequest,\n    blob?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean,\n  ): Observable<string> {\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    return this.httpClient.request<string>(\n      'post',\n      `${this.basePath}/account/register`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  /**\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/locations`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  /**\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n\n    const body = new FormData();\n    body.append('image', blob);\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/profile_image`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (firstname !== undefined && firstname !== null) {\n      queryParameters = queryParameters.set('Firstname', firstname as any);\n    }\n    if (lastname !== undefined && lastname !== null) {\n      queryParameters = queryParameters.set('Lastname', lastname as any);\n    }\n    if (title !== undefined && title !== null) {\n      queryParameters = queryParameters.set('Title', title as any);\n    }\n    if (education !== undefined && education !== null) {\n      queryParameters = queryParameters.set('Education', education as any);\n    }\n    if (birthLocation !== undefined && birthLocation !== null) {\n      queryParameters = queryParameters.set(\n        'BirthLocation',\n        birthLocation as any,\n      );\n    }\n    if (residenceLocation !== undefined && residenceLocation !== null) {\n      queryParameters = queryParameters.set(\n        'ResidenceLocation',\n        residenceLocation as any,\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update`,\n      {\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n}\n","export * from './accounts.service';\nimport { AccountsService } from './accounts.service';\nexport * from './blobStorage.service';\nimport { BlobStorageService } from './blobStorage.service';\nexport * from './devops.service';\nimport { DevopsService } from './devops.service';\nexport * from './post.service';\nimport { PostService } from './post.service';\nexport * from './postTestData.service';\nimport { PostTestDataService } from './postTestData.service';\nexport * from './tag.service';\nimport { TagService } from './tag.service';\nexport * from './user.service';\nimport { UserService } from './user.service';\nexport * from './userLocation.service';\nimport { UserLocationService } from './userLocation.service';\nexport * from './userMessage.service';\nimport { UserMessageService } from './userMessage.service';\n// tslint:disable-next-line: max-line-length\nexport const APIS = [\n  AccountsService,\n  BlobStorageService,\n  DevopsService,\n  PostService,\n  PostTestDataService,\n  TagService,\n  UserService,\n  UserLocationService,\n  UserMessageService,\n];\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: import-spacing\n// tslint:disable: max-line-length\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class BlobStorageService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (fileName === null || fileName === undefined) {\n      throw new Error(\n        'Required parameter fileName was null or undefined when calling storageDeleteFileFileNameGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<any>(\n      'get',\n      `${this.basePath}/storage/DeleteFile/${encodeURIComponent(\n        String(fileName)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<string>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<string>>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<string>>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (fileName === null || fileName === undefined) {\n      throw new Error(\n        'Required parameter fileName was null or undefined when calling storageDownloadFileFileNameGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<string>(\n      'get',\n      `${this.basePath}/storage/DownloadFile/${encodeURIComponent(\n        String(fileName)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<string>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<string>>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<string>>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userId === null || userId === undefined) {\n      throw new Error(\n        'Required parameter userId was null or undefined when calling storageListFilesUserIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<string>>(\n      'get',\n      `${this.basePath}/storage/ListFiles/${encodeURIComponent(\n        String(userId)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param asset\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (fileName !== undefined && fileName !== null) {\n      queryParameters = queryParameters.set('fileName', fileName as any);\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    const canConsumeForm = this.canConsumeForm(consumes);\n\n    let formParams: { append(param: string, value: any): void };\n    let useForm = false;\n    const convertFormParamsToString = false;\n    // use FormData to transmit files using content-type \"multipart/form-data\"\n    // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n    useForm = canConsumeForm;\n    if (useForm) {\n      formParams = new FormData();\n    } else {\n      formParams = new HttpParams({\n        encoder: new CustomHttpUrlEncodingCodec(),\n      });\n    }\n\n    if (asset !== undefined) {\n      formParams =\n        (formParams.append('asset', asset as any) as any) || formParams;\n    }\n\n    return this.httpClient.request<any>(\n      'post',\n      `${this.basePath}/storage/UploadFile`,\n      {\n        body: convertFormParamsToString ? formParams.toString() : formParams,\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\n\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { Configuration } from '../configuration';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class DevopsService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public devopsPostTypesPost(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public devopsPostTypesPost(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public devopsPostTypesPost(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public devopsPostTypesPost(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<any>(\n      'post',\n      `${this.basePath}/devops/post_types`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: no-redundant-jsdoc\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { PostPaginatedList } from '../model/postPaginatedList';\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\nimport { CreatePostRequest } from '../model/createPostRequest';\nimport { NewPostResponse } from '../model/newPostResponse';\nimport { CommentForPost } from '../model/commentForPost';\nimport { LikeForPost } from '../model/likeForPost';\nimport { PostApiPaginatedList } from '../model/postApiPaginatedList';\nimport { CommentApi } from '../model/commentApi';\nimport { string } from '@amcharts/amcharts4/core';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class PostService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param postId\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsCommentPostIdPost.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/posts/comment/${encodeURIComponent(String(postId))}`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<CommentForPost>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<CommentForPost>>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<CommentForPost>>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsCommentsGetPostIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<CommentForPost>>(\n      'get',\n      `${this.basePath}/posts/comments/get/${encodeURIComponent(\n        String(postId)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsLikePostIdPost.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/posts/like/${encodeURIComponent(String(postId))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<LikeForPost>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<LikeForPost>>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<LikeForPost>>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsLikesGetPostIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<LikeForPost>>(\n      'get',\n      `${this.basePath}/posts/likes/get/${encodeURIComponent(String(postId))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n  /**\n   * @param caption\n   * @param postType\n   * @param locationCode\n   * @param image\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<NewPostResponse>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<NewPostResponse>>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<NewPostResponse>>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    let formParams: { append(param: string, value: any): void };\n    formParams = new FormData();\n\n    const convertFormParamsToString = false;\n\n    if (caption !== undefined) {\n      formParams =\n        (formParams.append('Caption', caption as any) as any) || formParams;\n    }\n    if (postType !== undefined) {\n      formParams =\n        (formParams.append('PostType', postType as any) as any) || formParams;\n    }\n    if (locationCode !== undefined) {\n      formParams =\n        (formParams.append('LocationCode', locationCode as any) as any) ||\n        formParams;\n    }\n    if (image !== undefined) {\n      formParams =\n        (formParams.append('Image', image as any) as any) || formParams;\n    }\n\n    return this.httpClient.request<NewPostResponse>(\n      'post',\n      `${this.basePath}/posts/new`,\n      {\n        body: convertFormParamsToString ? formParams.toString() : formParams,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param page\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<PostApiPaginatedList>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<PostApiPaginatedList>>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<PostApiPaginatedList>>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (page === null || page === undefined) {\n      throw new Error(\n        'Required parameter page was null or undefined when calling postsPageGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    let uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}`;\n\n    if (filter !== '' && userId === '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/filter/${encodeURIComponent(String(filter))}`;\n    } else if (userId !== '' && filter === '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/user/${encodeURIComponent(String(userId))}`;\n    } else if (userId !== '' && filter !== '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/${encodeURIComponent(String(filter))}/${encodeURIComponent(\n        String(userId)\n      )}`;\n    }\n\n    return this.httpClient.request<PostApiPaginatedList>('get', uri, {\n      withCredentials: this.configuration.withCredentials,\n      headers,\n      observe,\n      reportProgress,\n    });\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/user';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class PostTestDataService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postTestDataGetAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<User>>;\n  public postTestDataGetAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<User>>>;\n  public postTestDataGetAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<User>>>;\n  public postTestDataGetAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<User>>(\n      `${this.basePath}/api/TestData/users`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postTestDataPostTest(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<string>;\n  public postTestDataPostTest(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<string>>;\n  public postTestDataPostTest(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<string>>;\n  public postTestDataPostTest(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.post<string>(\n      `${this.basePath}/api/TestData/post`,\n      null,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { Tag } from '../model/tag';\nimport { TagController } from '../model/tagController';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class TagService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagDeleteTag(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Tag>;\n  public tagDeleteTag(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Tag>>;\n  public tagDeleteTag(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Tag>>;\n  public tagDeleteTag(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagDeleteTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<Tag>(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagGetTag(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Tag>;\n  public tagGetTag(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Tag>>;\n  public tagGetTag(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Tag>>;\n  public tagGetTag(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagGetTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Tag>(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagGetTagAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<Tag>>;\n  public tagGetTagAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<Tag>>>;\n  public tagGetTagAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<Tag>>>;\n  public tagGetTagAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<Tag>>(`${this.basePath}/api/Tag`, {\n      withCredentials: this.configuration.withCredentials,\n      headers,\n      observe,\n      reportProgress,\n    });\n  }\n\n  /**\n   *\n   *\n   * @param tag\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<TagController>;\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<TagController>>;\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<TagController>>;\n  public tagPostTag(\n    tag: Tag,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (tag === null || tag === undefined) {\n      throw new Error(\n        'Required parameter tag was null or undefined when calling tagPostTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<TagController>(\n      `${this.basePath}/api/Tag`,\n      tag,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param tag\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagPutTag.'\n      );\n    }\n\n    if (tag === null || tag === undefined) {\n      throw new Error(\n        'Required parameter tag was null or undefined when calling tagPutTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      tag,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/user';\nimport { UserResponse } from '../model/userResponse';\nimport { BASE_PATH } from 'src/environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { Configuration } from '../configuration';\nimport { SlimUserResponse } from '../model/slimUserResponse';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class UserService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userAllGet(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<User>>;\n  public userAllGet(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<User>>>;\n  public userAllGet(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<User>>>;\n  public userAllGet(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<User>>(\n      'get',\n      `${this.basePath}/User/all`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userIdGet(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserResponse>;\n  public userIdGet(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserResponse>>;\n  public userIdGet(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserResponse>>;\n  public userIdGet(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<UserResponse>(\n      'get',\n      `${this.basePath}/User/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param query\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<SlimUserResponse>>;\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<SlimUserResponse>>>;\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<SlimUserResponse>>>;\n  public userSearchQueryGet(\n    query: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (query === null || query === undefined) {\n      throw new Error(\n        'Required parameter query was null or undefined when calling userSearchQueryGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<SlimUserResponse>>(\n      'get',\n      `${this.basePath}/User/search/${encodeURIComponent(String(query))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userSelfGet(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<SlimUserResponse>;\n  public userSelfGet(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<SlimUserResponse>>;\n  public userSelfGet(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<SlimUserResponse>>;\n  public userSelfGet(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<SlimUserResponse>(\n      'get',\n      `${this.basePath}/User/self`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { UserLocation } from '../model/userLocation';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class UserLocationService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationDeleteUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<UserLocation>(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationGetUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<UserLocation>(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationGetUserLocationAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<UserLocation>>;\n  public userLocationGetUserLocationAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<UserLocation>>>;\n  public userLocationGetUserLocationAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<UserLocation>>>;\n  public userLocationGetUserLocationAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<UserLocation>>(\n      `${this.basePath}/api/UserLocation`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userLocation\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userLocation === null || userLocation === undefined) {\n      throw new Error(\n        'Required parameter userLocation was null or undefined when calling userLocationPostUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<UserLocation>(\n      `${this.basePath}/api/UserLocation`,\n      userLocation,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param userLocation\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationPutUserLocation.'\n      );\n    }\n\n    if (userLocation === null || userLocation === undefined) {\n      throw new Error(\n        'Required parameter userLocation was null or undefined when calling userLocationPutUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      userLocation,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { UserMessage } from '../model/userMessage';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class UserMessageService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessageDeleteUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<UserMessage>(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessageGetUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<UserMessage>(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageGetUserMessageAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<UserMessage>>;\n  public userMessageGetUserMessageAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<UserMessage>>>;\n  public userMessageGetUserMessageAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<UserMessage>>>;\n  public userMessageGetUserMessageAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<UserMessage>>(\n      `${this.basePath}/api/UserMessage`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userMessage\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userMessage === null || userMessage === undefined) {\n      throw new Error(\n        'Required parameter userMessage was null or undefined when calling userMessagePostUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<UserMessage>(\n      `${this.basePath}/api/UserMessage`,\n      userMessage,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param userMessage\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessagePutUserMessage.'\n      );\n    }\n\n    if (userMessage === null || userMessage === undefined) {\n      throw new Error(\n        'Required parameter userMessage was null or undefined when calling userMessagePutUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      userMessage,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","export interface ConfigurationParameters {\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n}\n\nexport class Configuration {\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length == 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length == 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp(\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\n      'i'\n    );\n    return (\n      mime != null &&\n      (jsonMime.test(mime) ||\n        mime.toLowerCase() === 'application/json-patch+json')\n    );\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n * CustomHttpUrlEncodingCodec\n * Fix plus sign (+) not encoding, so sent as blank space\n * See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n */\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n  encodeKey(k: string): string {\n    k = super.encodeKey(k);\n    return k.replace(/\\+/gi, '%2B');\n  }\n  encodeValue(v: string): string {\n    v = super.encodeValue(v);\n    return v.replace(/\\+/gi, '%2B');\n  }\n}\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type AddressFamily =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 28\n  | 29\n  | 65536\n  | 65537\n  | -1;\n\nexport const AddressFamily = {\n  NUMBER_0: 0 as AddressFamily,\n  NUMBER_1: 1 as AddressFamily,\n  NUMBER_2: 2 as AddressFamily,\n  NUMBER_3: 3 as AddressFamily,\n  NUMBER_4: 4 as AddressFamily,\n  NUMBER_5: 5 as AddressFamily,\n  NUMBER_6: 6 as AddressFamily,\n  NUMBER_7: 7 as AddressFamily,\n  NUMBER_8: 8 as AddressFamily,\n  NUMBER_9: 9 as AddressFamily,\n  NUMBER_10: 10 as AddressFamily,\n  NUMBER_11: 11 as AddressFamily,\n  NUMBER_12: 12 as AddressFamily,\n  NUMBER_13: 13 as AddressFamily,\n  NUMBER_14: 14 as AddressFamily,\n  NUMBER_15: 15 as AddressFamily,\n  NUMBER_16: 16 as AddressFamily,\n  NUMBER_17: 17 as AddressFamily,\n  NUMBER_18: 18 as AddressFamily,\n  NUMBER_19: 19 as AddressFamily,\n  NUMBER_21: 21 as AddressFamily,\n  NUMBER_22: 22 as AddressFamily,\n  NUMBER_23: 23 as AddressFamily,\n  NUMBER_24: 24 as AddressFamily,\n  NUMBER_25: 25 as AddressFamily,\n  NUMBER_26: 26 as AddressFamily,\n  NUMBER_28: 28 as AddressFamily,\n  NUMBER_29: 29 as AddressFamily,\n  NUMBER_65536: 65536 as AddressFamily,\n  NUMBER_65537: 65537 as AddressFamily,\n  NUMBER_MINUS_1: -1 as AddressFamily,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type CallingConventions = 1 | 2 | 3 | 32 | 64;\n\nexport const CallingConventions = {\n  NUMBER_1: 1 as CallingConventions,\n  NUMBER_2: 2 as CallingConventions,\n  NUMBER_3: 3 as CallingConventions,\n  NUMBER_32: 32 as CallingConventions,\n  NUMBER_64: 64 as CallingConventions,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type EventAttributes = 0 | 512 | 1024;\n\nexport const EventAttributes = {\n  NUMBER_0: 0 as EventAttributes,\n  NUMBER_512: 512 as EventAttributes,\n  NUMBER_1024: 1024 as EventAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type FieldAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 1024\n  | 4096\n  | 8192\n  | 32768\n  | 38144;\n\nexport const FieldAttributes = {\n  NUMBER_0: 0 as FieldAttributes,\n  NUMBER_1: 1 as FieldAttributes,\n  NUMBER_2: 2 as FieldAttributes,\n  NUMBER_3: 3 as FieldAttributes,\n  NUMBER_4: 4 as FieldAttributes,\n  NUMBER_5: 5 as FieldAttributes,\n  NUMBER_6: 6 as FieldAttributes,\n  NUMBER_7: 7 as FieldAttributes,\n  NUMBER_16: 16 as FieldAttributes,\n  NUMBER_32: 32 as FieldAttributes,\n  NUMBER_64: 64 as FieldAttributes,\n  NUMBER_128: 128 as FieldAttributes,\n  NUMBER_256: 256 as FieldAttributes,\n  NUMBER_512: 512 as FieldAttributes,\n  NUMBER_1024: 1024 as FieldAttributes,\n  NUMBER_4096: 4096 as FieldAttributes,\n  NUMBER_8192: 8192 as FieldAttributes,\n  NUMBER_32768: 32768 as FieldAttributes,\n  NUMBER_38144: 38144 as FieldAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type GenericParameterAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;\n\nexport const GenericParameterAttributes = {\n  NUMBER_0: 0 as GenericParameterAttributes,\n  NUMBER_1: 1 as GenericParameterAttributes,\n  NUMBER_2: 2 as GenericParameterAttributes,\n  NUMBER_3: 3 as GenericParameterAttributes,\n  NUMBER_4: 4 as GenericParameterAttributes,\n  NUMBER_8: 8 as GenericParameterAttributes,\n  NUMBER_16: 16 as GenericParameterAttributes,\n  NUMBER_28: 28 as GenericParameterAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type LayoutKind = 0 | 2 | 3;\n\nexport const LayoutKind = {\n  NUMBER_0: 0 as LayoutKind,\n  NUMBER_2: 2 as LayoutKind,\n  NUMBER_3: 3 as LayoutKind,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MemberTypes = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;\n\nexport const MemberTypes = {\n  NUMBER_1: 1 as MemberTypes,\n  NUMBER_2: 2 as MemberTypes,\n  NUMBER_4: 4 as MemberTypes,\n  NUMBER_8: 8 as MemberTypes,\n  NUMBER_16: 16 as MemberTypes,\n  NUMBER_32: 32 as MemberTypes,\n  NUMBER_64: 64 as MemberTypes,\n  NUMBER_128: 128 as MemberTypes,\n  NUMBER_191: 191 as MemberTypes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 1024\n  | 2048\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 53248;\n\nexport const MethodAttributes = {\n  NUMBER_0: 0 as MethodAttributes,\n  NUMBER_1: 1 as MethodAttributes,\n  NUMBER_2: 2 as MethodAttributes,\n  NUMBER_3: 3 as MethodAttributes,\n  NUMBER_4: 4 as MethodAttributes,\n  NUMBER_5: 5 as MethodAttributes,\n  NUMBER_6: 6 as MethodAttributes,\n  NUMBER_7: 7 as MethodAttributes,\n  NUMBER_8: 8 as MethodAttributes,\n  NUMBER_16: 16 as MethodAttributes,\n  NUMBER_32: 32 as MethodAttributes,\n  NUMBER_64: 64 as MethodAttributes,\n  NUMBER_128: 128 as MethodAttributes,\n  NUMBER_256: 256 as MethodAttributes,\n  NUMBER_512: 512 as MethodAttributes,\n  NUMBER_1024: 1024 as MethodAttributes,\n  NUMBER_2048: 2048 as MethodAttributes,\n  NUMBER_4096: 4096 as MethodAttributes,\n  NUMBER_8192: 8192 as MethodAttributes,\n  NUMBER_16384: 16384 as MethodAttributes,\n  NUMBER_32768: 32768 as MethodAttributes,\n  NUMBER_53248: 53248 as MethodAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodImplAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 8\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 4096\n  | 65535;\n\nexport const MethodImplAttributes = {\n  NUMBER_0: 0 as MethodImplAttributes,\n  NUMBER_1: 1 as MethodImplAttributes,\n  NUMBER_2: 2 as MethodImplAttributes,\n  NUMBER_3: 3 as MethodImplAttributes,\n  NUMBER_4: 4 as MethodImplAttributes,\n  NUMBER_8: 8 as MethodImplAttributes,\n  NUMBER_16: 16 as MethodImplAttributes,\n  NUMBER_32: 32 as MethodImplAttributes,\n  NUMBER_64: 64 as MethodImplAttributes,\n  NUMBER_128: 128 as MethodImplAttributes,\n  NUMBER_256: 256 as MethodImplAttributes,\n  NUMBER_512: 512 as MethodImplAttributes,\n  NUMBER_4096: 4096 as MethodImplAttributes,\n  NUMBER_65535: 65535 as MethodImplAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ModelValidationState = 0 | 1 | 2 | 3;\n\nexport const ModelValidationState = {\n  NUMBER_0: 0 as ModelValidationState,\n  NUMBER_1: 1 as ModelValidationState,\n  NUMBER_2: 2 as ModelValidationState,\n  NUMBER_3: 3 as ModelValidationState,\n};\n","export * from './actionContext';\r\nexport * from './actionContextBooleanFunc';\r\nexport * from './actionDescriptor';\r\nexport * from './addressFamily';\r\nexport * from './asnEncodedData';\r\nexport * from './assembly';\r\nexport * from './asymmetricAlgorithm';\r\nexport * from './attributeRouteInfo';\r\nexport * from './bindingInfo';\r\nexport * from './bindingSource';\r\nexport * from './body';\r\nexport * from './body1';\r\nexport * from './callingConventions';\r\nexport * from './cancellationToken';\r\nexport * from './claim';\r\nexport * from './claimsIdentity';\r\nexport * from './claimsPrincipal';\r\nexport * from './connectionInfo';\r\nexport * from './constructorInfo';\r\nexport * from './controllerActionDescriptor';\r\nexport * from './controllerContext';\r\nexport * from './customAttributeData';\r\nexport * from './customAttributeNamedArgument';\r\nexport * from './customAttributeTypedArgument';\r\nexport * from './eventAttributes';\r\nexport * from './eventInfo';\r\nexport * from './exception';\r\nexport * from './fieldAttributes';\r\nexport * from './fieldInfo';\r\nexport * from './filterDescriptor';\r\nexport * from './genericParameterAttributes';\r\nexport * from './hostString';\r\nexport * from './httpContext';\r\nexport * from './httpRequest';\r\nexport * from './httpResponse';\r\nexport * from './iActionConstraintMetadata';\r\nexport * from './iCustomAttributeProvider';\r\nexport * from './iFilterMetadata';\r\nexport * from './iIdentity';\r\nexport * from './iModelBinderFactory';\r\nexport * from './iModelMetadataProvider';\r\nexport * from './iObjectModelValidator';\r\nexport * from './iPAddress';\r\nexport * from './iPropertyFilterProvider';\r\nexport * from './iResponseCookies';\r\nexport * from './iRouter';\r\nexport * from './iServiceProvider';\r\nexport * from './iSession';\r\nexport * from './iUrlHelper';\r\nexport * from './iValueProviderFactory';\r\nexport * from './intPtr';\r\nexport * from './jwtToken';\r\nexport * from './keySizes';\r\nexport * from './layoutKind';\r\nexport * from './like';\r\nexport * from './location';\r\nexport * from './locationTag';\r\nexport * from './loginApiRequest';\r\nexport * from './markLocationsRequest';\r\nexport * from './memberInfo';\r\nexport * from './memberTypes';\r\nexport * from './methodAttributes';\r\nexport * from './methodBase';\r\nexport * from './methodImplAttributes';\r\nexport * from './methodInfo';\r\nexport * from './modelError';\r\nexport * from './modelMetadataBooleanFunc';\r\nexport * from './modelStateEntry';\r\nexport * from './modelValidationState';\r\nexport * from './module';\r\nexport * from './moduleHandle';\r\nexport * from './oid';\r\nexport * from './parameterAttributes';\r\nexport * from './parameterDescriptor';\r\nexport * from './parameterInfo';\r\nexport * from './pathString';\r\nexport * from './pipeReader';\r\nexport * from './pipeWriter';\r\nexport * from './post';\r\nexport * from './postComment';\r\nexport * from './postPaginatedList';\r\nexport * from './postTag';\r\nexport * from './postType';\r\nexport * from './postUserLocation';\r\nexport * from './problemDetailsFactory';\r\nexport * from './propertyAttributes';\r\nexport * from './propertyInfo';\r\nexport * from './publicKey';\r\nexport * from './queryString';\r\nexport * from './registerRequest';\r\nexport * from './routeData';\r\nexport * from './runtimeFieldHandle';\r\nexport * from './runtimeMethodHandle';\r\nexport * from './runtimeTypeHandle';\r\nexport * from './safeWaitHandle';\r\nexport * from './securityRuleSet';\r\nexport * from './slimUserResponse';\r\nexport * from './stream';\r\nexport * from './stringStringKeyValuePair';\r\nexport * from './stringStringValuesKeyValuePair';\r\nexport * from './structLayoutAttribute';\r\nexport * from './tag';\r\nexport * from './tagController';\r\nexport * from './type';\r\nexport * from './typeAttributes';\r\nexport * from './typeInfo';\r\nexport * from './typeObjectKeyValuePair';\r\nexport * from './user';\r\nexport * from './userFollowing';\r\nexport * from './userLocation';\r\nexport * from './userMessage';\r\nexport * from './userResponse';\r\nexport * from './waitHandle';\r\nexport * from './webSocketManager';\r\nexport * from './x500DistinguishedName';\r\nexport * from './x509Certificate2';\r\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ParameterAttributes =\n  | 0\n  | 1\n  | 2\n  | 4\n  | 8\n  | 16\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 61440;\n\nexport const ParameterAttributes = {\n  NUMBER_0: 0 as ParameterAttributes,\n  NUMBER_1: 1 as ParameterAttributes,\n  NUMBER_2: 2 as ParameterAttributes,\n  NUMBER_4: 4 as ParameterAttributes,\n  NUMBER_8: 8 as ParameterAttributes,\n  NUMBER_16: 16 as ParameterAttributes,\n  NUMBER_4096: 4096 as ParameterAttributes,\n  NUMBER_8192: 8192 as ParameterAttributes,\n  NUMBER_16384: 16384 as ParameterAttributes,\n  NUMBER_32768: 32768 as ParameterAttributes,\n  NUMBER_61440: 61440 as ParameterAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type PropertyAttributes =\n  | 0\n  | 512\n  | 1024\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 62464;\n\nexport const PropertyAttributes = {\n  NUMBER_0: 0 as PropertyAttributes,\n  NUMBER_512: 512 as PropertyAttributes,\n  NUMBER_1024: 1024 as PropertyAttributes,\n  NUMBER_4096: 4096 as PropertyAttributes,\n  NUMBER_8192: 8192 as PropertyAttributes,\n  NUMBER_16384: 16384 as PropertyAttributes,\n  NUMBER_32768: 32768 as PropertyAttributes,\n  NUMBER_62464: 62464 as PropertyAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type SecurityRuleSet = 0 | 1 | 2;\n\nexport const SecurityRuleSet = {\n  NUMBER_0: 0 as SecurityRuleSet,\n  NUMBER_1: 1 as SecurityRuleSet,\n  NUMBER_2: 2 as SecurityRuleSet,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type TypeAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 16\n  | 24\n  | 32\n  | 128\n  | 256\n  | 1024\n  | 2048\n  | 4096\n  | 8192\n  | 16384\n  | 65536\n  | 131072\n  | 196608\n  | 262144\n  | 264192\n  | 1048576\n  | 12582912;\n\nexport const TypeAttributes = {\n  NUMBER_0: 0 as TypeAttributes,\n  NUMBER_1: 1 as TypeAttributes,\n  NUMBER_2: 2 as TypeAttributes,\n  NUMBER_3: 3 as TypeAttributes,\n  NUMBER_4: 4 as TypeAttributes,\n  NUMBER_5: 5 as TypeAttributes,\n  NUMBER_6: 6 as TypeAttributes,\n  NUMBER_7: 7 as TypeAttributes,\n  NUMBER_8: 8 as TypeAttributes,\n  NUMBER_16: 16 as TypeAttributes,\n  NUMBER_24: 24 as TypeAttributes,\n  NUMBER_32: 32 as TypeAttributes,\n  NUMBER_128: 128 as TypeAttributes,\n  NUMBER_256: 256 as TypeAttributes,\n  NUMBER_1024: 1024 as TypeAttributes,\n  NUMBER_2048: 2048 as TypeAttributes,\n  NUMBER_4096: 4096 as TypeAttributes,\n  NUMBER_8192: 8192 as TypeAttributes,\n  NUMBER_16384: 16384 as TypeAttributes,\n  NUMBER_65536: 65536 as TypeAttributes,\n  NUMBER_131072: 131072 as TypeAttributes,\n  NUMBER_196608: 196608 as TypeAttributes,\n  NUMBER_262144: 262144 as TypeAttributes,\n  NUMBER_264192: 264192 as TypeAttributes,\n  NUMBER_1048576: 1048576 as TypeAttributes,\n  NUMBER_12582912: 12582912 as TypeAttributes,\n};\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  tsv: '   ',\n  ssv: ' ',\n  pipes: '|',\n};\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError, from } from 'rxjs';\nimport { map, catchError, switchMap } from 'rxjs/operators';\n\nimport { AlertController } from '@ionic/angular';\nimport { BASE_PATH } from '../../../environments/environment';\nimport { AccountsService } from '../clients/api/accounts.service';\n\nconst TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  constructor(\n    private alertController: AlertController,\n    private accountService: AccountsService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return from(this.accountService.getToken()).pipe(\n      switchMap((token) => {\n        if (token !== '') {\n          request = request.clone({\n            headers: request.headers.set('Authorization', 'Bearer ' + token),\n          });\n        }\n\n        // if (!request.headers.has('Content-Type')) {\n        //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n        // }\n\n        return next.handle(request).pipe(\n          map((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              // do nothing for now\n            }\n            return event;\n          }),\n          catchError((error: HttpErrorResponse) => {\n            const status = error.status;\n            const reason = error;\n\n            // this.presentAlert(status, reason);\n            return throwError(error);\n          })\n        );\n      })\n    );\n  }\n\n  async presentAlert(status, reason) {\n    const alert = await this.alertController.create({\n      header: status + ' Error',\n      subHeader: 'Subtitle',\n      message: reason,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\nimport firebase from 'firebase/app';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public router: Router, private zone: NgZone) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          // User is signed in.\n\n          resolve(true);\n        } else {\n          // No user is signed in.\n\n          resolve(false);\n          this.zone.run(() => {\n            this.router.navigate(['sign-in']);\n          });\n        }\n      });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'card-flip',\n  templateUrl: './card-flip.component.html',\n  styleUrls: ['./card-flip.component.scss'],\n})\nexport class CardFlipComponent implements OnInit {\n  constructor() {}\n\n  flipped = false;\n\n  ngOnInit() {}\n\n  public flip() {\n    this.flipped = !this.flipped;\n  }\n}\n","<div class=\"flip-container\" [class.flipped]=\"flipped\">\n  <div class=\"flipper\">\n    <div class=\"front\">\n      <ng-content select=\".card-flip-front\"></ng-content>\n      <ng-content select=\"flip-card\"></ng-content>\n    </div>\n\n    <div class=\"back\">\n      <ng-content select=\".card-flip-back\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Post, PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\n\n@Component({\n  selector: 'post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private zone: NgZone,\n    private postSvc: PostService\n  ) {\n    // this.route.queryParams.subscribe(params => {\n    //   if (this.router.getCurrentNavigation().extras.state) {\n    //     this.displayNewUser = true;\n    //     this.username = this.router.getCurrentNavigation().extras.state.newUser;\n    //   }\n    // });\n  }\n\n  @Input() posts: PostApi[] = [];\n\n  location = 'Charleston, SC';\n\n  // flipped = false;\n  likeIcon = '../../assets/UI/heart.svg';\n  likedIcon = '../../assets/UI/liked-icon.svg';\n  ngOnInit() {}\n\n  likePost(post: PostApi) {\n    if (!post.likedByCurrentUser) {\n      this.postSvc\n        .postsLikePostIdPost(post.postId.toString())\n        .pipe(take(1))\n        .subscribe();\n      post.likeCount++;\n      post.likedByCurrentUser = true;\n    }\n  }\n\n  viewComments(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        postId: post.postId,\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/comments', navigationExtras);\n    });\n  }\n\n  openProfile(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        userId: post.fkUserId,\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n}\n","<ion-virtual-scroll [items]=\"posts\" approxItemHeight=\"500\">\n  <ion-card\n    *virtualItem=\"let post; let itemBounds = bounds\"\n    [ngClass]=\"{\n      'post-image-container': post.postContentLink,\n      'post-container': post.postContentLink === undefined\n    }\"\n  >\n    <!-- <card-flip #card> -->\n    <!-- <div class =\"card-flip-front\" *ngIf=\"!card.flipped\"> -->\n    <div class=\"card-flip-front\">\n      <ion-grid class=\"three-col-grid\">\n        <ion-row>\n          <ion-col size=\".6\">\n            <ion-avatar>\n              <img [src]=\"post.fkUser.avi\" (click)=\"openProfile(post)\" />\n            </ion-avatar>\n          </ion-col>\n          <ion-col>\n            <ion-row>\n              <ion-card-title class=\"card-title\"\n                >{{ post.fkUser.firstname }}\n                {{ post.fkUser.lastname }}</ion-card-title\n              >\n            </ion-row>\n            <ion-row>\n              <ion-card-subtitle color=\"medium\">{{\n                post.location.locationName\n              }}</ion-card-subtitle>\n            </ion-row>\n          </ion-col>\n          <ion-col size=\".4\">\n            <ion-buttons>\n              <ion-button class=\"ion-justify-content-center\">\n                <img src=\"../../assets/UI/optionsDots.svg\" />\n              </ion-button>\n            </ion-buttons>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n      <ion-card-content>\n        <ion-grid>\n          <ion-row class=\"ion-align-items-baseline\">\n            <ion-col>\n              {{ post.postCaption }}\n            </ion-col>\n          </ion-row>\n          <ion-row *ngIf=\"post.postContentLink\">\n            <ion-col>\n              <div>\n                <img\n                  [src]=\"post.postContentLink\"\n                  height=\"300\"\n                  [alt]=\"post.name\"\n                  class=\"rcorners\"\n                />\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <ion-buttons>\n                <ion-button\n                  class=\"ion-justify-content-center\"\n                  (click)=\"likePost(post)\"\n                >\n                  <img\n                    [src]=\"\n                      post.likedByCurrentUser == true ? likedIcon : likeIcon\n                    \"\n                  />\n                </ion-button>\n                {{ post.likeCount || 0 }}\n              </ion-buttons>\n            </ion-col>\n            <ion-col size=\"4\">\n              <ion-buttons>\n                <ion-button\n                  class=\"ion-justify-content-center\"\n                  (click)=\"viewComments(post)\"\n                >\n                  <img src=\"../../assets/UI/comments.svg\" />\n                </ion-button>\n                {{ post.commentCount || 0 }}\n              </ion-buttons>\n            </ion-col>\n            <ion-col class=\"align-self-center text-center\">\n              <ion-note>{{ post.postTime | dateAgo }}</ion-note>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <ion-buttons>\n          <!-- <ion-button class=\"btn\" flip-card (click)=\"card.flip()\"> -->\n          <ion-button class=\"btn\" (click)=\"viewComments(post)\">\n            View all comments\n          </ion-button>\n        </ion-buttons>\n      </ion-card-content>\n    </div>\n    <!-- <div class =\"card-flip-back\" *ngIf=\"card.flipped\">\n        <ion-card-content>\n          <ion-buttons>\n            <ion-button class=\"btn\" flip-card (click)=\"card.flip()\">\n              Back to post\n            </ion-button>\n          </ion-buttons>\n            <ion-virtual-scroll [items]=\"notifications\">\n            <ion-item  *virtualItem=\"let comment; let itemBounds = bounds;\" class=\"comment\">\n              <ion-grid class=\"comments-grid\">\n                <ion-row>\n                  <ion-col class=\"ion-align-self-center\">\n                    <ion-row class=\"ion-align-items-center\">\n                      <ion-col>\n                        <img src=\"../../../assets/stockPhoto.png\" class=\"user-pic img-center\">\n                      </ion-col>\n                    </ion-row>\n                  </ion-col>\n                  <ion-col size=\"2.2\">\n                    <ion-row>\n                      <ion-col>\n                        <p><strong>{{comment.name}}</strong> {{comment.verbage}} {{comment.isComment == true ? \"\\\"\" + comment.comment + \"\\\"\": \"\"}}</p>\n                      </ion-col>\n                    </ion-row>\n                    <ion-row>\n                      <ion-col>\n                        <ion-text color=\"medium\">{{comment.time}}</ion-text>\n                      </ion-col>\n                    </ion-row>          \n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-item>\n          </ion-virtual-scroll>\n        </ion-card-content>\n      </div> -->\n    <!-- </card-flip> -->\n  </ion-card>\n</ion-virtual-scroll>\n","export enum MapSelectionMode {\n  MULTI_VISIT,\n  MULTI_TO_VISIT,\n  VISITED,\n  TO_VISIT,\n  FILTER,\n  NONE,\n}\n","import { OnInit, Injectable } from '@angular/core';\nimport stateRaw from './json/states.json';\nimport countryRaw from './json/countries.json';\n\nexport interface Country {\n  id: string;\n  name: string;\n}\n\nexport interface State {\n  id: string;\n  name: string;\n}\n\nexport interface IJsonCountries {\n  Countries: Country[];\n}\nexport interface IJsonStates {\n  States: State[];\n}\n\n@Injectable()\nexport class LocationSelector implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  public getStates() {\n    return stateRaw as IJsonStates;\n  }\n\n  public getCountries() {\n    return countryRaw as IJsonCountries;\n  }\n\n  public getAllLocations(): any[] {\n    const options: Array<{ id: string; name: string }> = [];\n\n    this.getCountries().Countries.forEach((e) => {\n      const name = e.name;\n      const id = e.id;\n      options.push({ id, name });\n    });\n\n    this.getStates().States.forEach((e) => {\n      const name = e.name;\n      const id = e.id;\n      options.push({ id, name });\n    });\n\n    return options.sort(this.compare);\n  }\n\n  public compare(a, b) {\n    let comparison = 0;\n    if (a.name > b.name) {\n      comparison = 1;\n    } else if (a.name < b.name) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  NgZone,\n  OnDestroy,\n  Injectable,\n} from '@angular/core';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport am4geodata_usaLow from '@amcharts/amcharts4-geodata/usaLow';\n// import am4geodata_canadaLow from '@amcharts/amcharts4-geodata/canadaLow';\n// import am4geodata_russiaLow from '@amcharts/amcharts4-geodata/russiaLow';\nimport { MapSelectionMode } from './enums/map-selection-mode';\n\n@Injectable()\nexport class Map {\n  private static instance: Map;\n\n  private chart: am4maps.MapChart;\n  private polygonArr: Array<am4maps.MapPolygon>;\n  public selectedArr: Array<{\n    locationId: string;\n    status: string;\n  }>;\n  private seriesArr: Array<am4maps.MapPolygonSeries>;\n  private selectedArea: am4maps.MapPolygon;\n  private selectionMode: MapSelectionMode;\n  private lastSelected: am4maps.MapPolygon;\n  private name: string;\n  private id: any;\n\n  constructor(private zone: NgZone) {\n    this.selectedArea = new am4maps.MapPolygon();\n    this.polygonArr = new Array<am4maps.MapPolygon>();\n    this.selectedArr = new Array();\n    this.seriesArr = new Array<am4maps.MapPolygonSeries>();\n    this.createMap(MapSelectionMode.NONE);\n    this.selectionMode = MapSelectionMode.NONE;\n  }\n\n  // static getInstance(zone: NgZone): Map {\n  //   if (!Map.instance) {\n  //     Map.instance = new Map(zone);\n  //   }\n\n  //   return Map.instance;\n  // }\n\n  get selectedId() {\n    return this.id;\n  }\n\n  set selectedId(id) {\n    this.id = id;\n  }\n\n  get selectedName() {\n    return this.name;\n  }\n\n  set selectedName(name) {\n    this.name = name;\n  }\n\n  async createMap(selectionMode: MapSelectionMode) {\n    am4core.disposeAllCharts();\n    this.zone.runOutsideAngular(() => {\n      let worldSeries: am4maps.MapPolygonSeries;\n      let usaSeries: am4maps.MapPolygonSeries;\n      // let canadaSeries: am4maps.MapPolygonSeries;\n      // let russiaSeries: am4maps.MapPolygonSeries;\n      let chart: am4maps.MapChart;\n\n      am4core.ready(() => {\n        am4core.useTheme(am4themes_animated);\n        am4core.options.autoDispose = true;\n\n        // Create map instance\n        chart = am4core.create(undefined, am4maps.MapChart);\n        chart.geodata = worldLow;\n        chart.projection = new am4maps.projections.Miller();\n        chart.zoomControl = new am4maps.ZoomControl();\n        chart.zoomControl.plusButton.hide();\n        chart.zoomControl.minusButton.hide();\n        chart.tapToActivate = true;\n        chart.seriesContainer.events.disableType('doublehit');\n        chart.chartContainer.background.events.disableType('doublehit');\n        chart.showOnInit = true;\n        // Home button\n        const homeButton = new am4core.Button();\n        homeButton.events.on('hit', () => {\n          chart.goHome();\n        });\n\n        homeButton.icon = new am4core.Sprite();\n        homeButton.padding(7, 5, 7, 5);\n        homeButton.width = 30;\n        homeButton.icon.path =\n          'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8';\n        homeButton.marginBottom = 10;\n        homeButton.parent = chart.zoomControl;\n        homeButton.insertAfter(chart.zoomControl.minusButton);\n\n        // Series for World map\n        worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        worldSeries.exclude = ['AQ'];\n        worldSeries.useGeodata = true;\n        this.seriesArr.push(worldSeries);\n        this.polygonArr.push(worldSeries.mapPolygons.template);\n\n        // Series for United States map\n        usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        usaSeries.geodata = am4geodata_usaLow;\n        this.seriesArr.push(usaSeries);\n        this.polygonArr.push(usaSeries.mapPolygons.template);\n\n        // // Series for Canada map\n        // canadaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // canadaSeries.geodata = am4geodata_canadaLow;\n        // this.seriesArr.push(canadaSeries);\n        // this.polygonArr.push(canadaSeries.mapPolygons.template);\n\n        // // Series for Russia map\n        // russiaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // russiaSeries.geodata = am4geodata_russiaLow;\n        // this.seriesArr.push(russiaSeries);\n        // this.polygonArr.push(russiaSeries.mapPolygons.template);\n      });\n\n      this.setupTemplates();\n      this.setSelectionMode(selectionMode);\n      this.chart = chart;\n    });\n  }\n\n  addMapToDiv(selectionMode: MapSelectionMode, divName: string) {\n    this.selectionMode = selectionMode;\n    this.setSelectionMode(this.selectionMode);\n    this.chart.moveHtmlContainer(divName);\n  }\n\n  setupTemplates() {\n    this.polygonArr.forEach((polygonTemplate) => {\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.nonScalingStroke = true;\n      polygonTemplate.applyOnClones = true;\n      polygonTemplate.strokeOpacity = 0.5;\n\n      const activeState = polygonTemplate.states.create('active');\n\n      const visited = polygonTemplate.states.create('visited');\n      visited.properties.fill = am4core.color('#128C7E');\n\n      const toVisit = polygonTemplate.states.create('toVisit');\n      toVisit.properties.fill = am4core.color('#F05E23');\n\n      const defaultState = polygonTemplate.states.create('default');\n      defaultState.properties.fill = am4core.color('#d9d9d9');\n\n      polygonTemplate.events.on('hit', (ev) => {\n        const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n\n        this.selectedArea = data;\n        // this.selectedName = data.name;\n\n        this.selectedId = data.id;\n\n        if (this.lastSelected !== ev.target) {\n          ev.target.series.chart.zoomToMapObject(ev.target);\n          this.lastSelected = ev.target;\n        }\n      });\n    });\n  }\n\n  setSelectionMode(selectionMode: MapSelectionMode) {\n    this.selectionMode = selectionMode;\n    // Allow only one location to be hightlighted at a time\n    if (this.selectionMode === MapSelectionMode.FILTER) {\n      this.polygonArr.forEach((polygonTemplate) => {\n        polygonTemplate.events.on('doublehit', (ev) => {\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n          this.resetAllLocations();\n          this.changeVisitStatus(data.id, 'visited');\n        });\n      });\n    } else if (this.selectionMode !== MapSelectionMode.NONE) {\n      this.polygonArr.forEach((polygonTemplate) => {\n        polygonTemplate.events.off('doublehit');\n        polygonTemplate.events.on('doublehit', (ev) => {\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n          if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n            this.changeVisitStatus(data.id, 'toVisit');\n          } else {\n            this.changeVisitStatus(data.id, 'visited');\n          }\n        });\n      });\n    }\n  }\n\n  zoomToLocation(locationId: string) {\n    for (const series of this.seriesArr) {\n      const result = series.getPolygonById(locationId);\n\n      if (result !== undefined) {\n        this.chart.zoomToMapObject(result);\n        break;\n      }\n    }\n  }\n\n  zoomHome() {\n    this.chart.goHome();\n  }\n\n  resetAllLocations() {\n    this.selectedArr.forEach((location) => {\n      for (const series of this.seriesArr) {\n        const result = series.getPolygonById(location.locationId);\n        if (result !== undefined) {\n          result.setState('default');\n        }\n      }\n    });\n  }\n\n  async changeVisitStatus(locationId: string, status: string) {\n    for (const series of this.seriesArr) {\n      const result = series.getPolygonById(locationId);\n\n      if (result !== undefined) {\n        this.selectedArea = result;\n        break;\n      }\n    }\n\n    const locationInArray = this.selectedArr.find(\n      (d) => d.locationId === locationId\n    );\n    if (locationInArray !== undefined) {\n      const index = this.selectedArr.indexOf(locationInArray, 0);\n      if (index > -1) {\n        this.selectedArr.splice(index, 1);\n        this.selectedArea.setState('default');\n      }\n    } else {\n      if (status === 'visited') {\n        this.selectedArea.setState('visited');\n      } else if (status === 'toVisit') {\n        this.selectedArea.setState('toVisit');\n      }\n      this.selectedArr.push({ locationId, status });\n    }\n  }\n\n  destroyMap() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostImagePage } from './add-post-image.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostImagePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostImagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostImagePageRoutingModule } from './add-post-image-routing.module';\n\nimport { AddPostImagePage } from './add-post-image.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostImagePageRoutingModule,\n    IonicSelectableModule,\n  ],\n  declarations: [AddPostImagePage],\n})\nexport class AddPostImagePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { CameraResultType, Photo, Camera } from '@capacitor/camera';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post-image',\n  templateUrl: './add-post-image.page.html',\n  styleUrls: ['./add-post-image.page.scss'],\n})\nexport class AddPostImagePage implements OnInit {\n  public selectedLocation: { id: string; name: string } = undefined;\n  public postText: string = undefined;\n  public locationOptions: { id: string; name: string }[] = [];\n  public userImage = '../../../assets/UI/clickToUpload.jpg';\n  image: Photo;\n  blob: Blob;\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) {}\n\n  ngOnInit() {\n    this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter((option) => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent;\n    text: string;\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    this.postService\n      .postsNewPostForm(\n        this.postText,\n        'image',\n        this.selectedLocation.id,\n        this.blob\n      )\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          loading.dismiss();\n          this.dismiss();\n        },\n        (err) => {\n          this.error = true;\n          loading.dismiss();\n        }\n      );\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl,\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>Upload Image</h1>\n    <h3>Everyone loves a nice travel related photo!</h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <div>\n            <img\n              (click)=\"getUserImage()\"\n              height=\"300\"\n              [src]=\"userImage\"\n              class=\"rcorners\"\n            />\n          </div>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea\n              [(ngModel)]=\"postText\"\n              rows=\"10\"\n              placeholder=\"Caption*\"\n              maxlength=\"250\"\n              autocapitalize=\"true\"\n              required\n            ></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\"\n            >\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\n        when creating post\n      </div>\n    </div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"post()\"\n        [disabled]=\"!postText && selectedLocation !== undefined\"\n        >Add post</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostPage } from './add-post.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\n\nimport { AddPostPage } from './add-post.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostPageRoutingModule,\n    IonicSelectableModule,\n  ],\n  declarations: [AddPostPage],\n})\nexport class AddPostPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { CreatePostRequest } from 'src/app/backend/clients/model/createPostRequest';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.page.html',\n  styleUrls: ['./add-post.page.scss'],\n})\nexport class AddPostPage implements OnInit {\n  public selectedLocation: { id: string; name: string } = undefined;\n  public postText: string = undefined;\n  public locationOptions: { id: string; name: string }[] = [];\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) {}\n\n  ngOnInit() {\n    this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter((option) => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent;\n    text: string;\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    this.postService\n      .postsNewPostForm(this.postText, 'text', this.selectedLocation.id)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          loading.dismiss();\n          this.dismiss();\n        },\n        (err) => {\n          this.error = true;\n          loading.dismiss();\n        }\n      );\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>Create Post</h1>\n    <h3>\n      Looking for travel advice? Want to share something interesting about a\n      destination? Let's hear it!\n    </h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea\n              [(ngModel)]=\"postText\"\n              rows=\"10\"\n              placeholder=\"Travel related content*\"\n              maxlength=\"250\"\n              autocapitalize=\"true\"\n              required\n            ></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\"\n            >\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\n        when creating post\n      </div>\n    </div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"post()\"\n        [disabled]=\"!postText && !selectedLocation\"\n        >Add post</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarkLocationPage } from './mark-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MarkLocationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MarkLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MarkLocationPageRoutingModule } from './mark-location-routing.module';\n\nimport { MarkLocationPage } from './mark-location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MarkLocationPageRoutingModule,\n  ],\n  declarations: [MarkLocationPage],\n})\nexport class MarkLocationPageModule {}\n","import { Component, Input, NgZone } from '@angular/core';\nimport { AccountsService, MarkLocationsRequest } from 'src/app/backend/clients';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { Map } from 'src/app/objects/map';\nimport { ModalController } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'mark-location',\n  templateUrl: './mark-location.page.html',\n  styleUrls: ['./mark-location.page.scss'],\n})\nexport class MarkLocationPage {\n  // Data passed in by componentProps\n  @Input() selectionMode: MapSelectionMode;\n  public locationRequest = {\n    locations: {},\n  } as MarkLocationsRequest;\n  private map: Map;\n  public titleTextVisited = 'Where have you visited?';\n  public titleTextToVisit = 'Bucketlist';\n  public subtitleTextVisited = `Show your friends (and yourself) where you've been!`;\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\n  public displayVisitedText = true;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private zone: NgZone,\n    private accountService: AccountsService\n  ) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'mark-map');\n    if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n      this.displayVisitedText = false;\n    }\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  mapLocationsToRequest() {\n    this.map.selectedArr.forEach((location) => {\n      this.locationRequest.locations[location.locationId] = location.status;\n    });\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n\n  onSubmit() {\n    this.mapLocationsToRequest();\n    this.accountService\n      .accountUpdateLocationsPost(this.locationRequest)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          this.dismiss();\n        }\n        // (error) => {\n        //   this.hasError = true;\n        //   this.error = 'An unexpected error has occurred.';\n        // }\n      );\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\n    <h3>\n      Click a location on the map to zoom to it. Double click the location to\n      select/deselect it.\n    </h3>\n    <div id=\"mark-map\" class=\"chartdiv\"></div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"onSubmit()\"\n        >Update my map</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPageRoutingModule } from './add-routing.module';\n\nimport { AddPage } from './add.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, AddPageRoutingModule],\n  declarations: [AddPage],\n})\nexport class AddPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { ModalController } from '@ionic/angular';\nimport { MarkLocationPage } from '../../mark-location/mark-location.page';\nimport { AddPostPage } from '../../add-post/add-post.page';\nimport { AddPostImagePage } from '../../add-post-image/add-post-image.page';\n\n@Component({\n  selector: 'add-modal',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage {\n  constructor(public router: Router, private modalCtrl: ModalController) {}\n\n  async markLocationsToVisit() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.TO_VISIT,\n      },\n    });\n    return await modal.present();\n  }\n\n  async markVisitedLocations() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.VISITED,\n      },\n    });\n    return await modal.present();\n  }\n\n  async addNewPost() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostPage,\n      componentProps: {},\n    });\n    return await modal.present();\n  }\n\n  async addNewImage() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostImagePage,\n      componentProps: {},\n    });\n    return await modal.present();\n  }\n}\n","<ion-content lines=\"none\" [scrollY]=\"true\">\n  <ion-item lines=\"none\"><b>Mark Location</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/visitedIcon.svg\" />\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markVisitedLocations()\"\n          ><b>Visited</b></ion-col\n        >\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/toVisitIcon.svg\" />\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markLocationsToVisit()\"\n          ><b>Wants to visit</b></ion-col\n        >\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-item lines=\"none\"><b>Add Post</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/pictureIcon.svg\" />\n        </ion-col>\n        <ion-col (click)=\"addNewImage()\" size=\"10\"><b>Image</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/postIcon.svg\" />\n        </ion-col>\n        <ion-col (click)=\"addNewPost()\" size=\"10\"><b>Post</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { AccountsService } from 'src/app/backend/clients/api/accounts.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n  userEmail = '';\n\n  constructor(\n    private accountService: AccountsService,\n    private modalController: ModalController,\n    private loadingController: LoadingController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async closeModal() {\n    await this.modalController.dismiss();\n  }\n\n  async onSubmit() {\n    this.accountService.PasswordRecover(this.userEmail).then(() =>\n      this.closeModal()\n    );\n  }\n}\n","<ion-content [scrollY]=\"false\">\n  <div class=\"center-any-object\">\n    <h3 >Reset Password</h3>\n  </div>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-item class=\"roundedInput\">\n          <ion-input\n            autocapitalize=\"true\"\n            placeholder=\"Email\"\n            type=\"email\"\n            [(ngModel)]=\"userEmail\"\n            required\n          ></ion-input>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button class=\"reset-button\" expand=\"block\" (click)=\"onSubmit()\"\n          >Submit</ion-button\n        >\n      </ion-col>\n      <ion-col>\n        <ion-button\n          color=\"medium\"\n          expand=\"block\"\n          (click)=\"closeModal()\"\n          >Close</ion-button\n        >\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapFilterPage } from './map-filter.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapFilterPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapFilterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapFilterPageRoutingModule } from './map-filter-routing.module';\n\nimport { MapFilterPage } from './map-filter.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MapFilterPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [MapFilterPage],\n})\nexport class MapFilterPageModule {}\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { Map } from '../../../objects/map';\nimport { MapSelectionMode } from '../../../objects/enums/map-selection-mode';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'map-filter',\n  templateUrl: './map-filter.page.html',\n  styleUrls: ['./map-filter.page.scss'],\n})\nexport class MapFilterPage {\n  private map: Map;\n  public selectionMode: MapSelectionMode = MapSelectionMode.FILTER;\n  public filter = '';\n  public selectedLocation: string;\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private zone: NgZone,\n    private navParams: NavParams\n  ) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'filter-map');\n    this.filter = this.navParams.data.filter;\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  async restFilter() {\n    this.filter = '';\n    await this.closeModal();\n  }\n\n  async filterSubmit() {\n    if (this.map.selectedArr.length > 0) {\n      this.filter = this.map.selectedArr[0].locationId;\n    }\n    await this.closeModal();\n  }\n\n  async closeModal() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n    const onClosedData = this.filter;\n    await this.modalController.dismiss(onClosedData);\n  }\n}\n","<ion-content [scrollY]=\"false\">\n  <ion-searchbar spellcheck=\"true\" showCancelButton=\"true\"></ion-searchbar>\n  <div id=\"filter-map\" class=\"chartdiv\" onload=\"onLoad()\"></div>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-button color=\"medium\" expand=\"block\" (click)=\"restFilter()\"\n          >Reset</ion-button\n        >\n      </ion-col>\n      <ion-col>\n        <ion-button\n          class=\"filter-button\"\n          expand=\"block\"\n          (click)=\"filterSubmit()\"\n          >Filter</ion-button\n        >\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, SearchPageRoutingModule],\n  declarations: [SearchPage],\n})\nexport class SearchPageModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from 'src/app/backend/clients';\nimport { take } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { SlimUserResponse } from 'src/app/backend/clients/model/slimUserResponse';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit {\n  constructor(\n    public viewCtrl: ModalController,\n    public userService: UserService,\n    private zone: NgZone,\n    private router: Router\n  ) {}\n\n  people: BehaviorSubject<SlimUserResponse[]> = new BehaviorSubject([]);\n  searchQuery = '';\n\n  ngOnInit() {}\n\n  search() {\n    this.userService\n      .userSearchQueryGet(this.searchQuery)\n      .pipe(take(1))\n      .subscribe((users) => {\n        this.people.next(users);\n      });\n  }\n\n  goToProfile(user: SlimUserResponse) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: user.id,\n      },\n    };\n    const onClosedData = user.id;\n    this.viewCtrl.dismiss(onClosedData);\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n","<ion-toolbar>\n  <ion-buttons slot=\"end\">\n    <ion-button large (click)=\"dismiss()\" slot=\"end\">\n      <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n</ion-toolbar>\n\n<ion-searchbar\n  spellcheck=\"true\"\n  (search)=\"search()\"\n  [(ngModel)]=\"searchQuery\"\n></ion-searchbar>\n<ion-content>\n  <ion-virtual-scroll [items]=\"people | async\">\n    <ion-card\n      (click)=\"goToProfile(item)\"\n      *virtualItem=\"let item; let itemBounds = bounds;\"\n    >\n      <ion-grid class=\"search-grid\">\n        <ion-row>\n          <ion-col class=\"ion-align-self-center\">\n            <ion-row class=\"ion-align-items-center\">\n              <ion-col>\n                <img [src]=\"item.avi\" class=\"user-pic img-center\" />\n              </ion-col>\n            </ion-row>\n          </ion-col>\n          <ion-col size=\"1.5\" class=\"ion-align-self-center\">\n            <ion-row>\n              <ion-col>\n                <ion-text color=\"dark\"\n                  >{{item.firstName}} {{item.lastName}}</ion-text\n                >\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <ion-text>{{item.residenceLocation}}</ion-text>\n              </ion-col>\n            </ion-row>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-card>\n  </ion-virtual-scroll>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserSettingsPage } from './user-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserSettingsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserSettingsPageRoutingModule } from './user-settings-routing.module';\n\nimport { UserSettingsPage } from './user-settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UserSettingsPageRoutingModule,\n  ],\n  declarations: [UserSettingsPage],\n})\nexport class UserSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Photo, Camera, CameraResultType } from '@capacitor/camera';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport {\n  AccountsService,\n  UserResponse,\n} from 'src/app/backend/clients';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.page.html',\n  styleUrls: ['./user-settings.page.scss'],\n})\nexport class UserSettingsPage implements OnInit {\n  userImage = '../../../assets/UI/profilePicUpload.svg';\n\n  aboutForm: FormGroup;\n\n  image: Photo;\n\n  blob: Blob = undefined;\n\n  user: UserResponse;\n\n  constructor(\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    private navParams: NavParams,\n    private modalController: ModalController,\n    private accountService: AccountsService,\n  ) {\n    this.user = this.navParams.data.user;\n    this.userImage = this.user.avi;\n  }\n\n  ngOnInit() {\n    const birthPlace = new FormControl('');\n    const residence = new FormControl('');\n    const education = new FormControl('');\n    const title = new FormControl('');\n    this.aboutForm = new FormGroup({\n      birthPlace,\n      residence,\n      education,\n      title,\n    });\n  }\n\n  async onSubmit() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    const title = this.aboutForm.controls.title.value === ''\n      ? this.user.title\n      : this.aboutForm.controls.title.value;\n    const education = this.aboutForm.controls.education.value === ''\n      ? this.user.education\n      : this.aboutForm.controls.education.value;\n    const birthPlace = this.aboutForm.controls.birthPlace.value === ''\n      ? this.user.birthLocation\n      : this.aboutForm.controls.birthPlace.value;\n    const residence = this.aboutForm.controls.residence.value === ''\n      ? this.user.residenceLocation\n      : this.aboutForm.controls.residence.value;\n\n    // todo create a forkjoin or something here to make these run together\n    this.accountService\n      .accountUpdatePost(\n        this.user.firstname,\n        this.user.lastname,\n        title,\n        education,\n        birthPlace,\n        residence,\n      )\n      .pipe(take(1))\n      .subscribe(async () => {\n        if (this.blob !== undefined) {\n          this.accountService\n            .accountUpdateProfileImagePost(this.blob)\n            .pipe(take(1))\n            .subscribe(() => {});\n        }\n        await loading.dismiss();\n        this.dismiss();\n      });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i += 1) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl,\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n\n  async logout() {\n    await this.accountService.logout();\n    this.dismiss();\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"secondary\">\n          <ion-button color=\"dark\" (click)=\"dismiss()\">\n            <ion-icon name=\"arrow-back\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button color=\"dark\" (click)=\"logout()\">\n            <ion-icon name=\"log-out-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <h1>Update profile</h1>\n    <form [formGroup]=\"aboutForm\" (ngSubmit)=\"onSubmit()\">\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"3\">\n            <ion-avatar>\n              <img (click)=\"getUserImage()\" [src]=\"userImage\" />\n            </ion-avatar>\n          </ion-col>\n          <ion-col>\n            <h3>Change your profile pic</h3>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Birthplace</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.birthLocation\"\n                type=\"text\"\n                formControlName=\"birthPlace\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Current Residence</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.residenceLocation\"\n                type=\"text\"\n                formControlName=\"residence\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Education</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.education\"\n                type=\"text\"\n                formControlName=\"education\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Title or Employment</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.title\"\n                type=\"text\"\n                formControlName=\"title\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n      <div class=\"button-div\">\n        <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\"\n          >Update</ion-button\n        >\n      </div>\n    </form>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserTimelinePage } from './user-timeline.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserTimelinePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserTimelinePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserTimelinePageRoutingModule } from './user-timeline-routing.module';\n\nimport { UserTimelinePage } from './user-timeline.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    UserTimelinePageRoutingModule,\n  ],\n  declarations: [UserTimelinePage],\n})\nexport class UserTimelinePageModule {}\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport {\n  IonInfiniteScroll,\n  LoadingController,\n  ModalController,\n  NavParams,\n} from '@ionic/angular';\nimport { SearchPage } from '../modals/search/search.page';\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\nimport { PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'user-timeline',\n  templateUrl: './user-timeline.page.html',\n  styleUrls: ['./user-timeline.page.scss'],\n})\nexport class UserTimelinePage {\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\n  posts: PostApi[] = [];\n  pageNumber = 1;\n  morePages = false;\n  filter = '';\n  selectedUserId = '';\n\n  constructor(\n    public modalController: ModalController,\n    private loadingController: LoadingController,\n    private accountService: AccountsService,\n    private postService: PostService,\n    private navParams: NavParams,\n    private zone: NgZone,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() {\n    this.selectedUserId = this.navParams.data.userId;\n    this.postService\n      .postsPageGet(this.pageNumber, this.filter, this.selectedUserId)\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n        this.posts = res.items;\n      });\n  }\n\n  getPosts(event?: any) {\n    if (this.morePages) {\n      this.postService\n        .postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId)\n        .pipe(take(1))\n        .subscribe((res) => {\n          this.morePages = res.hasNextPage;\n          this.pageNumber = res.pageIndex;\n\n          // TODO The posts shouldn't be overwritten here but rather appended... not working though\n          if (this.posts.length === 0) {\n            this.posts = [];\n          } else {\n            const oldposts = this.posts;\n            this.posts = [];\n            const oldResLen = oldposts.length;\n            for (let i = 0; i < oldResLen; i++) {\n              this.posts.push(oldposts[i]);\n            }\n          }\n          const resLen = res.items.length;\n          for (let i = 0; i < resLen; i++) {\n            this.posts.push(res.items[i]);\n          }\n          // this.posts = res.items;\n          if (event) {\n            event.target.complete();\n          }\n        });\n    } else {\n      this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\n    }\n  }\n\n  refreshPosts(event?: any) {\n    this.postService\n      .postsPageGet(1, this.filter, this.selectedUserId)\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n        this.posts = res.items;\n        if (event) {\n          event.target.complete();\n        }\n      });\n  }\n\n  async presentSearchModal() {\n    const modal = await this.modalController.create({\n      component: SearchPage,\n      componentProps: {},\n      showBackdrop: true,\n      cssClass: 'search-modal',\n    });\n    return await modal.present();\n  }\n\n  openProfile() {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: this.accountService.getUserId(),\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n\n  async presentMapFilter() {\n    const modal = await this.modalController.create({\n      component: MapFilterPage,\n      showBackdrop: true,\n      cssClass: 'filter-modal',\n      componentProps: {\n        filter: this.filter,\n      },\n    });\n\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned !== null) {\n        this.filter = dataReturned.data;\n        this.refreshPosts();\n        await this.loadingController.dismiss();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n}\n","<ion-header style=\"background-color: #128c7e\" class=\"ion-no-border\">\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\n    <ion-buttons slot=\"start\">\n      <ion-button slot=\"start\" large (click)=\"dismiss()\">\n        <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button slot=\"end\" (click)=\"presentSearchModal()\">\n        <img class=\"img-center\" src=\"../../../assets/UI/search-outline.svg\" />\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"false\" color=\"light\">\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\n    <ion-refresher-content\n      pullingText=\"Pull to refresh\"\n      refreshingSpinner=\"circles\"\n      refreshingText=\"Refreshing...\"\n    >\n    </ion-refresher-content>\n  </ion-refresher>\n  <post [posts]=\"posts\"></post>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"circles\"\n      loadingText=\"Getting more posts...\"\n    >\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n</ion-content>\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\n    <img src=\"../../assets/UI/FilterClosed.svg\" />\n  </ion-button>\n</ion-fab>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateAgo',\n})\nexport class DateAgoPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value) {\n      const now = new Date().toUTCString();\n      const seconds = Math.abs(\n        (new Date(now).getTime() - new Date(value + 'Z').getTime()) / 1000\n      ); // appending Z lets the date know its UTC\n\n      if (seconds < 29) {\n        // less than 30 seconds ago will show as 'Just now'\n        return 'Just now';\n      }\n      const intervals = {\n        day: 86400,\n        hour: 3600,\n        minute: 60,\n        second: 1,\n      };\n      let counter;\n      // tslint:disable-next-line: forin\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n\n        if (Math.floor(seconds / 86400) > 1) {\n          const date = new Date(value);\n          const month = date.toLocaleString('default', { month: 'long' });\n          return `${month} ${date.getDate()}`;\n        }\n\n        if (counter > 0) {\n          if (counter === 1) {\n            return counter + ' ' + i + ' ago'; // singular (1 hour ago)\n          } else {\n            return counter + ' ' + i + 's ago'; // plural (2 hours ago)\n          }\n        }\n      }\n    }\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: any[] = [];\n  public dis: boolean;\n  constructor() {}\n\n  add(modal: any) {\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\n    modal.present();\n  }\n\n  close(id: string) {\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\n    modal.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { PostComponent } from '../components/post/post.component';\nimport { CardFlipComponent } from '../components/card-flip/card-flip.component';\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [PostComponent, CardFlipComponent, DateAgoPipe],\n  providers: [],\n  exports: [PostComponent, CardFlipComponent, DateAgoPipe],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDpx-hQIOXVBbNfGRaFQQTx-vzVwKwpA4Y',\n    authDomain: 'visit-4efb7.firebaseapp.com',\n    projectId: 'visit-4efb7',\n    storageBucket: 'visit-4efb7.appspot.com',\n    messagingSenderId: '227659578598',\n    appId: '1:227659578598:web:94cdae4520ab27359d8f27',\n    measurementId: 'G-P6HNG7BB8S',\n  },\n};\n\nexport const BASE_PATH = 'https://visit-service.azurewebsites.net';\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n\n// Call the element loader after the platform has been bootstrapped\ndefineCustomElements(window);\n"]}
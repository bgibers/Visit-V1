{"version":3,"sources":["webpack:///src/app/pages/sign-in/sign-in-routing.module.ts","webpack:///src/app/pages/sign-in/sign-in.module.ts","webpack:///src/app/pages/sign-in/sign-in.page.ts","webpack:///src/app/pages/sign-in/sign-in.page.html"],"names":["routes","path","component","SignInPageRoutingModule","forChild","imports","exports","SignInPageModule","declarations","SignInPage","formBuilder","loadingController","modalController","platform","cd","zone","router","accountService","passwordType","validationMessages","email","type","message","password","invalidLogin","invalidLoginText","showAppleSignIn","is","compose","required","pattern","loginForm","loginApple","then","res","firstLogin","navigationExtras","replaceUrl","state","firstName","lastName","sso","run","navigateByUrl","values","loginModel","userName","controls","value","create","loading","present","login","console","log","dismiss","err","code","refresh","showBackdrop","cssClass","modal","onDidDismiss","dataReturned","detectChanges","onSubmit","togglePasswordMode","openRegister","presentForgotPassword","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBAHzB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGyB,EAFxB,4DAEwB;;;;0HAAvBG,uB,EAAuB;AAAA;AAAA,kBAFxB,4DAEwB;AAAA,O;AAFZ,K;;;;;sEAEXA,uB,EAAuB;cAJnC,sDAImC;eAJ1B;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI0B,Q;;;;;;;;;;;;;;;;;;AChBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBATlB,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,+EALO,CASkB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAFZ,wDAEY;AAFF,kBANvB,4DAMuB,EALvB,0DAKuB,EAJvB,kEAIuB,EAHvB,0DAGuB,EAFvB,+EAEuB;AAEE,O;AAJF,K;;;;;sEAIdA,gB,EAAgB;cAV5B,sDAU4B;eAVnB;AACRF,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,+EALO,CADD;AAQRG,sBAAY,EAAE,CAAC,wDAAD;AARN,S;AAUmB,Q;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcY;;AAIE;;AAAwD;;AAE1D;;;;;;AAF0D;;AAAA;;;;;;AAL5D;;AACE;;AAOF;;;;;;;;AALI;;AAAA;;;;;;AAuBN;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAyCJ;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AACA;;AACF;;;;QDhEOC,U;AAgBX,0BACSC,WADT,EAESC,iBAFT,EAGSC,eAHT,EAIUC,QAJV,EAKUC,EALV,EAMUC,IANV,EAOUC,MAPV,EAQUC,cARV,EAQyC;AAAA;;AAPhC,aAAAP,WAAA,GAAAA,WAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACC,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AAvBV,aAAAC,YAAA,GAAe,UAAf;AAGA,aAAAC,kBAAA,GAAqB;AACnBC,eAAK,EAAE,CACL;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADK,EAEL;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFK,CADY;AAKnBC,kBAAQ,EAAE,CAAC;AAAEF,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WAAD;AALS,SAArB;AAQA,aAAAE,YAAA,GAAe,KAAf;AACA,aAAAC,gBAAA,GAAmB,EAAnB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AAWI;;;;6CAEiB;AACnB,eAAKR,YAAL,GAAoB,KAAKA,YAAL,KAAsB,MAAtB,GAA+B,UAA/B,GAA4C,MAAhE;AACD;;;;;;;;;;AAGC;AACA,yBAAKQ,eAAL,GAAuB,KAAKb,QAAL,CAAcc,EAAd,CAAiB,KAAjB,CAAvB;AAEMP,yB,GAAQ,IAAI,0DAAJ,CACZ,EADY,EAEZ,0DAAWQ,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,OAAX,CAAmB,iDAAnB,CAFiB,CAAnB,CAFY,C;AAORP,4B,GAAW,IAAI,0DAAJ,CACf,EADe,EAEf,0DAAWK,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAFe,C;AAIjB,yBAAKE,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BX,2BAAK,EAALA,KAD6B;AAE7BG,8BAAQ,EAARA;AAF6B,qBAAd,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAOM,KAAKN,cAAL,CAAoBe,UAApB,GAAiCC,IAAjC;AAAA,yFAAsC,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxC,oCAAIA,GAAG,CAACC,UAAJ,KAAmB,IAAvB,EAA6B;AACrBC,kDADqB,GACgB;AACzCC,8CAAU,EAAE,KAD6B;AAEzCC,yCAAK,EAAE;AACLC,+CAAS,EAAEL,GAAG,CAACK,SADV;AAELC,8CAAQ,EAAEN,GAAG,CAACM,QAFT;AAGLpB,2CAAK,EAAEc,GAAG,CAACd,KAHN;AAILG,8CAAQ,EAAE,EAJL;AAKLkB,yCAAG,EAAE;AALA;AAFkC,mCADhB;;AAW3B,uCAAI,CAAC1B,IAAL,CAAU2B,GAAV,CAAc,YAAM;AAClB,yCAAI,CAAC1B,MAAL,CAAY2B,aAAZ,CAA0B,sBAA1B,EAAkDP,gBAAlD;AACD,mCAFD;AAGD,iCAdD,MAcO;AACCA,mDADD,GACsC;AACzCC,8CAAU,EAAE;AAD6B,mCADtC;;AAIL,uCAAI,CAACtB,IAAL,CAAU2B,GAAV,CAAc,YAAM;AAClB,yCAAI,CAAC1B,MAAL,CAAY2B,aAAZ,CAA0B,OAA1B,EAAmCP,iBAAnC;AACD,mCAFD;AAGD;;AAtBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAtC;;AAAA;AAAA;AAAA;AAAA,wB;;;;;;;;;;;;;;;;;;;oGA0BOQ,M;;;;;;;;AACPC,8B,GAAa;AACjBC,8BAAQ,EAAE,KAAKf,SAAL,CAAegB,QAAf,CAAwB3B,KAAxB,CAA8B4B,KADvB;AAEjBzB,8BAAQ,EAAE,KAAKQ,SAAL,CAAegB,QAAf,CAAwBxB,QAAxB,CAAiCyB;AAF1B,qB;;2BAKG,KAAKrC,iBAAL,CAAuBsC,MAAvB,CAA8B,CAClD;AADkD,qBAA9B,C;;;AAAhBC,2B;;2BAGAA,OAAO,CAACC,OAAR,E;;;AAEN,yBAAKlC,cAAL,CAAoBmC,KAApB,CAA0BP,UAAU,CAACC,QAArC,EAA+CD,UAAU,CAACtB,QAA1D,EAAoEU,IAApE,CACE,UAACC,GAAD,EAAS;AACPmB,6BAAO,CAACC,GAAR,CAAYpB,GAAZ;AACA,4BAAI,CAACV,YAAL,GAAoB,KAApB;;AAEA,4BAAI,CAACT,IAAL,CAAU2B,GAAV,CAAc,YAAM;AAClB,4BAAMN,gBAAgB,GAAqB;AACzCC,oCAAU,EAAE;AAD6B,yBAA3C;;AAMA,8BAAI,CAACrB,MAAL,CAAY2B,aAAZ,CAA0B,OAA1B,EAAmCP,gBAAnC;AACD,uBARD;;AASAc,6BAAO,CAACK,OAAR;AACD,qBAfH,EAgBE,UAACC,GAAD,EAAS;AACP,0BAAIA,GAAG,CAACC,IAAJ,KAAa,qBAAjB,EAAwC;AACtC,8BAAI,CAAChC,gBAAL,GAAwB,gBAAxB;AACD,uBAFD,MAEO,IAAI+B,GAAG,CAACC,IAAJ,KAAa,qBAAjB,EAAwC;AAC7C,8BAAI,CAAChC,gBAAL,GAAwB,kBAAxB;AACD,uBAFM,MAEA;AACL,8BAAI,CAACA,gBAAL,GAAwB,kBAAxB;AACD;;AAED,4BAAI,CAACD,YAAL,GAAoB,IAApB;;AACA,4BAAI,CAACkC,OAAL;;AACAR,6BAAO,CAACK,OAAR;AACD,qBA5BH;;;;;;;;;;;;;;;;;;uCAgCa;AAAA;;AACb,cAAMnB,gBAAgB,GAAqB;AACzCC,sBAAU,EAAE,KAD6B;AAEzCC,iBAAK,EAAE,CACL;AADK;AAFkC,WAA3C;AAMA,eAAKvB,IAAL,CAAU2B,GAAV,CAAc,YAAM;AAClB,kBAAI,CAAC1B,MAAL,CAAY2B,aAAZ,CAA0B,WAA1B,EAAuCP,gBAAvC;AACD,WAFD;AAGD;;;;;;;;;;;2BAGqB,KAAKxB,eAAL,CAAqBqC,MAArB,CAA4B;AAC9C/C,+BAAS,EAAE,+FADmC;AAE9CyD,kCAAY,EAAE,IAFgC;AAG9CC,8BAAQ,EAAE;AAHoC,qBAA5B,C;;;AAAdC,yB;AAMNA,yBAAK,CAACC,YAAN,GAAqB7B,IAArB;AAAA,0FAA0B,kBAAO8B,YAAP;AAAA;AAAA;AAAA;AAAA;AACxB,oCAAIA,YAAY,KAAK,IAArB,EAA2B,CACzB;AACA;AACA;AACD;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1B;;AAAA;AAAA;AAAA;AAAA;;2BAQaF,KAAK,CAACV,OAAN,E;;;;;;;;;;;;;;;;;;;;;kCAGL;AACR,eAAKrC,EAAL,CAAQkD,aAAR;AACD;;;4BAEqB;AACpB,iBAAO,KAAKxC,YAAZ;AACD;;;;;;;uBA9JUf,U,EAAU,2H,EAAA,iI,EAAA,+H,EAAA,wH,EAAA,gI,EAAA,qH,EAAA,uH,EAAA,wI;AAAA,K;;;YAAVA,U;AAAU,8B;AAAA,e;AAAA,a;AAAA,6rC;AAAA;AAAA;ACrBvB;;AACE;;AACE;;AAAI;;AAAO;;AACX;;AAA8B;AAAA,mBAAY,IAAAwD,QAAA,qBAAZ;AAAqC,WAArC;;AAC5B;;AACE;;AAOA;;AACE;;AASF;;AACF;;AACA;;AACE;;AAOA;;AAGE;AAAA,mBAAS,IAAAC,kBAAA,EAAT;AAA6B,WAA7B;;AACD;;AACH;;AACA;;AACE;;AAIF;;AACA;;AACE;;AACE;;AACF;;AAK+C;;AAAK;;AAEpD;;AACA;;AACE;;AAIA;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAEC;;AAAQ;;AAET;;AACJ;;AACA;;AACF;;AAUA;;AACE;;AACE;;AACA;;AACF;;AACA;;AAIA;;AAAmD;AAAA,mBAAS,IAAAC,qBAAA,EAAT;AAAgC,WAAhC;;AAAkC;;AAAgB;;AACvG;;AACF;;AACF;;;;AAzFuB;;AAGb;;AAAA;;AAUc;;AAAA;;AAcd;;AAAA;;AAYyB;;AAAA;;AAYzB;;AAAA;;AA+BwE;;AAAA;;;;;;;;;sED7DrE3D,U,EAAU;cALtB,uDAKsB;eALZ;AACT4D,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,qBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKY,Q","file":"pages-sign-in-sign-in-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SignInPage } from './sign-in.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignInPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SignInPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SignInPageRoutingModule } from './sign-in-routing.module';\r\n\r\nimport { SignInPage } from './sign-in.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SignInPageRoutingModule,\r\n  ],\r\n  declarations: [SignInPage],\r\n})\r\nexport class SignInPageModule {}\r\n","import { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { LoadingController, ModalController, Platform } from '@ionic/angular';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { AccountsService, LoginApiRequest } from 'src/app/backend/clients';\r\nimport { ForgotPasswordPage } from '../modals/forgot-password/forgot-password.page';\r\nimport { AppleSignInResponse } from '@ionic-native/sign-in-with-apple/ngx';\r\nimport { take } from 'rxjs/operators';\r\nimport { SsoUser } from 'src/app/backend/clients/model/ssoUser';\r\n\r\n\r\n@Component({\r\n  selector: 'sign-in',\r\n  templateUrl: './sign-in.page.html',\r\n  styleUrls: ['./sign-in.page.scss'],\r\n})\r\nexport class SignInPage implements OnInit {\r\n  passwordType = 'password';\r\n  loginForm: FormGroup;\r\n\r\n  validationMessages = {\r\n    email: [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Please enter a valid email.' },\r\n    ],\r\n    password: [{ type: 'required', message: 'Password is required.' }],\r\n  };\r\n\r\n  invalidLogin = false;\r\n  invalidLoginText = '';\r\n  showAppleSignIn = false;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public loadingController: LoadingController,\r\n    public modalController: ModalController,\r\n    private platform: Platform,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone,\r\n    private router: Router,\r\n    private accountService: AccountsService\r\n  ) {}\r\n\r\n  togglePasswordMode() {\r\n    this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // Only show the Apple sign in button on iOS\r\n    this.showAppleSignIn = this.platform.is('ios');\r\n\r\n    const email = new FormControl(\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,3}$'),\r\n      ])\r\n    );\r\n    const password = new FormControl(\r\n      '',\r\n      Validators.compose([Validators.required])\r\n    );\r\n    this.loginForm = new FormGroup({\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  async openAppleSignIn() {\r\n    await this.accountService.loginApple().then(async (res: SsoUser) => {\r\n        if (res.firstLogin === true) {\r\n          const navigationExtras: NavigationExtras = {\r\n            replaceUrl: false,\r\n            state: {\r\n              firstName: res.firstName,\r\n              lastName: res.lastName,\r\n              email: res.email,\r\n              password: '',\r\n              sso: true\r\n            }\r\n          };\r\n          this.zone.run(() => {\r\n            this.router.navigateByUrl('/post-register-about', navigationExtras);\r\n          });\r\n        } else {\r\n          const navigationExtras: NavigationExtras = {\r\n            replaceUrl: false\r\n          };\r\n          this.zone.run(() => {\r\n            this.router.navigateByUrl('/tab1', navigationExtras);\r\n          });\r\n        }\r\n    });\r\n  }\r\n\r\n  async onSubmit(values) {\r\n    const loginModel = {\r\n      userName: this.loginForm.controls.email.value,\r\n      password: this.loginForm.controls.password.value,\r\n    } as LoginApiRequest;\r\n\r\n    const loading = await this.loadingController.create({\r\n      // duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    this.accountService.login(loginModel.userName, loginModel.password).then(\r\n      (res) => {\r\n        console.log(res);\r\n        this.invalidLogin = false;\r\n\r\n        this.zone.run(() => {\r\n          const navigationExtras: NavigationExtras = {\r\n            replaceUrl: false,\r\n            // state: {\r\n            //   userId: value.id\r\n            // }\r\n          };\r\n          this.router.navigateByUrl('/tab1', navigationExtras);\r\n        });\r\n        loading.dismiss();\r\n      },\r\n      (err) => {\r\n        if (err.code === 'auth/user-not-found') {\r\n          this.invalidLoginText = 'User not found';\r\n        } else if (err.code === 'auth/wrong-password') {\r\n          this.invalidLoginText = 'Invalid password';\r\n        } else {\r\n          this.invalidLoginText = 'Unexpected error';\r\n        }\r\n\r\n        this.invalidLogin = true;\r\n        this.refresh();\r\n        loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n\r\n  openRegister() {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: false,\r\n      state: {\r\n        // userName: 'tester',\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/register', navigationExtras);\r\n    });\r\n  }\r\n\r\n  async presentForgotPassword() {\r\n    const modal = await this.modalController.create({\r\n      component: ForgotPasswordPage,\r\n      showBackdrop: true,\r\n      cssClass: 'forgot-password-modal',\r\n    });\r\n\r\n    modal.onDidDismiss().then(async (dataReturned) => {\r\n      if (dataReturned !== null) {\r\n        // this.filter = dataReturned.data;\r\n        // this.refreshPosts();\r\n        // await this.loadingController.dismiss();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  refresh() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  get getInvalidLogin() {\r\n    return this.invalidLogin;\r\n  }\r\n}\r\n","<ion-content no-bounce [scrollY]=\"false\" class=\"form-content\">\r\n  <div class=\"splash\">\r\n    <h1>Welcome</h1>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\r\n      <ion-item class=\"roundedInput\">\r\n        <ion-input\r\n          autocapitalize=\"true\"\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          formControlName=\"email\"\r\n          required\r\n        ></ion-input>\r\n        <div class=\"validation-errors\">\r\n          <ng-container *ngFor=\"let validation of validationMessages.email\">\r\n            <div\r\n              class=\"error-message\"\r\n              *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\"\r\n            >\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon> {{\r\n              validation.message }}\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </ion-item>\r\n      <ion-item class=\"roundedInput\">\r\n        <ion-input\r\n          autocapitalize=\"true\"\r\n          [type]=\"passwordType\"\r\n          placeholder=\"Password\"\r\n          formControlName=\"password\"\r\n          required\r\n        ></ion-input>\r\n        <ion-icon\r\n          name=\"eye\"\r\n          item-right\r\n          (click)=\"togglePasswordMode()\"\r\n        ></ion-icon>\r\n      </ion-item>\r\n      <div class=\"validation-errors\">\r\n        <div class=\"error-message\" *ngIf=\"getInvalidLogin\">\r\n          <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n          {{invalidLoginText}}\r\n        </div>\r\n      </div>\r\n      <div class=\"button-div\">\r\n        <ion-row>\r\n          <ion-col size=\"6\" style=\"padding-left: 22px;\">\r\n        <ion-button\r\n          class=\"submit-button\"\r\n          expand=\"block\"\r\n          type=\"submit\"\r\n          [disabled]=\"!loginForm.valid\"\r\n          style=\"padding-right: 0px; padding-left: 0;\">Login</ion-button\r\n        >\r\n        </ion-col>\r\n        <ion-col size=\"6\" style=\"padding-right: 22px;\">\r\n          <ion-button\r\n          class=\"submit-button\"\r\n          expand=\"block\"\r\n          type=\"submit\"\r\n          (click)=\"openRegister()\"\r\n          style=\"padding-right: 0px; padding-left: 0;\"\r\n          >Register</ion-button\r\n        >\r\n          </ion-col>\r\n      </ion-row>\r\n      </div>\r\n    </form>\r\n    <!-- <div>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"openRegister()\"\r\n        >Register</ion-button\r\n      >\r\n    </div> -->\r\n    <div class=\"button-div\">\r\n      <ion-button class=\"facebook-button\"  expand=\"block\">\r\n        <ion-icon slot=\"start\" name=\"logo-facebook\"></ion-icon>\r\n        Login with Facebook\r\n      </ion-button>\r\n      <ion-button class=\"apple-button\" expand=\"block\" (click)=\"openAppleSignIn()\" *ngIf=\"showAppleSignIn\">\r\n        <ion-icon slot=\"start\" name=\"logo-apple\"></ion-icon>\r\n        Sign in with Apple\r\n      </ion-button>\r\n      <h3 class=\"forgot-password-link center-any-object\" (click)=\"presentForgotPassword()\">Forgot Password?</h3>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n"]}
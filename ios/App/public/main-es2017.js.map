{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/backend/clients/api.module.ts","./src/app/backend/clients/api/accounts.service.ts","./src/app/backend/clients/api/api.ts","./src/app/backend/clients/api/blobStorage.service.ts","./src/app/backend/clients/api/devops.service.ts","./src/app/backend/clients/api/post.service.ts","./src/app/backend/clients/api/postTestData.service.ts","./src/app/backend/clients/api/tag.service.ts","./src/app/backend/clients/api/user.service.ts","./src/app/backend/clients/api/userLocation.service.ts","./src/app/backend/clients/api/userMessage.service.ts","./src/app/backend/clients/configuration.ts","./src/app/backend/clients/encoder.ts","./src/app/backend/clients/index.ts","./src/app/backend/clients/model/addressFamily.ts","./src/app/backend/clients/model/callingConventions.ts","./src/app/backend/clients/model/eventAttributes.ts","./src/app/backend/clients/model/fieldAttributes.ts","./src/app/backend/clients/model/genericParameterAttributes.ts","./src/app/backend/clients/model/layoutKind.ts","./src/app/backend/clients/model/memberTypes.ts","./src/app/backend/clients/model/methodAttributes.ts","./src/app/backend/clients/model/methodImplAttributes.ts","./src/app/backend/clients/model/modelValidationState.ts","./src/app/backend/clients/model/models.ts","./src/app/backend/clients/model/parameterAttributes.ts","./src/app/backend/clients/model/propertyAttributes.ts","./src/app/backend/clients/model/securityRuleSet.ts","./src/app/backend/clients/model/typeAttributes.ts","./src/app/backend/clients/variables.ts","./src/app/backend/models/httpConfigInterceptor.ts","./src/app/backend/services/AuthGuard.service.ts","./src/app/components/card-flip/card-flip.component.ts","./src/app/components/card-flip/card-flip.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/objects/enums/map-selection-mode.ts","./src/app/objects/location-json/location.selector.ts","./src/app/objects/map.ts","./src/app/pages/add-post-image/add-post-image-routing.module.ts","./src/app/pages/add-post-image/add-post-image.module.ts","./src/app/pages/add-post-image/add-post-image.page.ts","./src/app/pages/add-post-image/add-post-image.page.html","./src/app/pages/add-post/add-post-routing.module.ts","./src/app/pages/add-post/add-post.module.ts","./src/app/pages/add-post/add-post.page.ts","./src/app/pages/add-post/add-post.page.html","./src/app/pages/mark-location/mark-location-routing.module.ts","./src/app/pages/mark-location/mark-location.module.ts","./src/app/pages/mark-location/mark-location.page.ts","./src/app/pages/mark-location/mark-location.page.html","./src/app/pages/modals/add/add-routing.module.ts","./src/app/pages/modals/add/add.module.ts","./src/app/pages/modals/add/add.page.ts","./src/app/pages/modals/add/add.page.html","./src/app/pages/modals/forgot-password/forgot-password-routing.module.ts","./src/app/pages/modals/forgot-password/forgot-password.module.ts","./src/app/pages/modals/forgot-password/forgot-password.page.ts","./src/app/pages/modals/forgot-password/forgot-password.page.html","./src/app/pages/modals/map-filter/map-filter-routing.module.ts","./src/app/pages/modals/map-filter/map-filter.module.ts","./src/app/pages/modals/map-filter/map-filter.page.ts","./src/app/pages/modals/map-filter/map-filter.page.html","./src/app/pages/modals/search/search-routing.module.ts","./src/app/pages/modals/search/search.module.ts","./src/app/pages/modals/search/search.page.ts","./src/app/pages/modals/search/search.page.html","./src/app/pages/user-settings/user-settings-routing.module.ts","./src/app/pages/user-settings/user-settings.module.ts","./src/app/pages/user-settings/user-settings.page.ts","./src/app/pages/user-settings/user-settings.page.html","./src/app/pages/user-timeline/user-timeline-routing.module.ts","./src/app/pages/user-timeline/user-timeline.module.ts","./src/app/pages/user-timeline/user-timeline.page.ts","./src/app/pages/user-timeline/user-timeline.page.html","./src/app/pipes/date-ago.pipe.ts","./src/app/services/modal.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './backend/services/AuthGuard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'post-register-about',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'tab1',\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('./pages/news-feed/news-feed.module').then(\r\n            (m) => m.NewsFeedPageModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'tab2',\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('./pages/notifications-page/notifications.module').then(\r\n            (m) => m.NotificationsPageModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'search',\r\n    loadChildren: () =>\r\n      import('./pages/modals/search/search.module').then(\r\n        (m) => m.SearchPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () =>\r\n      import('./pages/modals/add/add.module').then((m) => m.AddPageModule),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'map-filter',\r\n    loadChildren: () =>\r\n      import('./pages/modals/map-filter/map-filter.module').then(\r\n        (m) => m.MapFilterPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-profile',\r\n    loadChildren: () =>\r\n      import('./pages/user-profile/user-profile.module').then(\r\n        (m) => m.UserProfilePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-timeline',\r\n    loadChildren: () =>\r\n      import('./pages/user-timeline/user-timeline.module').then(\r\n        (m) => m.UserTimelinePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'sign-in',\r\n    loadChildren: () =>\r\n      import('./pages/sign-in/sign-in.module').then((m) => m.SignInPageModule),\r\n  },\r\n  {\r\n    path: 'register',\r\n    loadChildren: () =>\r\n      import('./pages/register/register.module').then(\r\n        (m) => m.RegisterPageModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'post-register-about',\r\n    loadChildren: () =>\r\n      import('./pages/post-register-about/post-register-about.module').then(\r\n        (m) => m.PostRegisterAboutPageModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'post-register-locations',\r\n    loadChildren: () =>\r\n      import(\r\n        './pages/post-register-locations/post-register-locations.module'\r\n      ).then((m) => m.PostRegisterLocationsPageModule),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'mark-location',\r\n    loadChildren: () =>\r\n      import('./pages/mark-location/mark-location.module').then(\r\n        (m) => m.MarkLocationPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add-post',\r\n    loadChildren: () =>\r\n      import('./pages/add-post/add-post.module').then(\r\n        (m) => m.AddPostPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'add-post-image',\r\n    loadChildren: () =>\r\n      import('./pages/add-post-image/add-post-image.module').then(\r\n        (m) => m.AddPostImagePageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'comments',\r\n    loadChildren: () =>\r\n      import('./pages/comments/comments.module').then(\r\n        (m) => m.CommentsPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'user-settings',\r\n    loadChildren: () =>\r\n      import('./pages/user-settings/user-settings.module').then(\r\n        (m) => m.UserSettingsPageModule\r\n      ),\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    loadChildren: () => import('./pages/modals/forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      preloadingStrategy: PreloadAllModules\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\r\nimport { SplashScreen } from '@capacitor/splash-screen';\r\nimport { StatusBar, Style } from '@capacitor/status-bar';\r\nimport {\r\n  PushNotificationSchema,\r\n  Token,\r\n  ActionPerformed,\r\n  PushNotifications,\r\n} from '@capacitor/push-notifications';\r\nimport { FCM } from '@capacitor-community/fcm';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { from } from 'rxjs';\r\nconst fcm = new FCM();\r\n\r\nimport { AddPage } from './pages/modals/add/add.page';\r\nimport { AccountsService } from './backend/clients/api/accounts.service';\r\nimport { ModalService } from './services/modal.service';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport firebase from 'firebase/app';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  page: string;\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private userService: AccountsService,\r\n    public modalController: ModalController,\r\n    public alertController: AlertController,\r\n    public router: Router,\r\n    public zone: NgZone,\r\n    public modalSvc: ModalService\r\n  ) {\r\n    this.platform.ready().then(() => {\r\n      this.initializeApp();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      if (Capacitor.isPluginAvailable('StatusBar')) {\r\n        StatusBar.setStyle({ style: Style.Default });\r\n        StatusBar.setOverlaysWebView({ overlay: false});\r\n      }\r\n\r\n      if (Capacitor.isPluginAvailable('SplashScreen')) {\r\n        SplashScreen.hide();\r\n      }\r\n\r\n      if (Capacitor.isPluginAvailable('PushNotifications')) {\r\n        this.registerPush();\r\n      }\r\n\r\n      this.zone.run(() => {\r\n        if (this.userService.isLoggedIn) {\r\n          this.router.navigate(['tab1']);\r\n        } else {\r\n          this.router.navigate(['sign-in']);\r\n        }\r\n      });\r\n    });\r\n\r\n    firebase.initializeApp(environment.firebaseConfig);\r\n  }\r\n\r\n  private registerPush() {\r\n    PushNotifications.requestPermissions().then((result) => {\r\n      if (result.receive === 'granted') {\r\n        // Register with Apple / Google to receive push via APNS/FCM\r\n        PushNotifications.register().then(() =>\r\n          from(\r\n            fcm\r\n              .getToken()\r\n              .then((r) => {\r\n                this.userService.setFcmToken(r.token);\r\n              })\r\n              .catch((err) => {\r\n                console.log(`FCM Token ERROR: ${JSON.stringify(err)}`);\r\n              })\r\n          )\r\n        );\r\n      } else {\r\n        console.log('Push notifications not registered');\r\n      }\r\n    });\r\n\r\n    PushNotifications.addListener('registration', (token: Token) => {\r\n      // alert('Push registration success, token: ' + token.value);\r\n    });\r\n\r\n    PushNotifications.addListener('registrationError', (error: any) => {\r\n      // alert('Error on registration: ' + JSON.stringify(error));\r\n    });\r\n\r\n    PushNotifications.addListener(\r\n      'pushNotificationReceived',\r\n      async (notification: PushNotificationSchema) => {\r\n        console.log(notification.data);\r\n        // this.alert(notification.title, notification.body);\r\n      }\r\n    );\r\n\r\n    PushNotifications.addListener(\r\n      'pushNotificationActionPerformed',\r\n      (notification: ActionPerformed) => {\r\n        const navigationExtras: NavigationExtras = {\r\n          replaceUrl: true,\r\n          state: {\r\n            postId: notification.notification.data.postId,\r\n          },\r\n        };\r\n        this.zone.run(() => {\r\n          this.router.navigateByUrl('/comments', navigationExtras);\r\n        });\r\n        console.log(notification.notification.data);\r\n      }\r\n    );\r\n  }\r\n\r\n  async alert(title: string, body: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: body,\r\n      buttons: [\r\n        {\r\n          text: 'OKAY',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            alert.dismiss();\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  get showFooter() {\r\n    if (this.router.url === '/sign-in') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/register') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/post-register-about') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/post-register-locations') {\r\n      return false;\r\n    }\r\n    if (this.router.url === '/comments') {\r\n      return false;\r\n    }\r\n    if (this.modalSvc.dis === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async presentAddModal() {\r\n    const modal = await this.modalController.create({\r\n      component: AddPage,\r\n      showBackdrop: true,\r\n      swipeToClose: true,\r\n      cssClass: 'add-modal',\r\n      backdropDismiss: true,\r\n    });\r\n\r\n    let currentUrl = this.router.url;\r\n\r\n    modal.onDidDismiss().then(async (dataReturned) => {\r\n      this.zone.run(() => {\r\n            console.log(currentUrl);\r\n            this.router.navigateByUrl('/', {skipLocationChange: true})\r\n            .then(() =>\r\n              this.router.navigate([currentUrl])\r\n            );\r\n            });\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n}\r\n","<ion-app>\r\n  <ion-router-outlet></ion-router-outlet>\r\n  <ion-tabs>\r\n    <ion-tab-bar slot=\"bottom\" *ngIf=\"showFooter\">\r\n      <ion-tab-button tab=\"tab1\">\r\n        <ion-icon name=\"home-outline\"></ion-icon>\r\n        <ion-label>Home</ion-label>\r\n      </ion-tab-button>\r\n\r\n      <ion-tab-button tab=\"tab2\">\r\n        <ion-icon name=\"notifications-outline\"></ion-icon>\r\n        <ion-label>Notifications</ion-label>\r\n      </ion-tab-button>\r\n    </ion-tab-bar>\r\n  </ion-tabs>\r\n  <ion-fab horizontal=\"center\" vertical=\"bottom\" *ngIf=\"showFooter\">\r\n    <ion-fab-button class=\"add-button\" (click)=\"presentAddModal()\">\r\n      <ion-icon name=\"add\" style=\"height: 50; width: 20\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</ion-app>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { SearchPageModule } from './pages/modals/search/search.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddPageModule } from './pages/modals/add/add.module';\r\nimport { MapFilterPageModule } from './pages/modals/map-filter/map-filter.module';\r\nimport { ForgotPasswordPageModule} from './pages/modals/forgot-password/forgot-password.module';\r\nimport { UserTimelinePageModule } from './pages/user-timeline/user-timeline.module';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { HttpConfigInterceptor } from './backend/models/httpConfigInterceptor';\r\nimport { AuthGuard } from './backend/services/AuthGuard.service';\r\nimport { AccountsService, UserService, PostService } from './backend/clients';\r\nimport { MarkLocationPageModule } from './pages/mark-location/mark-location.module';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\nimport { LocationSelector } from './objects/location-json/location.selector';\r\nimport { AddPostPageModule } from './pages/add-post/add-post.module';\r\nimport { AddPostImagePageModule } from './pages/add-post-image/add-post-image.module';\r\nimport { UserSettingsPageModule } from './pages/user-settings/user-settings.module';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { SignInWithApple } from '@ionic-native/sign-in-with-apple/ngx';\r\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  entryComponents: [],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n    NgxIonicImageViewerModule,\r\n    IonicStorageModule.forRoot(),\r\n    Ng2SearchPipeModule,\r\n    AppRoutingModule,\r\n    SearchPageModule,\r\n    AddPageModule,\r\n    HttpClientModule,\r\n    UserTimelinePageModule,\r\n    MapFilterPageModule,\r\n    MarkLocationPageModule,\r\n    AddPostPageModule,\r\n    UserSettingsPageModule,\r\n    AddPostImagePageModule,\r\n    ForgotPasswordPageModule,\r\n    IonicSelectableModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AccountsService,\r\n    UserService,\r\n    PostService,\r\n    LocationSelector,\r\n    SignInWithApple,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpConfigInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  SkipSelf,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { Configuration } from './configuration';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AccountsService } from './api/accounts.service';\r\nimport { BlobStorageService } from './api/blobStorage.service';\r\nimport { DevopsService } from './api/devops.service';\r\nimport { PostService } from './api/post.service';\r\nimport { PostTestDataService } from './api/postTestData.service';\r\nimport { TagService } from './api/tag.service';\r\nimport { UserService } from './api/user.service';\r\nimport { UserLocationService } from './api/userLocation.service';\r\nimport { UserMessageService } from './api/userMessage.service';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [],\r\n  providers: [\r\n    AccountsService,\r\n    BlobStorageService,\r\n    DevopsService,\r\n    PostService,\r\n    PostTestDataService,\r\n    TagService,\r\n    UserService,\r\n    UserLocationService,\r\n    UserMessageService,\r\n  ],\r\n})\r\nexport class ApiModule {\r\n  public static forRoot(\r\n    configurationFactory: () => Configuration\r\n  ): ModuleWithProviders<ApiModule> {\r\n    return {\r\n      ngModule: ApiModule,\r\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: ApiModule,\r\n    @Optional() http: HttpClient\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'ApiModule is already loaded. Import in your base AppModule only.'\r\n      );\r\n    }\r\n    if (!http) {\r\n      throw new Error(\r\n        'You need to import the HttpClientModule in your AppModule! \\n' +\r\n          'See also https://github.com/angular/angular/issues/20575'\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport {\r\n  Inject, Injectable, NgZone, Optional,\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, BehaviorSubject, from } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { BASE_PATH } from 'src/environments/environment';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport firebase from 'firebase/app';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { MarkLocationsRequest } from '../model/markLocationsRequest';\r\nimport { Configuration } from '../configuration';\r\nimport { RegisterRequest } from '../model/registerRequest';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\nimport { SignInWithApple, AppleSignInResponse, AppleSignInErrorResponse, ASAuthorizationAppleIDRequest } from '@ionic-native/sign-in-with-apple/ngx';\r\nimport { SsoUser } from '../model/ssoUser';\r\nimport { UserService } from './user.service';\r\nimport { User } from '../model/user';\r\nimport { UserResponse } from '../model/userResponse';\r\nimport { UserLocation } from '../model/userLocation';\r\nimport { promise } from 'protractor';\r\n\r\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class AccountsService {\r\n  protected basePath = BASE_PATH;\r\n\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n\r\n  public configuration = new Configuration();\r\n\r\n  public authSubject = new BehaviorSubject(false);\r\n\r\n  public userData: any;\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration,\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private storage: Storage,\r\n    private userService: UserService,\r\n    private alertController: AlertController,\r\n    private signInWithApple: SignInWithApple,\r\n    private ngFireAuth: AngularFireAuth,\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n\r\n    this.ngFireAuth.authState.subscribe(async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        localStorage.setItem('firebaseUser', JSON.stringify(firebaseUser));\r\n        JSON.parse(localStorage.getItem('firebaseUser'));\r\n        await this.storeLoggedInUser().then(() => {\r\n        });\r\n      } else {\r\n        localStorage.setItem('firebaseUser', null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('userLocations');\r\n        JSON.parse(localStorage.getItem('firebaseUser'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public storeLoggedInUser() {\r\n    return new Promise<any>((resolve, reject) => {\r\n    let user: UserResponse;\r\n\r\n    this.userService.userIdGet(this.getUserId()).pipe(take(1)).subscribe(res => {\r\n        // console.log(res)\r\n        this.storage.set('image', res.avi);\r\n        user = res;\r\n        if (res.avi === undefined) {\r\n          user.avi = '../../../../assets/defaultuser.png';\r\n        }\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('userLocations', JSON.stringify(res.userLocations));\r\n\r\n        this.getFcmToken().subscribe((token) => {\r\n          console.log(`FCM:${token}`);\r\n          this.accountUpdateFcmDeviceIdPost(token)\r\n            .pipe(take(1))\r\n            .subscribe(\r\n              (res) => {\r\n                console.log(res);\r\n              },\r\n              (err) => console.log(err),\r\n            );\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  get storedUser(): UserResponse {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return user;\r\n  }\r\n\r\n  get storedUserLocations(): Array<UserLocation> {\r\n    return JSON.parse(localStorage.getItem('userLocations'));\r\n  }\r\n\r\n  public async logout() {\r\n    return this.ngFireAuth.signOut().then(() => {\r\n      localStorage.removeItem('firebaseUser');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('userLocations');\r\n\r\n      this.zone.run(() => {\r\n        this.router.navigate(['sign-in']);\r\n      });\r\n    });\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return (user !== null);\r\n  }\r\n\r\n  // Email verification when new user register\r\n  SendVerificationMail() {\r\n    return from(firebase\r\n      .auth()\r\n      .currentUser.sendEmailVerification()\r\n      .then(() => {\r\n        this.zone.run(() => {\r\n          this.router.navigate(['verify-email']);\r\n        });\r\n      }));\r\n  }\r\n\r\n  get isEmailVerified(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('firebaseUser'));\r\n    return user.emailVerified !== false;\r\n  }\r\n\r\n  // Recover password\r\n  PasswordRecover(passwordResetEmail) {\r\n    return firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(passwordResetEmail)\r\n      .then(() => {\r\n        this.alert(\r\n          'Success',\r\n          'Password reset email has been sent, please check your inbox.',\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.alert('Reset error', error);\r\n      });\r\n  }\r\n\r\n  async alert(title: string, body: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: body,\r\n      buttons: [\r\n        {\r\n          text: 'OKAY',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            alert.dismiss();\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async getToken() {\r\n    try {\r\n      return await firebase.auth().currentUser.getIdToken();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getUserId() {\r\n    return firebase.auth().currentUser.uid;\r\n  }\r\n\r\n  // Login in with email/password\r\n  login(email, password) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n        .then(async () => {\r\n          await firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(\r\n              (res) => {\r\n                if (Capacitor.isNativePlatform()) {\r\n                  this.getFcmToken()\r\n                    .pipe(take(1))\r\n                    .subscribe((token) => {\r\n                      this.accountUpdateFcmDeviceIdPost(token);\r\n                      resolve(res);\r\n                    });\r\n                } else {\r\n                  resolve(res);\r\n                }\r\n              },\r\n              (err) => reject(err),\r\n            );\r\n        });\r\n    });\r\n  }\r\n\r\n  loginFacebook() {\r\n\r\n  }\r\n\r\n  async loginApple(): Promise<SsoUser> {\r\n      return this.signInWithApple.signin({\r\n      requestedScopes: [\r\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeFullName,\r\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeEmail\r\n      ]\r\n    }).then(async (res: AppleSignInResponse) => {\r\n      const credential = new firebase.auth.OAuthProvider('apple.com').credential(\r\n        res.identityToken\r\n      );\r\n      let firstLogin = false;\r\n\r\n      const response = await firebase.auth().signInWithCredential(credential).then(async (cred) => {\r\n          await firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n              return res;\r\n            }\r\n          });\r\n          firstLogin = cred.additionalUserInfo.isNewUser;\r\n        });\r\n\r\n      return {\r\n        firstLogin,\r\n        firstName: res.fullName.givenName,\r\n        lastName: res.fullName.familyName,\r\n        email: res.email,\r\n      } as SsoUser;\r\n    });\r\n  }\r\n\r\n    // GoogleAuth() {\r\n    //   return this.AuthLogin(new auth.GoogleAuthProvider());\r\n    // }\r\n\r\n\r\n  public loginWithToken(token): Observable<any> {\r\n    return from(\r\n      firebase\r\n        .auth()\r\n        .signInWithCustomToken(token)\r\n        .then(() => this.getFcmToken()\r\n          .pipe(take(1))\r\n          .subscribe((token) => this.accountUpdateFcmDeviceIdPost(token))),\r\n    );\r\n  }\r\n\r\n  public getFcmToken() {\r\n    return from(this.storage.get('fcm'));\r\n  }\r\n\r\n  public setFcmToken(token) {\r\n    return from(this.storage.set('fcm', token));\r\n  }\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountEmailTakenGet(\r\n    email?: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (email !== undefined && email !== null) {\r\n      queryParameters = queryParameters.set('email', email as string);\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'get',\r\n      `${this.basePath}/account/email_taken`,\r\n      {\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateFcmDeviceIdPost(\r\n    deviceId: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    if (deviceId === null || deviceId === undefined) {\r\n      throw new Error(\r\n        'Required parameter deviceId was null or undefined when calling accountUpdateFcmDeviceIdPost.',\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys\r\n      && this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization,\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/fcm/${encodeURIComponent(\r\n        String(deviceId),\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountRegisterPostForm(\r\n    body?: RegisterRequest,\r\n    blob?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean,\r\n  ): Observable<string> {\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<JwtToken>>;\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<JwtToken>>;\r\n    // public accountRegisterPostForm(body?: RegisterRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    return this.httpClient.request<string>(\r\n      'post',\r\n      `${this.basePath}/account/register`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateLocationsPost(\r\n    body?: MarkLocationsRequest,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/locations`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdateProfileImagePost(\r\n    blob?: Blob,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n\r\n    const body = new FormData();\r\n    body.append('image', blob);\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update/profile_image`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n\r\n  public accountUpdatePost(\r\n    firstname?: string,\r\n    lastname?: string,\r\n    title?: string,\r\n    education?: string,\r\n    birthLocation?: string,\r\n    residenceLocation?: string,\r\n    observe: any = 'body',\r\n    reportProgress = false,\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (firstname !== undefined && firstname !== null) {\r\n      queryParameters = queryParameters.set('Firstname', firstname as any);\r\n    }\r\n    if (lastname !== undefined && lastname !== null) {\r\n      queryParameters = queryParameters.set('Lastname', lastname as any);\r\n    }\r\n    if (title !== undefined && title !== null) {\r\n      queryParameters = queryParameters.set('Title', title as any);\r\n    }\r\n    if (education !== undefined && education !== null) {\r\n      queryParameters = queryParameters.set('Education', education as any);\r\n    }\r\n    if (birthLocation !== undefined && birthLocation !== null) {\r\n      queryParameters = queryParameters.set(\r\n        'BirthLocation',\r\n        birthLocation as any,\r\n      );\r\n    }\r\n    if (residenceLocation !== undefined && residenceLocation !== null) {\r\n      queryParameters = queryParameters.set(\r\n        'ResidenceLocation',\r\n        residenceLocation as any,\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/account/update`,\r\n      {\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      },\r\n    );\r\n  }\r\n}\r\n","export * from './accounts.service';\r\nimport { AccountsService } from './accounts.service';\r\nexport * from './blobStorage.service';\r\nimport { BlobStorageService } from './blobStorage.service';\r\nexport * from './devops.service';\r\nimport { DevopsService } from './devops.service';\r\nexport * from './post.service';\r\nimport { PostService } from './post.service';\r\nexport * from './postTestData.service';\r\nimport { PostTestDataService } from './postTestData.service';\r\nexport * from './tag.service';\r\nimport { TagService } from './tag.service';\r\nexport * from './user.service';\r\nimport { UserService } from './user.service';\r\nexport * from './userLocation.service';\r\nimport { UserLocationService } from './userLocation.service';\r\nexport * from './userMessage.service';\r\nimport { UserMessageService } from './userMessage.service';\r\n// tslint:disable-next-line: max-line-length\r\nexport const APIS = [\r\n  AccountsService,\r\n  BlobStorageService,\r\n  DevopsService,\r\n  PostService,\r\n  PostTestDataService,\r\n  TagService,\r\n  UserService,\r\n  UserLocationService,\r\n  UserMessageService,\r\n];\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: import-spacing\r\n// tslint:disable: max-line-length\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class BlobStorageService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public storageDeleteFileFileNameGet(\r\n    fileName: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (fileName === null || fileName === undefined) {\r\n      throw new Error(\r\n        'Required parameter fileName was null or undefined when calling storageDeleteFileFileNameGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<any>(\r\n      'get',\r\n      `${this.basePath}/storage/DeleteFile/${encodeURIComponent(\r\n        String(fileName)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<string>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<string>>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<string>>;\r\n  public storageDownloadFileFileNameGet(\r\n    fileName: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (fileName === null || fileName === undefined) {\r\n      throw new Error(\r\n        'Required parameter fileName was null or undefined when calling storageDownloadFileFileNameGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<string>(\r\n      'get',\r\n      `${this.basePath}/storage/DownloadFile/${encodeURIComponent(\r\n        String(fileName)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<string>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<string>>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<string>>>;\r\n  public storageListFilesUserIdGet(\r\n    userId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userId === null || userId === undefined) {\r\n      throw new Error(\r\n        'Required parameter userId was null or undefined when calling storageListFilesUserIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<string>>(\r\n      'get',\r\n      `${this.basePath}/storage/ListFiles/${encodeURIComponent(\r\n        String(userId)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param asset\r\n   * @param fileName\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public storageUploadFilePostForm(\r\n    asset?: Blob,\r\n    fileName?: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({\r\n      encoder: new CustomHttpUrlEncodingCodec(),\r\n    });\r\n    if (fileName !== undefined && fileName !== null) {\r\n      queryParameters = queryParameters.set('fileName', fileName as any);\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    const canConsumeForm = this.canConsumeForm(consumes);\r\n\r\n    let formParams: { append(param: string, value: any): void };\r\n    let useForm = false;\r\n    const convertFormParamsToString = false;\r\n    // use FormData to transmit files using content-type \"multipart/form-data\"\r\n    // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\r\n    useForm = canConsumeForm;\r\n    if (useForm) {\r\n      formParams = new FormData();\r\n    } else {\r\n      formParams = new HttpParams({\r\n        encoder: new CustomHttpUrlEncodingCodec(),\r\n      });\r\n    }\r\n\r\n    if (asset !== undefined) {\r\n      formParams =\r\n        (formParams.append('asset', asset as any) as any) || formParams;\r\n    }\r\n\r\n    return this.httpClient.request<any>(\r\n      'post',\r\n      `${this.basePath}/storage/UploadFile`,\r\n      {\r\n        body: convertFormParamsToString ? formParams.toString() : formParams,\r\n        params: queryParameters,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */ /* tslint:disable:no-unused-variable member-ordering */\r\n\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BASE_PATH } from 'src/environments/environment';\r\n\r\nimport { Configuration } from '../configuration';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class DevopsService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public devopsPostTypesPost(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public devopsPostTypesPost(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public devopsPostTypesPost(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public devopsPostTypesPost(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<any>(\r\n      'post',\r\n      `${this.basePath}/devops/post_types`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */ /* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: no-redundant-jsdoc\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PostPaginatedList } from '../model/postPaginatedList';\r\nimport { BASE_PATH } from 'src/environments/environment';\r\n\r\nimport { COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\nimport { CreatePostRequest } from '../model/createPostRequest';\r\nimport { NewPostResponse } from '../model/newPostResponse';\r\nimport { CommentForPost } from '../model/commentForPost';\r\nimport { LikeForPost } from '../model/likeForPost';\r\nimport { PostApiPaginatedList } from '../model/postApiPaginatedList';\r\nimport { CommentApi } from '../model/commentApi';\r\nimport { string } from '@amcharts/amcharts4/core';\r\nimport { PostApi } from '../model/postApi';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class PostService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param postId\r\n   * @param body\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n  public postsCommentPostIdPost(\r\n    postId: string,\r\n    body?: CommentApi,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsCommentPostIdPost.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/posts/comment/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        body,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<CommentForPost>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<CommentForPost>>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<CommentForPost>>>;\r\n  public postsCommentsGetPostIdGet(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsCommentsGetPostIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<CommentForPost>>(\r\n      'get',\r\n      `${this.basePath}/posts/comments/get/${encodeURIComponent(\r\n        String(postId)\r\n      )}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<boolean>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<boolean>>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<boolean>>;\r\n  public postsLikePostIdPost(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsLikePostIdPost.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<boolean>(\r\n      'post',\r\n      `${this.basePath}/posts/like/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param postId\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<LikeForPost>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<LikeForPost>>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<LikeForPost>>>;\r\n  public postsLikesGetPostIdGet(\r\n    postId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (postId === null || postId === undefined) {\r\n      throw new Error(\r\n        'Required parameter postId was null or undefined when calling postsLikesGetPostIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<LikeForPost>>(\r\n      'get',\r\n      `${this.basePath}/posts/likes/get/${encodeURIComponent(String(postId))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * @param caption\r\n   * @param postType\r\n   * @param locationCode\r\n   * @param image\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<NewPostResponse>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<NewPostResponse>>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<NewPostResponse>>;\r\n  public postsNewPostForm(\r\n    caption?: string,\r\n    postType?: string,\r\n    locationCode?: string,\r\n    image?: Blob,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['multipart/form-data'];\r\n\r\n    let formParams: { append(param: string, value: any): void };\r\n    formParams = new FormData();\r\n\r\n    const convertFormParamsToString = false;\r\n\r\n    if (caption !== undefined) {\r\n      formParams =\r\n        (formParams.append('Caption', caption as any) as any) || formParams;\r\n    }\r\n    if (postType !== undefined) {\r\n      formParams =\r\n        (formParams.append('PostType', postType as any) as any) || formParams;\r\n    }\r\n    if (locationCode !== undefined) {\r\n      formParams =\r\n        (formParams.append('LocationCode', locationCode as any) as any) ||\r\n        formParams;\r\n    }\r\n    if (image !== undefined) {\r\n      formParams =\r\n        (formParams.append('Image', image as any) as any) || formParams;\r\n    }\r\n\r\n    return this.httpClient.request<NewPostResponse>(\r\n      'post',\r\n      `${this.basePath}/posts/new`,\r\n      {\r\n        body: convertFormParamsToString ? formParams.toString() : formParams,\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param page\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<PostApiPaginatedList>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<PostApiPaginatedList>>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<PostApiPaginatedList>>;\r\n  public postsPageGet(\r\n    page: number,\r\n    filter: string,\r\n    userId: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (page === null || page === undefined) {\r\n      throw new Error(\r\n        'Required parameter page was null or undefined when calling postsPageGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    let uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}`;\r\n\r\n    if (filter !== '' && userId === '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/filter/${encodeURIComponent(String(filter))}`;\r\n    } else if (userId !== '' && filter === '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/user/${encodeURIComponent(String(userId))}`;\r\n    } else if (userId !== '' && filter !== '') {\r\n      uri = `${this.basePath}/posts/${encodeURIComponent(\r\n        String(page)\r\n      )}/${encodeURIComponent(String(filter))}/${encodeURIComponent(\r\n        String(userId)\r\n      )}`;\r\n    }\r\n\r\n    return this.httpClient.request<PostApiPaginatedList>('get', uri, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers,\r\n      observe,\r\n      reportProgress,\r\n    });\r\n  }\r\n\r\n  /**\r\n     *\r\n     *\r\n     * @param id\r\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n     * @param reportProgress flag to report request and response progress.\r\n     */\r\n   public postsSingleIdGet(id: number, observe?: 'body', reportProgress?: boolean): Observable<PostApi>;\r\n   public postsSingleIdGet(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PostApi>>;\r\n   public postsSingleIdGet(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PostApi>>;\r\n   public postsSingleIdGet(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n       if (id === null || id === undefined) {\r\n           throw new Error('Required parameter id was null or undefined when calling postsSingleIdGet.');\r\n       }\r\n\r\n       let headers = this.defaultHeaders;\r\n\r\n       // authentication (Bearer) required\r\n       if (this.configuration.apiKeys && this.configuration.apiKeys.Authorization) {\r\n           headers = headers.set('Authorization', this.configuration.apiKeys.Authorization);\r\n       }\r\n\r\n       // to determine the Accept header\r\n       const httpHeaderAccepts: string[] = [\r\n           'text/plain',\r\n           'application/json',\r\n           'text/json'\r\n       ];\r\n       const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n       if (httpHeaderAcceptSelected !== undefined) {\r\n           headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n       }\r\n\r\n       // to determine the Content-Type header\r\n       const consumes: string[] = [\r\n       ];\r\n\r\n       return this.httpClient.request<PostApi>('get', `${this.basePath}/posts/single/${encodeURIComponent(String(id))}`,\r\n           {\r\n               withCredentials: this.configuration.withCredentials,\r\n               headers,\r\n               observe,\r\n               reportProgress\r\n           }\r\n       );\r\n   }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../model/user';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class PostTestDataService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postTestDataGetAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<User>>;\r\n  public postTestDataGetAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<User>>>;\r\n  public postTestDataGetAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<User>>>;\r\n  public postTestDataGetAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<User>>(\r\n      `${this.basePath}/api/TestData/users`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public postTestDataPostTest(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<string>;\r\n  public postTestDataPostTest(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<string>>;\r\n  public postTestDataPostTest(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<string>>;\r\n  public postTestDataPostTest(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.post<string>(\r\n      `${this.basePath}/api/TestData/post`,\r\n      null,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Tag } from '../model/tag';\r\nimport { TagController } from '../model/tagController';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TagService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Tag>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Tag>>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Tag>>;\r\n  public tagDeleteTag(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagDeleteTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<Tag>(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Tag>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Tag>>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Tag>>;\r\n  public tagGetTag(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagGetTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Tag>(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagGetTagAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<Tag>>;\r\n  public tagGetTagAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<Tag>>>;\r\n  public tagGetTagAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<Tag>>>;\r\n  public tagGetTagAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<Tag>>(`${this.basePath}/api/Tag`, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers,\r\n      observe,\r\n      reportProgress,\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param tag\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<TagController>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<TagController>>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<TagController>>;\r\n  public tagPostTag(\r\n    tag: Tag,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (tag === null || tag === undefined) {\r\n      throw new Error(\r\n        'Required parameter tag was null or undefined when calling tagPostTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<TagController>(\r\n      `${this.basePath}/api/Tag`,\r\n      tag,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param tag\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public tagPutTag(\r\n    id: number,\r\n    tag: Tag,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling tagPutTag.'\r\n      );\r\n    }\r\n\r\n    if (tag === null || tag === undefined) {\r\n      throw new Error(\r\n        'Required parameter tag was null or undefined when calling tagPutTag.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\r\n      tag,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n// tslint:disable: max-line-length\r\n// tslint:disable: import-spacing\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserResponse } from '../model/userResponse';\r\nimport { BASE_PATH } from 'src/environments/environment';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Configuration } from '../configuration';\r\nimport { SlimUserResponse } from '../model/slimUserResponse';\r\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  protected basePath = BASE_PATH;\r\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userAllGet(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<User>>;\r\n  public userAllGet(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<User>>>;\r\n  public userAllGet(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<User>>>;\r\n  public userAllGet(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<User>>(\r\n      'get',\r\n      `${this.basePath}/User/all`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserResponse>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserResponse>>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserResponse>>;\r\n  public userIdGet(\r\n    id: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userIdGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<UserResponse>(\r\n      'get',\r\n      `${this.basePath}/User/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param query\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<SlimUserResponse>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<SlimUserResponse>>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<SlimUserResponse>>>;\r\n  public userSearchQueryGet(\r\n    query: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (query === null || query === undefined) {\r\n      throw new Error(\r\n        'Required parameter query was null or undefined when calling userSearchQueryGet.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<Array<SlimUserResponse>>(\r\n      'get',\r\n      `${this.basePath}/User/search/${encodeURIComponent(String(query))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userSelfGet(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<SlimUserResponse>;\r\n  public userSelfGet(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<SlimUserResponse>>;\r\n  public userSelfGet(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<SlimUserResponse>>;\r\n  public userSelfGet(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (Bearer) required\r\n    if (\r\n      this.configuration.apiKeys &&\r\n      this.configuration.apiKeys.Authorization\r\n    ) {\r\n      headers = headers.set(\r\n        'Authorization',\r\n        this.configuration.apiKeys.Authorization\r\n      );\r\n    }\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.request<SlimUserResponse>(\r\n      'get',\r\n      `${this.basePath}/User/self`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserLocation } from '../model/userLocation';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UserLocationService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationDeleteUserLocation(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationDeleteUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<UserLocation>(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationGetUserLocation(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationGetUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<UserLocation>(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<UserLocation>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<UserLocation>>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<UserLocation>>>;\r\n  public userLocationGetUserLocationAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<UserLocation>>(\r\n      `${this.basePath}/api/UserLocation`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userLocation\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserLocation>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserLocation>>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserLocation>>;\r\n  public userLocationPostUserLocation(\r\n    userLocation: UserLocation,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userLocation === null || userLocation === undefined) {\r\n      throw new Error(\r\n        'Required parameter userLocation was null or undefined when calling userLocationPostUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<UserLocation>(\r\n      `${this.basePath}/api/UserLocation`,\r\n      userLocation,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param userLocation\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public userLocationPutUserLocation(\r\n    id: number,\r\n    userLocation: UserLocation,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userLocationPutUserLocation.'\r\n      );\r\n    }\r\n\r\n    if (userLocation === null || userLocation === undefined) {\r\n      throw new Error(\r\n        'Required parameter userLocation was null or undefined when calling userLocationPutUserLocation.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\r\n      userLocation,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * My Title\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserMessage } from '../model/userMessage';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UserMessageService {\r\n  protected basePath = 'https://localhost:5001';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional() @Inject(BASE_PATH) basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessageDeleteUserMessage(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessageDeleteUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<UserMessage>(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessageGetUserMessage(\r\n    id: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessageGetUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<UserMessage>(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Array<UserMessage>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Array<UserMessage>>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Array<UserMessage>>>;\r\n  public userMessageGetUserMessageAll(\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Array<UserMessage>>(\r\n      `${this.basePath}/api/UserMessage`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param userMessage\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<UserMessage>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<UserMessage>>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<UserMessage>>;\r\n  public userMessagePostUserMessage(\r\n    userMessage: UserMessage,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (userMessage === null || userMessage === undefined) {\r\n      throw new Error(\r\n        'Required parameter userMessage was null or undefined when calling userMessagePostUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [\r\n      'text/plain',\r\n      'application/json',\r\n      'text/json',\r\n    ];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<UserMessage>(\r\n      `${this.basePath}/api/UserMessage`,\r\n      userMessage,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param id\r\n   * @param userMessage\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<Blob>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Blob>>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Blob>>;\r\n  public userMessagePutUserMessage(\r\n    id: number,\r\n    userMessage: UserMessage,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (id === null || id === undefined) {\r\n      throw new Error(\r\n        'Required parameter id was null or undefined when calling userMessagePutUserMessage.'\r\n      );\r\n    }\r\n\r\n    if (userMessage === null || userMessage === undefined) {\r\n      throw new Error(\r\n        'Required parameter userMessage was null or undefined when calling userMessagePutUserMessage.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json',\r\n    ];\r\n    const httpContentTypeSelected:\r\n      | string\r\n      | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put(\r\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\r\n      userMessage,\r\n      {\r\n        responseType: 'blob',\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers,\r\n        observe,\r\n        reportProgress,\r\n      }\r\n    );\r\n  }\r\n}\r\n","export interface ConfigurationParameters {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n}\r\n\r\nexport class Configuration {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n\r\n  constructor(configurationParameters: ConfigurationParameters = {}) {\r\n    this.apiKeys = configurationParameters.apiKeys;\r\n    this.username = configurationParameters.username;\r\n    this.password = configurationParameters.password;\r\n    this.accessToken = configurationParameters.accessToken;\r\n    this.basePath = configurationParameters.basePath;\r\n    this.withCredentials = configurationParameters.withCredentials;\r\n  }\r\n\r\n  /**\r\n   * Select the correct content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param contentTypes - the array of content types that are available for selection\r\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\r\n    if (contentTypes.length == 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = contentTypes.find((x) => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return contentTypes[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Select the correct accept content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param accepts - the array of content types that are available for selection.\r\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderAccept(accepts: string[]): string | undefined {\r\n    if (accepts.length == 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = accepts.find((x) => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return accepts[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Check if the given MIME is a JSON MIME.\r\n   * JSON MIME examples:\r\n   *   application/json\r\n   *   application/json; charset=UTF8\r\n   *   APPLICATION/JSON\r\n   *   application/vnd.company+json\r\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\r\n   * @return True if the given MIME is JSON, false otherwise.\r\n   */\r\n  public isJsonMime(mime: string): boolean {\r\n    const jsonMime: RegExp = new RegExp(\r\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\r\n      'i'\r\n    );\r\n    return (\r\n      mime != null &&\r\n      (jsonMime.test(mime) ||\r\n        mime.toLowerCase() === 'application/json-patch+json')\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\n\r\n/**\r\n * CustomHttpUrlEncodingCodec\r\n * Fix plus sign (+) not encoding, so sent as blank space\r\n * See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\r\n */\r\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\r\n  encodeKey(k: string): string {\r\n    k = super.encodeKey(k);\r\n    return k.replace(/\\+/gi, '%2B');\r\n  }\r\n  encodeValue(v: string): string {\r\n    v = super.encodeValue(v);\r\n    return v.replace(/\\+/gi, '%2B');\r\n  }\r\n}\r\n","export * from './api/api';\r\nexport * from './model/models';\r\nexport * from './variables';\r\nexport * from './configuration';\r\nexport * from './api.module';\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type AddressFamily =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n  | 12\r\n  | 13\r\n  | 14\r\n  | 15\r\n  | 16\r\n  | 17\r\n  | 18\r\n  | 19\r\n  | 21\r\n  | 22\r\n  | 23\r\n  | 24\r\n  | 25\r\n  | 26\r\n  | 28\r\n  | 29\r\n  | 65536\r\n  | 65537\r\n  | -1;\r\n\r\nexport const AddressFamily = {\r\n  NUMBER_0: 0 as AddressFamily,\r\n  NUMBER_1: 1 as AddressFamily,\r\n  NUMBER_2: 2 as AddressFamily,\r\n  NUMBER_3: 3 as AddressFamily,\r\n  NUMBER_4: 4 as AddressFamily,\r\n  NUMBER_5: 5 as AddressFamily,\r\n  NUMBER_6: 6 as AddressFamily,\r\n  NUMBER_7: 7 as AddressFamily,\r\n  NUMBER_8: 8 as AddressFamily,\r\n  NUMBER_9: 9 as AddressFamily,\r\n  NUMBER_10: 10 as AddressFamily,\r\n  NUMBER_11: 11 as AddressFamily,\r\n  NUMBER_12: 12 as AddressFamily,\r\n  NUMBER_13: 13 as AddressFamily,\r\n  NUMBER_14: 14 as AddressFamily,\r\n  NUMBER_15: 15 as AddressFamily,\r\n  NUMBER_16: 16 as AddressFamily,\r\n  NUMBER_17: 17 as AddressFamily,\r\n  NUMBER_18: 18 as AddressFamily,\r\n  NUMBER_19: 19 as AddressFamily,\r\n  NUMBER_21: 21 as AddressFamily,\r\n  NUMBER_22: 22 as AddressFamily,\r\n  NUMBER_23: 23 as AddressFamily,\r\n  NUMBER_24: 24 as AddressFamily,\r\n  NUMBER_25: 25 as AddressFamily,\r\n  NUMBER_26: 26 as AddressFamily,\r\n  NUMBER_28: 28 as AddressFamily,\r\n  NUMBER_29: 29 as AddressFamily,\r\n  NUMBER_65536: 65536 as AddressFamily,\r\n  NUMBER_65537: 65537 as AddressFamily,\r\n  NUMBER_MINUS_1: -1 as AddressFamily,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type CallingConventions = 1 | 2 | 3 | 32 | 64;\r\n\r\nexport const CallingConventions = {\r\n  NUMBER_1: 1 as CallingConventions,\r\n  NUMBER_2: 2 as CallingConventions,\r\n  NUMBER_3: 3 as CallingConventions,\r\n  NUMBER_32: 32 as CallingConventions,\r\n  NUMBER_64: 64 as CallingConventions,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type EventAttributes = 0 | 512 | 1024;\r\n\r\nexport const EventAttributes = {\r\n  NUMBER_0: 0 as EventAttributes,\r\n  NUMBER_512: 512 as EventAttributes,\r\n  NUMBER_1024: 1024 as EventAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type FieldAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 1024\r\n  | 4096\r\n  | 8192\r\n  | 32768\r\n  | 38144;\r\n\r\nexport const FieldAttributes = {\r\n  NUMBER_0: 0 as FieldAttributes,\r\n  NUMBER_1: 1 as FieldAttributes,\r\n  NUMBER_2: 2 as FieldAttributes,\r\n  NUMBER_3: 3 as FieldAttributes,\r\n  NUMBER_4: 4 as FieldAttributes,\r\n  NUMBER_5: 5 as FieldAttributes,\r\n  NUMBER_6: 6 as FieldAttributes,\r\n  NUMBER_7: 7 as FieldAttributes,\r\n  NUMBER_16: 16 as FieldAttributes,\r\n  NUMBER_32: 32 as FieldAttributes,\r\n  NUMBER_64: 64 as FieldAttributes,\r\n  NUMBER_128: 128 as FieldAttributes,\r\n  NUMBER_256: 256 as FieldAttributes,\r\n  NUMBER_512: 512 as FieldAttributes,\r\n  NUMBER_1024: 1024 as FieldAttributes,\r\n  NUMBER_4096: 4096 as FieldAttributes,\r\n  NUMBER_8192: 8192 as FieldAttributes,\r\n  NUMBER_32768: 32768 as FieldAttributes,\r\n  NUMBER_38144: 38144 as FieldAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type GenericParameterAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;\r\n\r\nexport const GenericParameterAttributes = {\r\n  NUMBER_0: 0 as GenericParameterAttributes,\r\n  NUMBER_1: 1 as GenericParameterAttributes,\r\n  NUMBER_2: 2 as GenericParameterAttributes,\r\n  NUMBER_3: 3 as GenericParameterAttributes,\r\n  NUMBER_4: 4 as GenericParameterAttributes,\r\n  NUMBER_8: 8 as GenericParameterAttributes,\r\n  NUMBER_16: 16 as GenericParameterAttributes,\r\n  NUMBER_28: 28 as GenericParameterAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type LayoutKind = 0 | 2 | 3;\r\n\r\nexport const LayoutKind = {\r\n  NUMBER_0: 0 as LayoutKind,\r\n  NUMBER_2: 2 as LayoutKind,\r\n  NUMBER_3: 3 as LayoutKind,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MemberTypes = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;\r\n\r\nexport const MemberTypes = {\r\n  NUMBER_1: 1 as MemberTypes,\r\n  NUMBER_2: 2 as MemberTypes,\r\n  NUMBER_4: 4 as MemberTypes,\r\n  NUMBER_8: 8 as MemberTypes,\r\n  NUMBER_16: 16 as MemberTypes,\r\n  NUMBER_32: 32 as MemberTypes,\r\n  NUMBER_64: 64 as MemberTypes,\r\n  NUMBER_128: 128 as MemberTypes,\r\n  NUMBER_191: 191 as MemberTypes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MethodAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 1024\r\n  | 2048\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 53248;\r\n\r\nexport const MethodAttributes = {\r\n  NUMBER_0: 0 as MethodAttributes,\r\n  NUMBER_1: 1 as MethodAttributes,\r\n  NUMBER_2: 2 as MethodAttributes,\r\n  NUMBER_3: 3 as MethodAttributes,\r\n  NUMBER_4: 4 as MethodAttributes,\r\n  NUMBER_5: 5 as MethodAttributes,\r\n  NUMBER_6: 6 as MethodAttributes,\r\n  NUMBER_7: 7 as MethodAttributes,\r\n  NUMBER_8: 8 as MethodAttributes,\r\n  NUMBER_16: 16 as MethodAttributes,\r\n  NUMBER_32: 32 as MethodAttributes,\r\n  NUMBER_64: 64 as MethodAttributes,\r\n  NUMBER_128: 128 as MethodAttributes,\r\n  NUMBER_256: 256 as MethodAttributes,\r\n  NUMBER_512: 512 as MethodAttributes,\r\n  NUMBER_1024: 1024 as MethodAttributes,\r\n  NUMBER_2048: 2048 as MethodAttributes,\r\n  NUMBER_4096: 4096 as MethodAttributes,\r\n  NUMBER_8192: 8192 as MethodAttributes,\r\n  NUMBER_16384: 16384 as MethodAttributes,\r\n  NUMBER_32768: 32768 as MethodAttributes,\r\n  NUMBER_53248: 53248 as MethodAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type MethodImplAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 8\r\n  | 16\r\n  | 32\r\n  | 64\r\n  | 128\r\n  | 256\r\n  | 512\r\n  | 4096\r\n  | 65535;\r\n\r\nexport const MethodImplAttributes = {\r\n  NUMBER_0: 0 as MethodImplAttributes,\r\n  NUMBER_1: 1 as MethodImplAttributes,\r\n  NUMBER_2: 2 as MethodImplAttributes,\r\n  NUMBER_3: 3 as MethodImplAttributes,\r\n  NUMBER_4: 4 as MethodImplAttributes,\r\n  NUMBER_8: 8 as MethodImplAttributes,\r\n  NUMBER_16: 16 as MethodImplAttributes,\r\n  NUMBER_32: 32 as MethodImplAttributes,\r\n  NUMBER_64: 64 as MethodImplAttributes,\r\n  NUMBER_128: 128 as MethodImplAttributes,\r\n  NUMBER_256: 256 as MethodImplAttributes,\r\n  NUMBER_512: 512 as MethodImplAttributes,\r\n  NUMBER_4096: 4096 as MethodImplAttributes,\r\n  NUMBER_65535: 65535 as MethodImplAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type ModelValidationState = 0 | 1 | 2 | 3;\r\n\r\nexport const ModelValidationState = {\r\n  NUMBER_0: 0 as ModelValidationState,\r\n  NUMBER_1: 1 as ModelValidationState,\r\n  NUMBER_2: 2 as ModelValidationState,\r\n  NUMBER_3: 3 as ModelValidationState,\r\n};\r\n","export * from './actionContext';\r\nexport * from './actionContextBooleanFunc';\r\nexport * from './actionDescriptor';\r\nexport * from './addressFamily';\r\nexport * from './asnEncodedData';\r\nexport * from './assembly';\r\nexport * from './asymmetricAlgorithm';\r\nexport * from './attributeRouteInfo';\r\nexport * from './bindingInfo';\r\nexport * from './bindingSource';\r\nexport * from './body';\r\nexport * from './body1';\r\nexport * from './callingConventions';\r\nexport * from './cancellationToken';\r\nexport * from './claim';\r\nexport * from './claimsIdentity';\r\nexport * from './claimsPrincipal';\r\nexport * from './connectionInfo';\r\nexport * from './constructorInfo';\r\nexport * from './controllerActionDescriptor';\r\nexport * from './controllerContext';\r\nexport * from './customAttributeData';\r\nexport * from './customAttributeNamedArgument';\r\nexport * from './customAttributeTypedArgument';\r\nexport * from './eventAttributes';\r\nexport * from './eventInfo';\r\nexport * from './exception';\r\nexport * from './fieldAttributes';\r\nexport * from './fieldInfo';\r\nexport * from './filterDescriptor';\r\nexport * from './genericParameterAttributes';\r\nexport * from './hostString';\r\nexport * from './httpContext';\r\nexport * from './httpRequest';\r\nexport * from './httpResponse';\r\nexport * from './iActionConstraintMetadata';\r\nexport * from './iCustomAttributeProvider';\r\nexport * from './iFilterMetadata';\r\nexport * from './iIdentity';\r\nexport * from './iModelBinderFactory';\r\nexport * from './iModelMetadataProvider';\r\nexport * from './iObjectModelValidator';\r\nexport * from './iPAddress';\r\nexport * from './iPropertyFilterProvider';\r\nexport * from './iResponseCookies';\r\nexport * from './iRouter';\r\nexport * from './iServiceProvider';\r\nexport * from './iSession';\r\nexport * from './iUrlHelper';\r\nexport * from './iValueProviderFactory';\r\nexport * from './intPtr';\r\nexport * from './jwtToken';\r\nexport * from './keySizes';\r\nexport * from './layoutKind';\r\nexport * from './like';\r\nexport * from './location';\r\nexport * from './locationTag';\r\nexport * from './loginApiRequest';\r\nexport * from './markLocationsRequest';\r\nexport * from './memberInfo';\r\nexport * from './memberTypes';\r\nexport * from './methodAttributes';\r\nexport * from './methodBase';\r\nexport * from './methodImplAttributes';\r\nexport * from './methodInfo';\r\nexport * from './modelError';\r\nexport * from './modelMetadataBooleanFunc';\r\nexport * from './modelStateEntry';\r\nexport * from './modelValidationState';\r\nexport * from './module';\r\nexport * from './moduleHandle';\r\nexport * from './oid';\r\nexport * from './parameterAttributes';\r\nexport * from './parameterDescriptor';\r\nexport * from './parameterInfo';\r\nexport * from './pathString';\r\nexport * from './pipeReader';\r\nexport * from './pipeWriter';\r\nexport * from './post';\r\nexport * from './postComment';\r\nexport * from './postPaginatedList';\r\nexport * from './postTag';\r\nexport * from './postType';\r\nexport * from './postUserLocation';\r\nexport * from './problemDetailsFactory';\r\nexport * from './propertyAttributes';\r\nexport * from './propertyInfo';\r\nexport * from './publicKey';\r\nexport * from './queryString';\r\nexport * from './registerRequest';\r\nexport * from './routeData';\r\nexport * from './runtimeFieldHandle';\r\nexport * from './runtimeMethodHandle';\r\nexport * from './runtimeTypeHandle';\r\nexport * from './safeWaitHandle';\r\nexport * from './securityRuleSet';\r\nexport * from './slimUserResponse';\r\nexport * from './stream';\r\nexport * from './stringStringKeyValuePair';\r\nexport * from './stringStringValuesKeyValuePair';\r\nexport * from './structLayoutAttribute';\r\nexport * from './tag';\r\nexport * from './tagController';\r\nexport * from './type';\r\nexport * from './typeAttributes';\r\nexport * from './typeInfo';\r\nexport * from './typeObjectKeyValuePair';\r\nexport * from './user';\r\nexport * from './userFollowing';\r\nexport * from './userLocation';\r\nexport * from './userMessage';\r\nexport * from './userResponse';\r\nexport * from './waitHandle';\r\nexport * from './webSocketManager';\r\nexport * from './x500DistinguishedName';\r\nexport * from './x509Certificate2';\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type ParameterAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 4\r\n  | 8\r\n  | 16\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 61440;\r\n\r\nexport const ParameterAttributes = {\r\n  NUMBER_0: 0 as ParameterAttributes,\r\n  NUMBER_1: 1 as ParameterAttributes,\r\n  NUMBER_2: 2 as ParameterAttributes,\r\n  NUMBER_4: 4 as ParameterAttributes,\r\n  NUMBER_8: 8 as ParameterAttributes,\r\n  NUMBER_16: 16 as ParameterAttributes,\r\n  NUMBER_4096: 4096 as ParameterAttributes,\r\n  NUMBER_8192: 8192 as ParameterAttributes,\r\n  NUMBER_16384: 16384 as ParameterAttributes,\r\n  NUMBER_32768: 32768 as ParameterAttributes,\r\n  NUMBER_61440: 61440 as ParameterAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type PropertyAttributes =\r\n  | 0\r\n  | 512\r\n  | 1024\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 32768\r\n  | 62464;\r\n\r\nexport const PropertyAttributes = {\r\n  NUMBER_0: 0 as PropertyAttributes,\r\n  NUMBER_512: 512 as PropertyAttributes,\r\n  NUMBER_1024: 1024 as PropertyAttributes,\r\n  NUMBER_4096: 4096 as PropertyAttributes,\r\n  NUMBER_8192: 8192 as PropertyAttributes,\r\n  NUMBER_16384: 16384 as PropertyAttributes,\r\n  NUMBER_32768: 32768 as PropertyAttributes,\r\n  NUMBER_62464: 62464 as PropertyAttributes,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type SecurityRuleSet = 0 | 1 | 2;\r\n\r\nexport const SecurityRuleSet = {\r\n  NUMBER_0: 0 as SecurityRuleSet,\r\n  NUMBER_1: 1 as SecurityRuleSet,\r\n  NUMBER_2: 2 as SecurityRuleSet,\r\n};\r\n","/**\r\n * Visit\r\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\r\n *\r\n * OpenAPI spec version: v1\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nexport type TypeAttributes =\r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 16\r\n  | 24\r\n  | 32\r\n  | 128\r\n  | 256\r\n  | 1024\r\n  | 2048\r\n  | 4096\r\n  | 8192\r\n  | 16384\r\n  | 65536\r\n  | 131072\r\n  | 196608\r\n  | 262144\r\n  | 264192\r\n  | 1048576\r\n  | 12582912;\r\n\r\nexport const TypeAttributes = {\r\n  NUMBER_0: 0 as TypeAttributes,\r\n  NUMBER_1: 1 as TypeAttributes,\r\n  NUMBER_2: 2 as TypeAttributes,\r\n  NUMBER_3: 3 as TypeAttributes,\r\n  NUMBER_4: 4 as TypeAttributes,\r\n  NUMBER_5: 5 as TypeAttributes,\r\n  NUMBER_6: 6 as TypeAttributes,\r\n  NUMBER_7: 7 as TypeAttributes,\r\n  NUMBER_8: 8 as TypeAttributes,\r\n  NUMBER_16: 16 as TypeAttributes,\r\n  NUMBER_24: 24 as TypeAttributes,\r\n  NUMBER_32: 32 as TypeAttributes,\r\n  NUMBER_128: 128 as TypeAttributes,\r\n  NUMBER_256: 256 as TypeAttributes,\r\n  NUMBER_1024: 1024 as TypeAttributes,\r\n  NUMBER_2048: 2048 as TypeAttributes,\r\n  NUMBER_4096: 4096 as TypeAttributes,\r\n  NUMBER_8192: 8192 as TypeAttributes,\r\n  NUMBER_16384: 16384 as TypeAttributes,\r\n  NUMBER_65536: 65536 as TypeAttributes,\r\n  NUMBER_131072: 131072 as TypeAttributes,\r\n  NUMBER_196608: 196608 as TypeAttributes,\r\n  NUMBER_262144: 262144 as TypeAttributes,\r\n  NUMBER_264192: 264192 as TypeAttributes,\r\n  NUMBER_1048576: 1048576 as TypeAttributes,\r\n  NUMBER_12582912: 12582912 as TypeAttributes,\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BASE_PATH = new InjectionToken<string>('basePath');\r\nexport const COLLECTION_FORMATS = {\r\n  csv: ',',\r\n  tsv: '   ',\r\n  ssv: ' ',\r\n  pipes: '|',\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { map, catchError, switchMap } from 'rxjs/operators';\r\n\r\nimport { AlertController } from '@ionic/angular';\r\nimport { BASE_PATH } from '../../../environments/environment';\r\nimport { AccountsService } from '../clients/api/accounts.service';\r\n\r\nconst TOKEN_KEY = 'ACCESS_TOKEN';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private alertController: AlertController,\r\n    private accountService: AccountsService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return from(this.accountService.getToken()).pipe(\r\n      switchMap((token) => {\r\n        if (token !== '') {\r\n          request = request.clone({\r\n            headers: request.headers.set('Authorization', 'Bearer ' + token),\r\n          });\r\n        }\r\n\r\n        // if (!request.headers.has('Content-Type')) {\r\n        //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        // }\r\n\r\n        return next.handle(request).pipe(\r\n          map((event: HttpEvent<any>) => {\r\n            if (event instanceof HttpResponse) {\r\n              // do nothing for now\r\n            }\r\n            return event;\r\n          }),\r\n          catchError((error: HttpErrorResponse) => {\r\n            const status = error.status;\r\n            const reason = error;\r\n\r\n            // this.presentAlert(status, reason);\r\n            return throwError(error);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  async presentAlert(status, reason) {\r\n    const alert = await this.alertController.create({\r\n      header: status + ' Error',\r\n      subHeader: 'Subtitle',\r\n      message: reason,\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(public router: Router, private zone: NgZone) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          // User is signed in.\r\n\r\n          resolve(true);\r\n        } else {\r\n          // No user is signed in.\r\n\r\n          resolve(false);\r\n          this.zone.run(() => {\r\n            this.router.navigate(['sign-in']);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'card-flip',\r\n  templateUrl: './card-flip.component.html',\r\n  styleUrls: ['./card-flip.component.scss'],\r\n})\r\nexport class CardFlipComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  flipped = false;\r\n\r\n  ngOnInit() {}\r\n\r\n  public flip() {\r\n    this.flipped = !this.flipped;\r\n  }\r\n}\r\n","<div class=\"flip-container\" [class.flipped]=\"flipped\">\r\n  <div class=\"flipper\">\r\n    <div class=\"front\">\r\n      <ng-content select=\".card-flip-front\"></ng-content>\r\n      <ng-content select=\"flip-card\"></ng-content>\r\n    </div>\r\n\r\n    <div class=\"back\">\r\n      <ng-content select=\".card-flip-back\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { Post, PostService } from 'src/app/backend/clients';\r\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\r\n\r\n@Component({\r\n  selector: 'post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.scss'],\r\n})\r\nexport class PostComponent implements OnInit {\r\n  postfaa: any;\r\n  constructor(\r\n    private router: Router,\r\n    private zone: NgZone,\r\n    private postSvc: PostService,\r\n    public modalController: ModalController\r\n  ) {\r\n    // this.route.queryParams.subscribe(params => {\r\n    //   if (this.router.getCurrentNavigation().extras.state) {\r\n    //     this.displayNewUser = true;\r\n    //     this.username = this.router.getCurrentNavigation().extras.state.newUser;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  @Input() posts: PostApi[] = [];\r\n\r\n  location = 'Charleston, SC';\r\n\r\n  // flipped = false;\r\n  likeIcon = '../../assets/UI/heart.svg';\r\n  likedIcon = '../../assets/UI/liked-icon.svg';\r\n  ngOnInit() {}\r\n\r\n  async openViewer(post) {\r\n    this.postfaa = post;\r\n    const modal = await this.modalController.create({\r\n      component: ViewerModalComponent,\r\n      componentProps: {\r\n        src: this.postfaa\r\n      },\r\n      cssClass: 'ion-img-viewer',\r\n      keyboardClose: true,\r\n      showBackdrop: true\r\n    });\r\n \r\n    return await modal.present();\r\n  }\r\n  likePost(post: PostApi) {\r\n    if (!post.likedByCurrentUser) {\r\n      this.postSvc\r\n        .postsLikePostIdPost(post.postId.toString())\r\n        .pipe(take(1))\r\n        .subscribe();\r\n      post.likeCount++;\r\n      post.likedByCurrentUser = true;\r\n    }\r\n  }\r\n\r\n  viewComments(post: PostApi) {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      state: {\r\n        postId: post.postId,\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/comments', navigationExtras);\r\n    });\r\n  }\r\n\r\n  openProfile(post: PostApi) {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      state: {\r\n        userId: post.fkUserId,\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n}\r\n","<ion-virtual-scroll [items]=\"posts\" approxItemHeight=\"500\">\r\n  <ion-card\r\n    *virtualItem=\"let post; let itemBounds = bounds\"\r\n    [ngClass]=\"{\r\n      'post-image-container': post.postContentLink,\r\n      'post-container': post.postContentLink === undefined\r\n    }\"\r\n  >\r\n    <!-- <card-flip #card> -->\r\n    <!-- <div class =\"card-flip-front\" *ngIf=\"!card.flipped\"> -->\r\n    <div class=\"card-flip-front\">\r\n      <ion-grid class=\"three-col-grid\">\r\n        <ion-row>\r\n          <ion-col size=\".6\">\r\n            <ion-avatar>\r\n              <img [src]=\"post.fkUser.avi\" (click)=\"openProfile(post)\" />\r\n            </ion-avatar>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-row>\r\n              <ion-card-title class=\"card-title\"\r\n                >{{ post.fkUser.firstname }}\r\n                {{ post.fkUser.lastname }}</ion-card-title\r\n              >\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-card-subtitle color=\"medium\">{{\r\n                post.location.locationName\r\n              }}</ion-card-subtitle>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\".4\">\r\n            <ion-buttons>\r\n              <ion-button class=\"ion-justify-content-center\">\r\n                <img src=\"../../assets/UI/optionsDots.svg\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <ion-card-content>\r\n        <ion-grid>\r\n          <ion-row class=\"ion-align-items-baseline\">\r\n            <ion-col>\r\n              {{ post.postCaption }}\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row *ngIf=\"post.postContentLink\">\r\n            <ion-col>\r\n              <div class=\"swiper-zoom-container\" >\r\n                <img ionImgViewer \r\n                  [src]=\"post.postContentLink\"\r\n                  height=\"300\"\r\n                  [alt]=\"post.name\"\r\n                  class=\"rcorners\"\r\n                  (click)=\"openViewer(post.postContentLink)\"\r\n                />\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row>\r\n            <ion-col>\r\n              <ion-buttons>\r\n                <ion-button\r\n                  class=\"ion-justify-content-center\"\r\n                  (click)=\"likePost(post)\"\r\n                >\r\n                  <img\r\n                    [src]=\"\r\n                      post.likedByCurrentUser == true ? likedIcon : likeIcon\r\n                    \"\r\n                  />\r\n                </ion-button>\r\n                {{ post.likeCount || 0 }}\r\n              </ion-buttons>\r\n            </ion-col>\r\n            <ion-col size=\"4\">\r\n              <ion-buttons>\r\n                <ion-button\r\n                  class=\"ion-justify-content-center\"\r\n                  (click)=\"viewComments(post)\"\r\n                >\r\n                  <img src=\"../../assets/UI/comments.svg\" />\r\n                </ion-button>\r\n                {{ post.commentCount || 0 }}\r\n              </ion-buttons>\r\n            </ion-col>\r\n            <ion-col class=\"align-self-center text-center\">\r\n              <ion-note>{{ post.postTime | dateAgo }}</ion-note>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n        <ion-buttons>\r\n          <!-- <ion-button class=\"btn\" flip-card (click)=\"card.flip()\"> -->\r\n          <ion-button class=\"btn\" (click)=\"viewComments(post)\">\r\n            View all comments\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-card-content>\r\n    </div>\r\n    <!-- <div class =\"card-flip-back\" *ngIf=\"card.flipped\">\r\n        <ion-card-content>\r\n          <ion-buttons>\r\n            <ion-button class=\"btn\" flip-card (click)=\"card.flip()\">\r\n              Back to post\r\n            </ion-button>\r\n          </ion-buttons>\r\n            <ion-virtual-scroll [items]=\"notifications\">\r\n            <ion-item  *virtualItem=\"let comment; let itemBounds = bounds;\" class=\"comment\">\r\n              <ion-grid class=\"comments-grid\">\r\n                <ion-row>\r\n                  <ion-col class=\"ion-align-self-center\">\r\n                    <ion-row class=\"ion-align-items-center\">\r\n                      <ion-col>\r\n                        <img src=\"../../../assets/stockPhoto.png\" class=\"user-pic img-center\">\r\n                      </ion-col>\r\n                    </ion-row>\r\n                  </ion-col>\r\n                  <ion-col size=\"2.2\">\r\n                    <ion-row>\r\n                      <ion-col>\r\n                        <p><strong>{{comment.name}}</strong> {{comment.verbage}} {{comment.isComment == true ? \"\\\"\" + comment.comment + \"\\\"\": \"\"}}</p>\r\n                      </ion-col>\r\n                    </ion-row>\r\n                    <ion-row>\r\n                      <ion-col>\r\n                        <ion-text color=\"medium\">{{comment.time}}</ion-text>\r\n                      </ion-col>\r\n                    </ion-row>          \r\n                  </ion-col>\r\n                </ion-row>\r\n              </ion-grid>\r\n            </ion-item>\r\n          </ion-virtual-scroll>\r\n        </ion-card-content>\r\n      </div> -->\r\n    <!-- </card-flip> -->\r\n  </ion-card>\r\n</ion-virtual-scroll>\r\n","export enum MapSelectionMode {\r\n  MULTI_VISIT,\r\n  MULTI_TO_VISIT,\r\n  VISITED,\r\n  TO_VISIT,\r\n  FILTER,\r\n  NONE,\r\n}\r\n","import { OnInit, Injectable } from '@angular/core';\r\nimport stateRaw from './json/states.json';\r\nimport countryRaw from './json/countries.json';\r\n\r\nexport interface Country {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface State {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IJsonCountries {\r\n  Countries: Country[];\r\n}\r\nexport interface IJsonStates {\r\n  States: State[];\r\n}\r\n\r\n@Injectable()\r\nexport class LocationSelector implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  public getStates() {\r\n    return stateRaw as IJsonStates;\r\n  }\r\n\r\n  public getCountries() {\r\n    return countryRaw as IJsonCountries;\r\n  }\r\n\r\n  public getAllLocations(): any[] {\r\n    const options: Array<{ id: string; name: string }> = [];\r\n\r\n    this.getCountries().Countries.forEach((e) => {\r\n      const name = e.name;\r\n      const id = e.id;\r\n      options.push({ id, name });\r\n    });\r\n\r\n    this.getStates().States.forEach((e) => {\r\n      const name = e.name;\r\n      const id = e.id;\r\n      options.push({ id, name });\r\n    });\r\n\r\n    return options.sort(this.compare);\r\n  }\r\n\r\n  public compare(a, b) {\r\n    let comparison = 0;\r\n    if (a.name > b.name) {\r\n      comparison = 1;\r\n    } else if (a.name < b.name) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  NgZone,\r\n  OnDestroy,\r\n  Injectable,\r\n} from '@angular/core';\r\n\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4maps from '@amcharts/amcharts4/maps';\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\nimport worldLow from '@amcharts/amcharts4-geodata/worldLow';\r\nimport am4geodata_usaLow from '@amcharts/amcharts4-geodata/usaLow';\r\n// import am4geodata_canadaLow from '@amcharts/amcharts4-geodata/canadaLow';\r\n// import am4geodata_russiaLow from '@amcharts/amcharts4-geodata/russiaLow';\r\nimport { MapSelectionMode } from './enums/map-selection-mode';\r\n\r\n@Injectable()\r\nexport class Map {\r\n  public selectedArr: Array<{\r\n    locationId: string;\r\n    status: string;\r\n  }>;\r\n\r\n  public changedAreas: Array<{\r\n    locationId: string;\r\n    status: string;\r\n  }>;\r\n\r\n  private chart: am4maps.MapChart;\r\n  private polygonArr: Array<am4maps.MapPolygon>;\r\n  private seriesArr: Array<am4maps.MapPolygonSeries>;\r\n  private selectedArea: am4maps.MapPolygon;\r\n  private selectionMode: MapSelectionMode;\r\n  private lastSelected: am4maps.MapPolygon;\r\n  private name: string;\r\n  private id: any;\r\n\r\n  constructor(private zone: NgZone) {\r\n    this.destroyMap();\r\n    this.selectedArea = new am4maps.MapPolygon();\r\n    this.polygonArr = new Array<am4maps.MapPolygon>();\r\n    this.selectedArr = new Array();\r\n    this.changedAreas = new Array();\r\n    this.seriesArr = new Array<am4maps.MapPolygonSeries>();\r\n    this.createMap(MapSelectionMode.NONE);\r\n    this.selectionMode = MapSelectionMode.NONE;\r\n  }\r\n\r\n  // static getInstance(zone: NgZone): Map {\r\n  //   if (!Map.instance) {\r\n  //     Map.instance = new Map(zone);\r\n  //   }\r\n\r\n  //   return Map.instance;\r\n  // }\r\n\r\n  get selectedId() {\r\n    return this.id;\r\n  }\r\n\r\n  set selectedId(id) {\r\n    this.id = id;\r\n  }\r\n\r\n  get selectedName() {\r\n    return this.name;\r\n  }\r\n\r\n  set selectedName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n async createMap(selectionMode: MapSelectionMode) {\r\n    am4core.disposeAllCharts();\r\n    this.zone.runOutsideAngular(() => {\r\n      let worldSeries: am4maps.MapPolygonSeries;\r\n      let usaSeries: am4maps.MapPolygonSeries;\r\n      // let canadaSeries: am4maps.MapPolygonSeries;\r\n      // let russiaSeries: am4maps.MapPolygonSeries;\r\n      let chart: am4maps.MapChart;\r\n\r\n        am4core.ready(() => {\r\n        am4core.useTheme(am4themes_animated);\r\n        am4core.options.autoDispose = true;\r\n        // Create map instance\r\n        chart = am4core.create(undefined, am4maps.MapChart);\r\n        chart.geodata = worldLow;\r\n        chart.projection = new am4maps.projections.Miller();\r\n        chart.zoomControl = new am4maps.ZoomControl();\r\n        chart.zoomControl.plusButton.hide();\r\n        chart.zoomControl.minusButton.hide();\r\n        chart.tapToActivate = true;\r\n        chart.seriesContainer.events.disableType('doublehit');\r\n        chart.chartContainer.background.events.disableType('doublehit');\r\n        chart.showOnInit = true;\r\n        // Home button\r\n        const homeButton = new am4core.Button();\r\n        homeButton.events.on('hit', () => {\r\n          chart.goHome();\r\n        });\r\n\r\n        homeButton.icon = new am4core.Sprite();\r\n        homeButton.padding(7, 5, 7, 5);\r\n        homeButton.width = 30;\r\n        homeButton.icon.path =\r\n          'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8';\r\n        homeButton.marginBottom = 10;\r\n        homeButton.parent = chart.zoomControl;\r\n        homeButton.insertAfter(chart.zoomControl.minusButton);\r\n\r\n        // Series for World map\r\n        worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        worldSeries.exclude = ['AQ'];\r\n        worldSeries.useGeodata = true;\r\n        this.seriesArr.push(worldSeries);\r\n        this.polygonArr.push(worldSeries.mapPolygons.template);\r\n\r\n        // Series for United States map\r\n        usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        usaSeries.geodata = am4geodata_usaLow;\r\n        this.seriesArr.push(usaSeries);\r\n        this.polygonArr.push(usaSeries.mapPolygons.template);\r\n\r\n        // // Series for Canada map\r\n        // canadaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        // canadaSeries.geodata = am4geodata_canadaLow;\r\n        // this.seriesArr.push(canadaSeries);\r\n        // this.polygonArr.push(canadaSeries.mapPolygons.template);\r\n\r\n        // // Series for Russia map\r\n        // russiaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        // russiaSeries.geodata = am4geodata_russiaLow;\r\n        // this.seriesArr.push(russiaSeries);\r\n        // this.polygonArr.push(russiaSeries.mapPolygons.template);\r\n      });\r\n\r\n      this.setupTemplates();\r\n      this.setSelectionMode(selectionMode);\r\n      this.chart = chart;\r\n    });\r\n  }\r\n\r\n  addMapToDiv(selectionMode: MapSelectionMode, divName: string) {\r\n    this.selectionMode = selectionMode;\r\n    this.setSelectionMode(this.selectionMode);\r\n    this.chart.moveHtmlContainer(divName);\r\n  }\r\n\r\n  setupTemplates() {\r\n    this.polygonArr.forEach((polygonTemplate) => {\r\n      polygonTemplate.tooltipText = '{name}';\r\n      polygonTemplate.nonScalingStroke = true;\r\n      polygonTemplate.applyOnClones = true;\r\n      polygonTemplate.strokeOpacity = 0.5;\r\n\r\n      const activeState = polygonTemplate.states.create('active');\r\n\r\n      const visited = polygonTemplate.states.create('visited');\r\n      visited.properties.fill = am4core.color('#128C7E');\r\n\r\n      const toVisit = polygonTemplate.states.create('toVisit');\r\n      toVisit.properties.fill = am4core.color('#F05E23');\r\n\r\n      const filter = polygonTemplate.states.create('filter');\r\n      filter.properties.fill = am4core.color('yellow');\r\n\r\n\r\n      const defaultState = polygonTemplate.states.create('default');\r\n      defaultState.properties.fill = am4core.color('#d9d9d9');\r\n\r\n      polygonTemplate.events.on('hit', (ev) => {\r\n        const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n\r\n        this.selectedArea = data;\r\n        // this.selectedName = data.name;\r\n\r\n        this.selectedId = data.id;\r\n\r\n        if (this.lastSelected !== ev.target) {\r\n          ev.target.series.chart.zoomToMapObject(ev.target);\r\n          this.lastSelected = ev.target;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setSelectionMode(selectionMode: MapSelectionMode) {\r\n    this.selectionMode = selectionMode;\r\n    // Allow only one location to be hightlighted at a time\r\n    if (this.selectionMode === MapSelectionMode.FILTER) {\r\n      this.polygonArr.forEach((polygonTemplate) => {\r\n        polygonTemplate.events.on('doublehit', (ev) => {\r\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n          this.resetAllLocations();\r\n          this.changeVisitStatus(data.id, 'filter');\r\n        });\r\n      });\r\n    } else if (this.selectionMode !== MapSelectionMode.NONE) {\r\n      this.polygonArr.forEach((polygonTemplate) => {\r\n        polygonTemplate.events.off('doublehit');\r\n        polygonTemplate.events.on('doublehit', (ev) => {\r\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\r\n          if (this.selectionMode === MapSelectionMode.TO_VISIT) {\r\n            this.changeVisitStatus(data.id, 'toVisit');\r\n          } else {\r\n            this.changeVisitStatus(data.id, 'visited');\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  zoomToLocation(locationId: string) {\r\n    for (const series of this.seriesArr) {\r\n      const result = series.getPolygonById(locationId);\r\n\r\n      if (result !== undefined) {\r\n        this.chart.zoomToMapObject(result);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  zoomHome() {\r\n    this.chart.goHome();\r\n  }\r\n\r\n  resetAllLocations() {\r\n    this.changedAreas.forEach((location) => {\r\n      for (const series of this.seriesArr) {\r\n        const result = series.getPolygonById(location.locationId);\r\n        if (result !== undefined) {\r\n          result.setState('default');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async changeVisitStatus(locationId: string, status: string, init: boolean = false) {\r\n    for (const series of this.seriesArr) {\r\n      const result = series.getPolygonById(locationId);\r\n\r\n      if (result !== undefined) {\r\n        this.selectedArea = result;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const locationInArray = this.changedAreas.find(\r\n      (d) => d.locationId === locationId\r\n    );\r\n    if (locationInArray !== undefined) {\r\n      const index = this.changedAreas.indexOf(locationInArray, 0);\r\n      if (index > -1) {\r\n        this.changedAreas.splice(index, 1);\r\n        if (status === 'filter') {\r\n          this.selectedArea.setState('filter');\r\n        } else {\r\n          this.selectedArea.setState('default');\r\n        }\r\n      }\r\n    } else {\r\n      if (status === 'visited') {\r\n        this.selectedArea.setState('visited');\r\n      } else if (status === 'toVisit') {\r\n        this.selectedArea.setState('toVisit');\r\n      } else if (status === 'filter') {\r\n        this.selectedArea.setState('filter');\r\n      }\r\n      this.selectedArr.push({ locationId, status });\r\n\r\n      // if the map already had locations, do not add them to this array\r\n      // this array is only the locations that have changed post initialization\r\n      if (!init) {\r\n        this.changedAreas.push({ locationId, status });\r\n      }\r\n    }\r\n\r\n    // this.chart.reinit();\r\n  }\r\n\r\ndestroyMap() {\r\n    this.zone.runOutsideAngular(() => {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPostImagePage } from './add-post-image.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPostImagePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostImagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPostImagePageRoutingModule } from './add-post-image-routing.module';\r\n\r\nimport { AddPostImagePage } from './add-post-image.page';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddPostImagePageRoutingModule,\r\n    IonicSelectableModule,\r\n  ],\r\n  declarations: [AddPostImagePage],\r\n})\r\nexport class AddPostImagePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CameraResultType, Photo, Camera } from '@capacitor/camera';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { take } from 'rxjs/operators';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\r\n\r\n@Component({\r\n  selector: 'app-add-post-image',\r\n  templateUrl: './add-post-image.page.html',\r\n  styleUrls: ['./add-post-image.page.scss'],\r\n})\r\nexport class AddPostImagePage implements OnInit {\r\n  public selectedLocation: { id: string; name: string } = undefined;\r\n  public postText: string = undefined;\r\n  public locationOptions: { id: string; name: string }[] = [];\r\n  public userImage = '../../../assets/UI/clickToUpload.jpg';\r\n  image: Photo;\r\n  blob: Blob;\r\n  error: boolean;\r\n\r\n  constructor(\r\n    public loadingController: LoadingController,\r\n    private modalCtrl: ModalController,\r\n    private selector: LocationSelector,\r\n    private postService: PostService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.locationOptions = this.selector.getAllLocations();\r\n  }\r\n\r\n  filterLocations(text: string) {\r\n    return this.locationOptions.filter((option) => {\r\n      return option.name.toLowerCase().indexOf(text) !== -1;\r\n    });\r\n  }\r\n\r\n  searchLocations(event: {\r\n    component: IonicSelectableComponent;\r\n    text: string;\r\n  }) {\r\n    const text = event.text.trim().toLowerCase();\r\n    event.component.startSearch();\r\n\r\n    if (!text) {\r\n      event.component.items = [];\r\n      event.component.endSearch();\r\n      return;\r\n    }\r\n\r\n    event.component.items = this.filterLocations(text);\r\n    event.component.endSearch();\r\n  }\r\n\r\n  async post() {\r\n    const loading = await this.loadingController.create({\r\n      // duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    this.postService\r\n      .postsNewPostForm(\r\n        this.postText,\r\n        'image',\r\n        this.selectedLocation.id,\r\n        this.blob\r\n      )\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          loading.dismiss();\r\n          this.dismiss();\r\n        },\r\n        (err) => {\r\n          this.error = true;\r\n          loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n\r\n  b64toBlob(dataURI) {\r\n    const byteString = atob(dataURI.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\r\n  }\r\n\r\n  async getUserImage() {\r\n    this.image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: CameraResultType.DataUrl,\r\n    });\r\n    // image.webPath will contain a path that can be set as an image src.\r\n    // You can access the original file using image.path, which can be\r\n    // passed to the Filesystem API to read the raw data of the image,\r\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\r\n    const imageUrl = this.image.dataUrl;\r\n    // Can be set to the src of an image now\r\n    this.userImage = imageUrl;\r\n    this.b64toBlob(this.image.dataUrl);\r\n  }\r\n}\r\n","<div class=\"splash\">\r\n<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons>\r\n            <ion-back-button defaultHref=\"/tab1\" (click)=\"dismiss()\" style=\"color: white;\"></ion-back-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>    \r\n<ion-content no-bounce>\r\n    <h1>Upload Image</h1>\r\n    <h3>Everyone loves a nice travel related photo!</h3>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <div>\r\n            <ion-button\r\n            style=\"margin: 0px;\r\n            padding: 0px;\"\r\n            class=\"submit-button\"\r\n            expand=\"block\"\r\n            type=\"submit\"\r\n            (click)=\"getUserImage()\"\r\n            >Click here to Upload Image</ion-button\r\n          >\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-textarea\r\n              [(ngModel)]=\"postText\"\r\n              rows=\"10\"\r\n              placeholder=\"Caption*\"\r\n              maxlength=\"250\"\r\n              autocapitalize=\"true\"\r\n              required\r\n            ></ion-textarea>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-label>Location*</ion-label>\r\n            <ionic-selectable\r\n              [(ngModel)]=\"selectedLocation\"\r\n              [items]=\"locationOptions\"\r\n              itemValueField=\"id\"\r\n              itemTextField=\"name\"\r\n              [canSearch]=\"true\"\r\n            >\r\n            </ionic-selectable>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n    <div class=\"validation-errors\">\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\r\n        when creating post\r\n      </div>\r\n    </div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"post()\"\r\n        [disabled]=\"!postText && selectedLocation !== undefined\"\r\n        >Add post</ion-button\r\n      >\r\n        </ion-col>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      >\r\n      </ion-col>\r\n      </ion-row>\r\n    </div>\r\n</ion-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPostPage } from './add-post.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPostPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\r\n\r\nimport { AddPostPage } from './add-post.page';\r\nimport { IonicSelectableModule } from 'ionic-selectable';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddPostPageRoutingModule,\r\n    IonicSelectableModule,\r\n  ],\r\n  declarations: [AddPostPage],\r\n})\r\nexport class AddPostPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { take } from 'rxjs/operators';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { CreatePostRequest } from 'src/app/backend/clients/model/createPostRequest';\r\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\r\n\r\n@Component({\r\n  selector: 'app-add-post',\r\n  templateUrl: './add-post.page.html',\r\n  styleUrls: ['./add-post.page.scss'],\r\n})\r\nexport class AddPostPage implements OnInit {\r\n  public selectedLocation: { id: string; name: string } = undefined;\r\n  public postText: string = undefined;\r\n  public locationOptions: { id: string; name: string }[] = [];\r\n  error: boolean;\r\n\r\n  constructor(\r\n    public loadingController: LoadingController,\r\n    private modalCtrl: ModalController,\r\n    private selector: LocationSelector,\r\n    private postService: PostService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.locationOptions = this.selector.getAllLocations();\r\n  }\r\n\r\n  filterLocations(text: string) {\r\n    return this.locationOptions.filter((option) => {\r\n      return option.name.toLowerCase().indexOf(text) !== -1;\r\n    });\r\n  }\r\n\r\n  searchLocations(event: {\r\n    component: IonicSelectableComponent;\r\n    text: string;\r\n  }) {\r\n    const text = event.text.trim().toLowerCase();\r\n    event.component.startSearch();\r\n\r\n    if (!text) {\r\n      event.component.items = [];\r\n      event.component.endSearch();\r\n      return;\r\n    }\r\n\r\n    event.component.items = this.filterLocations(text);\r\n    event.component.endSearch();\r\n  }\r\n\r\n  async post() {\r\n    const loading = await this.loadingController.create({\r\n      // duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    this.postService\r\n      .postsNewPostForm(this.postText, 'text', this.selectedLocation.id)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          loading.dismiss();\r\n          this.dismiss();\r\n        },\r\n        (err) => {\r\n          this.error = true;\r\n          loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n}\r\n","<div class=\"splash\">\r\n<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons>\r\n            <ion-back-button defaultHref=\"/tab1\" (click)=\"dismiss()\" style=\"color: white;\"></ion-back-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>   \r\n<ion-content no-bounce>\r\n    <h1>Create Post</h1>\r\n    <h3>\r\n      Looking for travel advice? Want to share something interesting about a\r\n      destination? Let's hear it!\r\n    </h3>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-textarea\r\n              [(ngModel)]=\"postText\"\r\n              rows=\"10\"\r\n              placeholder=\"Travel related content*\"\r\n              maxlength=\"250\"\r\n              autocapitalize=\"true\"\r\n              required\r\n            ></ion-textarea>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-item class=\"roundedInput\">\r\n            <ion-label>Location*</ion-label>\r\n            <ionic-selectable\r\n              [(ngModel)]=\"selectedLocation\"\r\n              [items]=\"locationOptions\"\r\n              itemValueField=\"id\"\r\n              itemTextField=\"name\"\r\n              [canSearch]=\"true\"\r\n            >\r\n            </ionic-selectable>\r\n          </ion-item>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n    <div class=\"validation-errors\">\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\r\n        when creating post\r\n      </div>\r\n    </div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"post()\"\r\n        [disabled]=\"!postText || !selectedLocation\"\r\n        >Add post</ion-button\r\n      ></ion-col>\r\n    <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      ></ion-col>\r\n      </ion-row>\r\n    </div>\r\n</ion-content>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MarkLocationPage } from './mark-location.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MarkLocationPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MarkLocationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MarkLocationPageRoutingModule } from './mark-location-routing.module';\r\n\r\nimport { MarkLocationPage } from './mark-location.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MarkLocationPageRoutingModule,\r\n  ],\r\n  declarations: [MarkLocationPage],\r\n})\r\nexport class MarkLocationPageModule {}\r\n","import { Component, Input, NgZone } from '@angular/core';\r\nimport { AccountsService, MarkLocationsRequest } from 'src/app/backend/clients';\r\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\r\nimport { Map } from 'src/app/objects/map';\r\nimport { LoadingController, ModalController } from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mark-location',\r\n  templateUrl: './mark-location.page.html',\r\n  styleUrls: ['./mark-location.page.scss'],\r\n})\r\nexport class MarkLocationPage {\r\n  // Data passed in by componentProps\r\n  @Input() selectionMode: MapSelectionMode;\r\n  public locationRequest = {\r\n    locations: {},\r\n  } as MarkLocationsRequest;\r\n  private map: Map;\r\n  public titleTextVisited = 'Where have you visited?';\r\n  public titleTextToVisit = 'Bucketlist';\r\n  public subtitleTextVisited = `Show your friends (and yourself) where you've been!`;\r\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\r\n  public displayVisitedText = true;\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController,\r\n    private loadingController: LoadingController,\r\n    private zone: NgZone,\r\n    private accountService: AccountsService\r\n  ) {}\r\n\r\n  async ionViewWillEnter() {\r\n    this.map = new Map(this.zone);\r\n    this.map.addMapToDiv(this.selectionMode, 'mark-map');\r\n\r\n    if (this.selectionMode === MapSelectionMode.TO_VISIT) {\r\n      this.displayVisitedText = false;\r\n    }\r\n\r\n    const userLocations = this.accountService.storedUserLocations;\r\n\r\n    const loading = await this.loadingController.create({\r\n      // duration: 2000,\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    this.zone.run(() => {\r\n      userLocations.forEach(location => {\r\n        this.map.changeVisitStatus(location.fkLocation.locationCode, location.status, true);\r\n      });\r\n      loading.dismiss();\r\n    });\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    this.map.destroyMap();\r\n  }\r\n\r\n  mapLocationsToRequest() {\r\n    this.map.changedAreas.forEach((location) => {\r\n      this.locationRequest.locations[location.locationId] = location.status;\r\n    });\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.mapLocationsToRequest();\r\n    this.accountService\r\n      .accountUpdateLocationsPost(this.locationRequest)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        (res) => {\r\n          this.dismiss();\r\n        }\r\n        // (error) => {\r\n        //   this.hasError = true;\r\n        //   this.error = 'An unexpected error has occurred.';\r\n        // }\r\n      );\r\n  }\r\n}\r\n","<div class=\"splash\">\r\n<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-grid class=\"header-grid\">\r\n      <ion-row class=\"ion-align-items-baseline\">\r\n        <ion-col class=\"ion-justify-content-start\">\r\n          <ion-buttons>\r\n            <ion-back-button defaultHref=\"/tab1\" (click)=\"dismiss()\" style=\"color: beige;\"></ion-back-button>\r\n          </ion-buttons>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-header>  \r\n     \r\n    \r\n<ion-content no-bounce>\r\n    <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\r\n    <h3>\r\n      Click a location on the map to zoom to it. Double click the location to\r\n      select/deselect it.\r\n    </h3>\r\n    <div id=\"mark-map\" class=\"chartdiv\"></div>\r\n    <div class=\"button-div\">\r\n      <ion-row>\r\n        <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        >Update my map</ion-button\r\n      >\r\n      </ion-col>\r\n      <ion-col>\r\n      <ion-button\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"dismiss()\"\r\n        >Cancel</ion-button\r\n      >\r\n      </ion-col>\r\n      </ion-row>\r\n    </div>\r\n</ion-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPage } from './add.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPageRoutingModule } from './add-routing.module';\r\n\r\nimport { AddPage } from './add.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, AddPageRoutingModule],\r\n  declarations: [AddPage],\r\n})\r\nexport class AddPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { MarkLocationPage } from '../../mark-location/mark-location.page';\r\nimport { AddPostPage } from '../../add-post/add-post.page';\r\nimport { AddPostImagePage } from '../../add-post-image/add-post-image.page';\r\n\r\n@Component({\r\n  selector: 'add-modal',\r\n  templateUrl: './add.page.html',\r\n  styleUrls: ['./add.page.scss'],\r\n})\r\nexport class AddPage {\r\n  constructor(public router: Router, private modalCtrl: ModalController) {}\r\n\r\n  async markLocationsToVisit() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: MarkLocationPage,\r\n      componentProps: {\r\n        selectionMode: MapSelectionMode.TO_VISIT,\r\n      },\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async markVisitedLocations() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: MarkLocationPage,\r\n      componentProps: {\r\n        selectionMode: MapSelectionMode.VISITED,\r\n      },\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addNewPost() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: AddPostPage,\r\n      componentProps: {},\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addNewImage() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: AddPostImagePage,\r\n      componentProps: {},\r\n    });\r\n    return await modal.present();\r\n  }\r\n}\r\n","<ion-content lines=\"none\" [scrollY]=\"true\">\r\n  <ion-item lines=\"none\"><b>Mark Location</b></ion-item>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/visitedIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col size=\"10\" (click)=\"markVisitedLocations()\"\r\n          ><b>Visited</b></ion-col\r\n        >\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/toVisitIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col size=\"10\" (click)=\"markLocationsToVisit()\"\r\n          ><b>Wants to visit</b></ion-col\r\n        >\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-item lines=\"none\"><b>Add Post</b></ion-item>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/pictureIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col (click)=\"addNewImage()\" size=\"10\"><b>Image</b></ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n  <ion-card>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <img src=\"../../../../assets/UI/postIcon.svg\" />\r\n        </ion-col>\r\n        <ion-col (click)=\"addNewPost()\" size=\"10\"><b>Post</b></ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ForgotPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\r\nimport { AccountsService } from 'src/app/backend/clients/api/accounts.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n  userEmail = '';\r\n\r\n  constructor(\r\n    private accountService: AccountsService,\r\n    private modalController: ModalController,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async closeModal() {\r\n    await this.modalController.dismiss();\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.accountService.PasswordRecover(this.userEmail).then(() =>\r\n      this.closeModal()\r\n    );\r\n  }\r\n}\r\n","<ion-content [scrollY]=\"false\">\r\n  <div class=\"center-any-object\">\r\n    <h3 >Reset Password</h3>\r\n  </div>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-item class=\"roundedInput\">\r\n          <ion-input\r\n            autocapitalize=\"true\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            [(ngModel)]=\"userEmail\"\r\n            required\r\n          ></ion-input>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button class=\"reset-button\" expand=\"block\" (click)=\"onSubmit()\"\r\n          >Submit</ion-button\r\n        >\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-button\r\n          color=\"medium\"\r\n          expand=\"block\"\r\n          (click)=\"closeModal()\"\r\n          >Close</ion-button\r\n        >\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MapFilterPage } from './map-filter.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MapFilterPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MapFilterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MapFilterPageRoutingModule } from './map-filter-routing.module';\r\n\r\nimport { MapFilterPage } from './map-filter.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Ng2SearchPipeModule,\r\n    MapFilterPageRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [MapFilterPage],\r\n})\r\nexport class MapFilterPageModule {}\r\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { Map } from '../../../objects/map';\nimport { MapSelectionMode } from '../../../objects/enums/map-selection-mode';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { AccountsService } from 'src/app/backend/clients';\nimport  * as data from  '../../../objects/location-json/json/countries.json';\nimport {ModalService} from '../../../services/modal.service';\n\n@Component({\n  selector: 'map-filter',\n  templateUrl: './map-filter.page.html',\n  styleUrls: ['./map-filter.page.scss'],\n})\nexport class MapFilterPage {\n  private map: Map;\n  public selectionMode: MapSelectionMode = MapSelectionMode.FILTER;\n  public filter = '';\n  public selectedLocation: string;\n\n  \n  data: any;\n  country: any;\n  searchTerm: any;\n  filterTerm: string;\n   countries = (data as any).default;\n  mapvalue: any;\n  hide: boolean;\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private accountService: AccountsService,\n    private zone: NgZone,\n    public myservice: ModalService,\n    private navParams: NavParams\n  ) {\n    this.hide = false;\n  }\n\n  dataas(data) {\n    this.hide = false;\n    this.map.zoomToLocation(data.id);\n  }\n\n  searchvalue() {\n    this.hide = true;\n    this.mapvalue = this.filterTerm;\n    this.map.zoomToLocation(this.mapvalue);\n  }\n\n  async ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'filter-map');\n\n    this.filter = this.navParams.data.filter;\n\n    let userLocations;\n    if (this.navParams.data.userLocations) {\n      userLocations = JSON.parse(this.navParams.data.userLocations);\n    } else {\n      userLocations = this.accountService.storedUserLocations;\n    }\n\n    const loading = await this.loadingController.create({\n      // duration: 2000,\n    });\n\n    await loading.present();\n\n    this.zone.run(() => {\n      userLocations.forEach(location => {\n        this.map.changeVisitStatus(location.fkLocation.locationCode, location.status, true);\n      });\n      loading.dismiss();\n    });\n\n  }\n\n  show(e) {\n    this.myservice.dis = e;\n  }\n\n  async ionViewWillLeave() {\n    await this.closeModal();\n  }\n\n  async resetFilter() {\n    this.filter = '';\n    await this.closeModal();\n  }\n\n  async filterSubmit() {\n    if (this.map.selectedArr.length > 0) {\n      this.filter = this.map.changedAreas[0].locationId;\n    }\n    await this.closeModal();\n  }\n\n  async closeModal() {\n    const loading = await this.loadingController.create({\n      // duration: 2000,\n    });\n    await loading.present();\n    const onClosedData = this.filter;\n    this.map.destroyMap();\n    loading.dismiss();\n    await this.modalController.dismiss(onClosedData);\n  }\n}\n","<ion-content [scrollY]=\"false\">\r\n  <div class=\"map-search-container\">\r\n    <ion-searchbar (focusout)=\"show(true)\"  (search)=\"searchvalue()\" (focusin)=\"show(false)\"  spellcheck=\"true\"  [(ngModel)]=\"filterTerm\"></ion-searchbar>\r\n    <ion-list  *ngIf=\"hide == true\">\r\n      <ion-item *ngFor=\"let data of countries.Countries | filter:filterTerm\" (click)=\"dataas(data)\">\r\n       \r\n        <ion-label>{{data.name}}</ion-label>\r\n      \r\n      </ion-item>\r\n    </ion-list>\r\n  </div>\r\n  <div id=\"filter-map\" class=\"chartdiv\" onload=\"onLoad()\"></div>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button color=\"medium\" expand=\"block\" (click)=\"resetFilter()\"\r\n          >Reset</ion-button\r\n        >\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-button\r\n          class=\"filter-button\"\r\n          expand=\"block\"\r\n          (click)=\"filterSubmit()\"\r\n          >Filter</ion-button\r\n        >\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SearchPage } from './search.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SearchPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SearchPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SearchPageRoutingModule } from './search-routing.module';\r\n\r\nimport { SearchPage } from './search.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, SearchPageRoutingModule],\r\n  declarations: [SearchPage],\r\n})\r\nexport class SearchPageModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { UserService } from 'src/app/backend/clients';\r\nimport { take } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SlimUserResponse } from 'src/app/backend/clients/model/slimUserResponse';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'search',\r\n  templateUrl: './search.page.html',\r\n  styleUrls: ['./search.page.scss'],\r\n})\r\nexport class SearchPage implements OnInit {\r\n  data: any;\r\n  constructor(\r\n    public viewCtrl: ModalController,\r\n    public userService: UserService,\r\n    private zone: NgZone,\r\n    private router: Router\r\n  ) {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  people: BehaviorSubject<SlimUserResponse[]> = new BehaviorSubject([]);\r\n  searchQuery = '';\r\n\r\n  ngOnInit() {\r\n    // fetch('./app/objects/location-json/json/countries.json').then(res => res.json())\r\n    // .then(json => {\r\n    //   this.data = json;\r\n    //   console.log(json);\r\n    // });\r\n  \r\n  }\r\n\r\n  search() {\r\n    this.userService\r\n      .userSearchQueryGet(this.searchQuery)\r\n      .pipe(take(1))\r\n      .subscribe((users) => {\r\n        this.people.next(users);\r\n      });\r\n  }\r\n\r\n  goToProfile(user: SlimUserResponse) {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      skipLocationChange: true,\r\n      state: {\r\n        userId: user.id,\r\n      },\r\n    };\r\n    const onClosedData = user.id;\r\n    this.viewCtrl.dismiss(onClosedData);\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n\r\n  dismiss() {\r\n    this.viewCtrl.dismiss();\r\n  }\r\n}\r\n","<ion-toolbar>\r\n  <ion-buttons slot=\"end\">\r\n    <ion-button large (click)=\"dismiss()\" slot=\"end\">\r\n      <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\r\n    </ion-button>\r\n  </ion-buttons>\r\n</ion-toolbar>\r\n\r\n<ion-searchbar\r\n  spellcheck=\"true\"\r\n  (search)=\"search()\"\r\n  [(ngModel)]=\"searchQuery\"\r\n></ion-searchbar>\r\n<ion-content>\r\n  <ion-virtual-scroll [items]=\"people | async\">\r\n    <ion-card\r\n      (click)=\"goToProfile(item)\"\r\n      *virtualItem=\"let item; let itemBounds = bounds;\"\r\n    >\r\n      <ion-grid class=\"search-grid\">\r\n        <ion-row>\r\n          <ion-col class=\"ion-align-self-center\">\r\n            <ion-row class=\"ion-align-items-center\">\r\n              <ion-col>\r\n                <img [src]=\"item.avi\" class=\"user-pic img-center\" />\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n          <ion-col size=\"1.5\" class=\"ion-align-self-center\">\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-text color=\"dark\"\r\n                  >{{item.firstName}} {{item.lastName}}</ion-text\r\n                >\r\n              </ion-col>\r\n            </ion-row>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-text>{{item.residenceLocation}}</ion-text>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-card>\r\n  </ion-virtual-scroll>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserSettingsPage } from './user-settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserSettingsPage,\r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserSettingsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserSettingsPageRoutingModule } from './user-settings-routing.module';\r\n\r\nimport { UserSettingsPage } from './user-settings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    UserSettingsPageRoutingModule,\r\n  ],\r\n  declarations: [UserSettingsPage],\r\n})\r\nexport class UserSettingsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Photo, Camera, CameraResultType } from '@capacitor/camera';\r\nimport { LoadingController, ModalController, NavParams ,NavController} from '@ionic/angular';\r\nimport { take } from 'rxjs/operators';\r\nimport { Router,  } from '@angular/router';\r\n\r\nimport {\r\n  AccountsService,\r\n  UserResponse,\r\n} from 'src/app/backend/clients';\r\n\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.page.html',\r\n  styleUrls: ['./user-settings.page.scss'],\r\n})\r\nexport class UserSettingsPage implements OnInit {\r\n  userImage = '../../../assets/UI/profilePicUpload.svg';\r\n\r\n  aboutForm: FormGroup;\r\n\r\n  image: Photo;\r\n\r\n  blob: Blob = undefined;\r\n\r\n  user: UserResponse;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public loadingController: LoadingController,\r\n    private route: ActivatedRoute,\r\n    public navCtrl: NavController,\r\n    private modalController: ModalController,\r\n    private accountService: AccountsService,\r\n  ) {\r\n    // this.route.params.subscribe(params => {\r\n      this.route.params.subscribe(params => {\r\n        this.user = params;\r\n        console.log(params);\r\n      });\r\n    // this.user = this.navParams.data.user;\r\n    // this.userImage = this.user.avi;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const firstName = new FormControl('');\r\n    const lastName = new FormControl('');\r\n    const birthPlace = new FormControl('');\r\n    const residence = new FormControl('');\r\n    const education = new FormControl('');\r\n    const title = new FormControl('');\r\n    this.aboutForm = new FormGroup({\r\n      firstName,\r\n      lastName,\r\n      birthPlace,\r\n      residence,\r\n      education,\r\n      title,\r\n    });\r\n  }\r\n  back(){\r\n    this.router.navigateByUrl('/user-profile');\r\n  }\r\n  async onSubmit() {\r\n    const loading = await this.loadingController.create({\r\n      // duration: 2000,\r\n    });\r\n    await loading.present();\r\n\r\n    const firstName = this.aboutForm.controls.firstName.value === ''\r\n      ? this.user.firstname\r\n      : this.aboutForm.controls.firstName.value;\r\n    const lastName = this.aboutForm.controls.lastName.value === ''\r\n      ? this.user.lastname\r\n      : this.aboutForm.controls.lastName.value;\r\n    const title = this.aboutForm.controls.title.value === ''\r\n      ? this.user.title\r\n      : this.aboutForm.controls.title.value;\r\n    const education = this.aboutForm.controls.education.value === ''\r\n      ? this.user.education\r\n      : this.aboutForm.controls.education.value;\r\n    const birthPlace = this.aboutForm.controls.birthPlace.value === ''\r\n      ? this.user.birthLocation\r\n      : this.aboutForm.controls.birthPlace.value;\r\n    const residence = this.aboutForm.controls.residence.value === ''\r\n      ? this.user.residenceLocation\r\n      : this.aboutForm.controls.residence.value;\r\n\r\n    // todo create a forkjoin or something here to make these run together\r\n    this.accountService\r\n      .accountUpdatePost(\r\n        firstName,\r\n        lastName,\r\n        title,\r\n        education,\r\n        birthPlace,\r\n        residence,\r\n      )\r\n      .pipe(take(1))\r\n      .subscribe(async () => {\r\n        if (this.blob !== undefined) {\r\n          this.accountService\r\n            .accountUpdateProfileImagePost(this.blob)\r\n            .pipe(take(1))\r\n            .subscribe(() => {});\r\n        }\r\n        await loading.dismiss();\r\n        // this.dismiss();\r\n       // alert('hii');\r\n        this.router.navigateByUrl('/user-profile');\r\n        // this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n      });\r\n  }\r\n\r\n  b64toBlob(dataURI) {\r\n    const byteString = atob(dataURI.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i += 1) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\r\n  }\r\n\r\n  async getUserImage() {\r\n    this.image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: CameraResultType.DataUrl,\r\n    });\r\n    // image.webPath will contain a path that can be set as an image src.\r\n    // You can access the original file using image.path, which can be\r\n    // passed to the Filesystem API to read the raw data of the image,\r\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\r\n    const imageUrl = this.image.dataUrl;\r\n    // Can be set to the src of an image now\r\n    this.userImage = imageUrl;\r\n    this.b64toBlob(this.image.dataUrl);\r\n  }\r\n\r\n  dismiss() {\r\n    // this.modalController.dismiss();\r\n  }\r\n\r\n  async logout() {\r\n    await this.accountService.logout();\r\n    this.dismiss();\r\n  }\r\n}\r\n","<ion-content no-bounce>\r\n  <div class=\"splash\">\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"secondary\">\r\n          <ion-button color=\"dark\" (click)=\"back()\">\r\n            <ion-icon name=\"arrow-back\" ></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button color=\"dark\" (click)=\"logout()\">\r\n            <ion-icon name=\"log-out-outline\"></ion-icon>\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <h1>Update profile</h1>\r\n    <form [formGroup]=\"aboutForm\" (ngSubmit)=\"onSubmit()\">\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col size=\"3\">\r\n            <ion-avatar>\r\n              <img (click)=\"getUserImage()\" [src]=\"userImage\" />\r\n            </ion-avatar>\r\n          </ion-col>\r\n          <ion-col>\r\n            <h3>Change your profile pic</h3>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">First Name</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.firstname\"\r\n                type=\"text\"\r\n                formControlName=\"firstName\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">Last Name</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.lastname\"\r\n                type=\"text\"\r\n                formControlName=\"lastName\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">Birthplace</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.birthLocation\"\r\n                type=\"text\"\r\n                formControlName=\"birthPlace\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">Current Residence</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.residenceLocation\"\r\n                type=\"text\"\r\n                formControlName=\"residence\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">Education</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.education\"\r\n                type=\"text\"\r\n                formControlName=\"education\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n        <ion-row class=\"bottomRow\">\r\n          <ion-col>\r\n            <ion-item class=\"roundedInput\">\r\n              <ion-label position=\"stacked\">Title or Employment</ion-label>\r\n              <ion-input\r\n                autocapitalize=\"true\"\r\n                [placeholder]=\"user.title\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                required\r\n              ></ion-input>\r\n            </ion-item>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n      <div class=\"button-div\">\r\n        <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\"\r\n          >Update</ion-button\r\n        >\r\n      </div>\r\n    </form>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserTimelinePage } from './user-timeline.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserTimelinePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserTimelinePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserTimelinePageRoutingModule } from './user-timeline-routing.module';\r\n\r\nimport { UserTimelinePage } from './user-timeline.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    UserTimelinePageRoutingModule,\r\n  ],\r\n  declarations: [UserTimelinePage],\r\n})\r\nexport class UserTimelinePageModule {}\r\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  IonInfiniteScroll,\r\n  LoadingController,\r\n  ModalController,\r\n  NavParams,\r\n} from '@ionic/angular';\r\nimport { SearchPage } from '../modals/search/search.page';\r\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\r\nimport { PostService } from 'src/app/backend/clients';\r\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\r\nimport { take } from 'rxjs/operators';\r\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\r\n@Component({\r\n  selector: 'user-timeline',\r\n  templateUrl: './user-timeline.page.html',\r\n  styleUrls: ['./user-timeline.page.scss'],\r\n})\r\nexport class UserTimelinePage  {\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private loadingController: LoadingController,\r\n    private accountService: AccountsService,\r\n    private postService: PostService,\r\n    private zone: NgZone,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private imgview: NgxIonicImageViewerModule\r\n  ) {\r\n     this.route.queryParams.subscribe(params => {\r\n      if (this.router.getCurrentNavigation().extras.state) {\r\n        this.selectedUserId = this.router.getCurrentNavigation().extras.state.userId;\r\n        this.userLocations = this.router.getCurrentNavigation().extras.state.userLocations;\r\n        this.refreshPosts();\r\n      }\r\n      console.log(this.selectedUserId);\r\n    });\r\n  }\r\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n\r\n  posts: PostApi[] = [];\r\n  pageNumber = 1;\r\n  morePages = false;\r\n  filter = '';\r\n  selectedUserId = '';\r\n  userLocations = '';\r\n  sliderOpt = {\r\n    zoom: {\r\n      maxRatio: 1,\r\n    },\r\n  };\r\n\r\n  getPosts(event?: any) {\r\n    if (this.morePages) {\r\n      this.postService\r\n        .postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId)\r\n        .pipe(take(1))\r\n        .subscribe((res) => {\r\n          this.morePages = res.hasNextPage;\r\n          this.pageNumber = res.pageIndex;\r\n\r\n          // TODO The posts shouldn't be overwritten here but rather appended... not working though\r\n          if (this.posts.length === 0) {\r\n            this.posts = [];\r\n          } else {\r\n            const oldposts = this.posts;\r\n            this.posts = [];\r\n            const oldResLen = oldposts.length;\r\n            for (let i = 0; i < oldResLen; i++) {\r\n              this.posts.push(oldposts[i]);\r\n            }\r\n          }\r\n          const resLen = res.items.length;\r\n          for (let i = 0; i < resLen; i++) {\r\n            this.posts.push(res.items[i]);\r\n          }\r\n          // this.posts = res.items;\r\n          if (event) {\r\n            event.target.complete();\r\n          }\r\n        });\r\n    } else {\r\n      this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\r\n    }\r\n  }\r\n\r\n  refreshPosts(event?: any) {\r\n    this.postService\r\n      .postsPageGet(1, this.filter, this.selectedUserId)\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.morePages = res.hasNextPage;\r\n        this.pageNumber = res.pageIndex;\r\n        this.posts = res.items;\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      });\r\n  }\r\n\r\n  async presentSearchModal() {\r\n    this.router.navigateByUrl('/search');\r\n    // const modal = await this.modalController.create({\r\n    //   component: SearchPage,\r\n    //   componentProps: {},\r\n    //   showBackdrop: true,\r\n    //   cssClass: 'search-modal',\r\n    // });\r\n    // return await modal.present();\r\n  }\r\n\r\n  openProfile() {\r\n    const navigationExtras: NavigationExtras = {\r\n      replaceUrl: true,\r\n      skipLocationChange: true,\r\n      state: {\r\n        userId: this.accountService.getUserId(),\r\n      },\r\n    };\r\n    this.zone.run(() => {\r\n      this.router.navigateByUrl('/user-profile', navigationExtras);\r\n    });\r\n  }\r\n\r\n  async presentMapFilter() {\r\n    const modal = await this.modalController.create({\r\n      component: MapFilterPage,\r\n      showBackdrop: true,\r\n      cssClass: 'filter-modal',\r\n      componentProps: {\r\n        filter: this.filter,\r\n        userLocations: this.userLocations\r\n      },\r\n    });\r\n\r\n    modal.onDidDismiss().then(async (dataReturned) => {\r\n      if (dataReturned !== null) {\r\n        this.filter = dataReturned.data;\r\n        this.refreshPosts();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  dismiss() {\r\n    this.router.navigateByUrl('/user-profile');\r\n  }\r\n}\r\n","<ion-header style=\"background-color: #128c7e\" class=\"ion-no-border\">\r\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button slot=\"start\" large (click)=\"dismiss()\">\r\n        <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <!-- <ion-buttons slot=\"end\">\r\n      <ion-button slot=\"end\" (click)=\"presentSearchModal()\">\r\n        <img class=\"img-center\" src=\"../../../assets/UI/search-outline.svg\" />\r\n      </ion-button>\r\n    </ion-buttons> -->\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"false\" color=\"light\">\r\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\r\n    <ion-refresher-content\r\n      pullingText=\"Pull to refresh\"\r\n      refreshingSpinner=\"circles\"\r\n      refreshingText=\"Refreshing...\"\r\n    >\r\n    </ion-refresher-content>\r\n  </ion-refresher>\r\n  <post [posts]=\"posts\"></post>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\r\n    <ion-infinite-scroll-content\r\n      loadingSpinner=\"circles\"\r\n      loadingText=\"Getting more posts...\"\r\n    >\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>\r\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\r\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\r\n    <img src=\"../../assets/UI/FilterClosed.svg\" />\r\n  </ion-button>\r\n</ion-fab>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dateAgo',\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      const now = new Date().toUTCString();\r\n      const seconds = Math.abs(\r\n        (new Date(now).getTime() - new Date(value + 'Z').getTime()) / 1000\r\n      ); // appending Z lets the date know its UTC\r\n\r\n      if (seconds < 29) {\r\n        // less than 30 seconds ago will show as 'Just now'\r\n        return 'Just now';\r\n      }\r\n      const intervals = {\r\n        day: 86400,\r\n        hour: 3600,\r\n        minute: 60,\r\n        second: 1,\r\n      };\r\n      let counter;\r\n      // tslint:disable-next-line: forin\r\n      for (const i in intervals) {\r\n        counter = Math.floor(seconds / intervals[i]);\r\n\r\n        if (Math.floor(seconds / 86400) > 1) {\r\n          const date = new Date(value);\r\n          const month = date.toLocaleString('default', { month: 'long' });\r\n          return `${month} ${date.getDate()}`;\r\n        }\r\n\r\n        if (counter > 0) {\r\n          if (counter === 1) {\r\n            return counter + ' ' + i + ' ago'; // singular (1 hour ago)\r\n          } else {\r\n            return counter + ' ' + i + 's ago'; // plural (2 hours ago)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { zip } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n  private modals: any[] = [];\r\n  public dis: boolean;\r\n  constructor() {}\r\n\r\n  add(modal: any) {\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    this.modals = this.modals.filter((x) => x.id !== id);\r\n  }\r\n\r\n  open(id: string) {\r\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\r\n    modal.present();\r\n  }\r\n\r\n  close(id: string) {\r\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\r\n    modal.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PostComponent } from '../components/post/post.component';\r\nimport { CardFlipComponent } from '../components/card-flip/card-flip.component';\r\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule],\r\n  declarations: [PostComponent, CardFlipComponent, DateAgoPipe],\r\n  providers: [],\r\n  exports: [PostComponent, CardFlipComponent, DateAgoPipe],\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyDpx-hQIOXVBbNfGRaFQQTx-vzVwKwpA4Y',\r\n    authDomain: 'visit-4efb7.firebaseapp.com',\r\n    projectId: 'visit-4efb7',\r\n    storageBucket: 'visit-4efb7.appspot.com',\r\n    messagingSenderId: '227659578598',\r\n    appId: '1:227659578598:web:94cdae4520ab27359d8f27',\r\n    measurementId: 'G-P6HNG7BB8S',\r\n  },\r\n};\r\n\r\nexport const BASE_PATH = 'https://visit-service.azurewebsites.net';\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.log(err));\r\n\r\n// Call the element loader after the platform has been bootstrapped\r\ndefineCustomElements(window);\r\n"],"sourceRoot":"webpack:///"}
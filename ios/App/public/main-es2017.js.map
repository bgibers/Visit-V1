{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/backend/clients/api.module.ts","./src/app/backend/clients/api/accounts.service.ts","./src/app/backend/clients/api/api.ts","./src/app/backend/clients/api/blobStorage.service.ts","./src/app/backend/clients/api/devops.service.ts","./src/app/backend/clients/api/post.service.ts","./src/app/backend/clients/api/postTestData.service.ts","./src/app/backend/clients/api/tag.service.ts","./src/app/backend/clients/api/user.service.ts","./src/app/backend/clients/api/userLocation.service.ts","./src/app/backend/clients/api/userMessage.service.ts","./src/app/backend/clients/configuration.ts","./src/app/backend/clients/encoder.ts","./src/app/backend/clients/index.ts","./src/app/backend/clients/model/addressFamily.ts","./src/app/backend/clients/model/callingConventions.ts","./src/app/backend/clients/model/eventAttributes.ts","./src/app/backend/clients/model/fieldAttributes.ts","./src/app/backend/clients/model/genericParameterAttributes.ts","./src/app/backend/clients/model/layoutKind.ts","./src/app/backend/clients/model/memberTypes.ts","./src/app/backend/clients/model/methodAttributes.ts","./src/app/backend/clients/model/methodImplAttributes.ts","./src/app/backend/clients/model/modelValidationState.ts","./src/app/backend/clients/model/models.ts","./src/app/backend/clients/model/parameterAttributes.ts","./src/app/backend/clients/model/propertyAttributes.ts","./src/app/backend/clients/model/securityRuleSet.ts","./src/app/backend/clients/model/typeAttributes.ts","./src/app/backend/clients/variables.ts","./src/app/backend/models/httpConfigInterceptor.ts","./src/app/backend/services/AuthGuard.service.ts","./src/app/components/card-flip/card-flip.component.ts","./src/app/components/card-flip/card-flip.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/objects/enums/map-selection-mode.ts","./src/app/objects/location-json/location.selector.ts","./src/app/objects/map.ts","./src/app/pages/add-post-image/add-post-image-routing.module.ts","./src/app/pages/add-post-image/add-post-image.module.ts","./src/app/pages/add-post-image/add-post-image.page.ts","./src/app/pages/add-post-image/add-post-image.page.html","./src/app/pages/add-post/add-post-routing.module.ts","./src/app/pages/add-post/add-post.module.ts","./src/app/pages/add-post/add-post.page.ts","./src/app/pages/add-post/add-post.page.html","./src/app/pages/mark-location/mark-location-routing.module.ts","./src/app/pages/mark-location/mark-location.module.ts","./src/app/pages/mark-location/mark-location.page.ts","./src/app/pages/mark-location/mark-location.page.html","./src/app/pages/modals/add/add-routing.module.ts","./src/app/pages/modals/add/add.module.ts","./src/app/pages/modals/add/add.page.ts","./src/app/pages/modals/add/add.page.html","./src/app/pages/modals/forgot-password/forgot-password-routing.module.ts","./src/app/pages/modals/forgot-password/forgot-password.module.ts","./src/app/pages/modals/forgot-password/forgot-password.page.ts","./src/app/pages/modals/forgot-password/forgot-password.page.html","./src/app/pages/modals/map-filter/map-filter-routing.module.ts","./src/app/pages/modals/map-filter/map-filter.module.ts","./src/app/pages/modals/map-filter/map-filter.page.ts","./src/app/pages/modals/map-filter/map-filter.page.html","./src/app/pages/modals/search/search-routing.module.ts","./src/app/pages/modals/search/search.module.ts","./src/app/pages/modals/search/search.page.ts","./src/app/pages/modals/search/search.page.html","./src/app/pages/user-settings/user-settings-routing.module.ts","./src/app/pages/user-settings/user-settings.module.ts","./src/app/pages/user-settings/user-settings.page.ts","./src/app/pages/user-settings/user-settings.page.html","./src/app/pages/user-timeline/user-timeline-routing.module.ts","./src/app/pages/user-timeline/user-timeline.module.ts","./src/app/pages/user-timeline/user-timeline.page.ts","./src/app/pages/user-timeline/user-timeline.page.html","./src/app/pipes/date-ago.pipe.ts","./src/app/services/modal.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'post-register-about',\n    pathMatch: 'full',\n  },\n  {\n    path: 'tab1',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/news-feed/news-feed.module').then(\n            (m) => m.NewsFeedPageModule\n          ),\n        canActivate: [AuthGuard],\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'tab2',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/notifications-page/notifications.module').then(\n            (m) => m.NotificationsPageModule\n          ),\n        canActivate: [AuthGuard],\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'search',\n    loadChildren: () =>\n      import('./pages/modals/search/search.module').then(\n        (m) => m.SearchPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add',\n    loadChildren: () =>\n      import('./pages/modals/add/add.module').then((m) => m.AddPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'map-filter',\n    loadChildren: () =>\n      import('./pages/modals/map-filter/map-filter.module').then(\n        (m) => m.MapFilterPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-profile',\n    loadChildren: () =>\n      import('./pages/user-profile/user-profile.module').then(\n        (m) => m.UserProfilePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-timeline',\n    loadChildren: () =>\n      import('./pages/user-timeline/user-timeline.module').then(\n        (m) => m.UserTimelinePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'sign-in',\n    loadChildren: () =>\n      import('./pages/sign-in/sign-in.module').then((m) => m.SignInPageModule),\n  },\n  {\n    path: 'register',\n    loadChildren: () =>\n      import('./pages/register/register.module').then(\n        (m) => m.RegisterPageModule\n      ),\n  },\n  {\n    path: 'post-register-about',\n    loadChildren: () =>\n      import('./pages/post-register-about/post-register-about.module').then(\n        (m) => m.PostRegisterAboutPageModule\n      ),\n  },\n  {\n    path: 'post-register-locations',\n    loadChildren: () =>\n      import(\n        './pages/post-register-locations/post-register-locations.module'\n      ).then((m) => m.PostRegisterLocationsPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'mark-location',\n    loadChildren: () =>\n      import('./pages/mark-location/mark-location.module').then(\n        (m) => m.MarkLocationPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add-post',\n    loadChildren: () =>\n      import('./pages/add-post/add-post.module').then(\n        (m) => m.AddPostPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'add-post-image',\n    loadChildren: () =>\n      import('./pages/add-post-image/add-post-image.module').then(\n        (m) => m.AddPostImagePageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'comments',\n    loadChildren: () =>\n      import('./pages/comments/comments.module').then(\n        (m) => m.CommentsPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'user-settings',\n    loadChildren: () =>\n      import('./pages/user-settings/user-settings.module').then(\n        (m) => m.UserSettingsPageModule\n      ),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => import('./pages/modals/forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\n  },\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { StatusBar, Style } from '@capacitor/status-bar';\nimport {\n  PushNotificationSchema,\n  Token,\n  ActionPerformed,\n  PushNotifications,\n} from '@capacitor/push-notifications';\nimport { FCM } from '@capacitor-community/fcm';\nimport { Capacitor } from '@capacitor/core';\nimport { from } from 'rxjs';\nconst fcm = new FCM();\n\nimport { AddPage } from './pages/modals/add/add.page';\nimport { AccountsService } from './backend/clients/api/accounts.service';\nimport { ModalService } from './services/modal.service';\n\nimport { environment } from 'src/environments/environment';\nimport firebase from 'firebase/app';\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  page: string;\n\n  constructor(\n    private platform: Platform,\n    private userService: AccountsService,\n    public modalController: ModalController,\n    public alertController: AlertController,\n    public router: Router,\n    public zone: NgZone,\n    public modalSvc: ModalService\n  ) {\n    this.platform.ready().then(() => {\n      this.initializeApp();\n    });\n  }\n\n  ngOnInit() {}\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (Capacitor.isPluginAvailable('StatusBar')) {\n        StatusBar.setStyle({ style: Style.Default });\n      }\n\n      if (Capacitor.isPluginAvailable('SplashScreen')) {\n        SplashScreen.hide();\n      }\n\n      if (Capacitor.isPluginAvailable('PushNotifications')) {\n        this.registerPush();\n      }\n\n      this.zone.run(() => {\n        if (this.userService.isLoggedIn) {\n          this.router.navigate(['tab1']);\n        } else {\n          this.router.navigate(['sign-in']);\n        }\n      });\n    });\n\n    firebase.initializeApp(environment.firebaseConfig);\n  }\n\n  private registerPush() {\n    PushNotifications.requestPermissions().then((result) => {\n      if (result.receive === 'granted') {\n        // Register with Apple / Google to receive push via APNS/FCM\n        PushNotifications.register().then(() =>\n          from(\n            fcm\n              .getToken()\n              .then((r) => {\n                this.userService.setFcmToken(r.token);\n              })\n              .catch((err) => {\n                console.log(`FCM Token ERROR: ${JSON.stringify(err)}`);\n              })\n          )\n        );\n      } else {\n        console.log('Push notifications not registered');\n      }\n    });\n\n    PushNotifications.addListener('registration', (token: Token) => {\n      // alert('Push registration success, token: ' + token.value);\n    });\n\n    PushNotifications.addListener('registrationError', (error: any) => {\n      // alert('Error on registration: ' + JSON.stringify(error));\n    });\n\n    PushNotifications.addListener(\n      'pushNotificationReceived',\n      async (notification: PushNotificationSchema) => {\n        console.log(notification.title);\n        this.alert(notification.title, notification.body);\n      }\n    );\n\n    PushNotifications.addListener(\n      'pushNotificationActionPerformed',\n      (notification: ActionPerformed) => {\n        // alert('Push action performed: ' + JSON.stringify(notification));\n      }\n    );\n  }\n\n  async alert(title: string, body: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: body,\n      buttons: [\n        {\n          text: 'OKAY',\n          role: 'cancel',\n          handler: () => {\n            alert.dismiss();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  get showFooter() {\n    if (this.router.url === '/sign-in') {\n      return false;\n    }\n    if (this.router.url === '/register') {\n      return false;\n    }\n    if (this.router.url === '/post-register-about') {\n      return false;\n    }\n    if (this.router.url === '/post-register-locations') {\n      return false;\n    }\n    if (this.router.url === '/comments') {\n      return false;\n    }\n    if (this.modalSvc.dis === false) {\n      return false;\n    }\n    return true;\n  }\n\n  async presentAddModal() {\n    const modal = await this.modalController.create({\n      component: AddPage,\n      showBackdrop: true,\n      swipeToClose: true,\n      cssClass: 'add-modal',\n      backdropDismiss: true,\n    });\n    return await modal.present();\n  }\n}\n","<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n  <ion-tabs>\n    <ion-tab-bar slot=\"bottom\" *ngIf=\"showFooter\">\n      <ion-tab-button tab=\"tab1\">\n        <ion-icon name=\"home-outline\"></ion-icon>\n        <ion-label>Home</ion-label>\n      </ion-tab-button>\n\n      <ion-tab-button tab=\"tab2\">\n        <ion-icon name=\"notifications-outline\"></ion-icon>\n        <ion-label>Notifications</ion-label>\n      </ion-tab-button>\n    </ion-tab-bar>\n  </ion-tabs>\n  <ion-fab horizontal=\"center\" vertical=\"bottom\" *ngIf=\"showFooter\">\n    <ion-fab-button class=\"add-button\" (click)=\"presentAddModal()\">\n      <ion-icon name=\"add\" style=\"height: 50; width: 20\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-app>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SearchPageModule } from './pages/modals/search/search.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPageModule } from './pages/modals/add/add.module';\nimport { MapFilterPageModule } from './pages/modals/map-filter/map-filter.module';\nimport { ForgotPasswordPageModule} from './pages/modals/forgot-password/forgot-password.module';\nimport { UserTimelinePageModule } from './pages/user-timeline/user-timeline.module';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpConfigInterceptor } from './backend/models/httpConfigInterceptor';\nimport { AuthGuard } from './backend/services/AuthGuard.service';\nimport { AccountsService, UserService, PostService } from './backend/clients';\nimport { MarkLocationPageModule } from './pages/mark-location/mark-location.module';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { LocationSelector } from './objects/location-json/location.selector';\nimport { AddPostPageModule } from './pages/add-post/add-post.module';\nimport { AddPostImagePageModule } from './pages/add-post-image/add-post-image.module';\nimport { UserSettingsPageModule } from './pages/user-settings/user-settings.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\nimport { SignInWithApple } from '@ionic-native/sign-in-with-apple/ngx';\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    SearchPageModule,\n    AddPageModule,\n    HttpClientModule,\n    UserTimelinePageModule,\n    MapFilterPageModule,\n    MarkLocationPageModule,\n    AddPostPageModule,\n    UserSettingsPageModule,\n    AddPostImagePageModule,\n    ForgotPasswordPageModule,\n    IonicSelectableModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n  ],\n  providers: [\n    AuthGuard,\n    AccountsService,\n    UserService,\n    PostService,\n    LocationSelector,\n    SignInWithApple,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfigInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AccountsService } from './api/accounts.service';\nimport { BlobStorageService } from './api/blobStorage.service';\nimport { DevopsService } from './api/devops.service';\nimport { PostService } from './api/post.service';\nimport { PostTestDataService } from './api/postTestData.service';\nimport { TagService } from './api/tag.service';\nimport { UserService } from './api/user.service';\nimport { UserLocationService } from './api/userLocation.service';\nimport { UserMessageService } from './api/userMessage.service';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [\n    AccountsService,\n    BlobStorageService,\n    DevopsService,\n    PostService,\n    PostTestDataService,\n    TagService,\n    UserService,\n    UserLocationService,\n    UserMessageService,\n  ],\n})\nexport class ApiModule {\n  public static forRoot(\n    configurationFactory: () => Configuration\n  ): ModuleWithProviders<ApiModule> {\n    return {\n      ngModule: ApiModule,\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\n    };\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'ApiModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!http) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule! \\n' +\n          'See also https://github.com/angular/angular/issues/20575'\n      );\n    }\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport {\n  Inject, Injectable, NgZone, Optional,\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\n\nimport { Observable, BehaviorSubject, from } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { BASE_PATH } from 'src/environments/environment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\nimport { Capacitor } from '@capacitor/core';\nimport { MarkLocationsRequest } from '../model/markLocationsRequest';\nimport { Configuration } from '../configuration';\nimport { RegisterRequest } from '../model/registerRequest';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\nimport { AlertController } from '@ionic/angular';\n\nimport { SignInWithApple, AppleSignInResponse, AppleSignInErrorResponse, ASAuthorizationAppleIDRequest } from '@ionic-native/sign-in-with-apple/ngx';\nimport { SsoUser } from '../model/ssoUser';\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class AccountsService {\n  protected basePath = BASE_PATH;\n\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n\n  public configuration = new Configuration();\n\n  public authSubject = new BehaviorSubject(false);\n\n  public userData: any;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration,\n    private router: Router,\n    private zone: NgZone,\n    private storage: Storage,\n    private alertController: AlertController,\n    private signInWithApple: SignInWithApple,\n    private ngFireAuth: AngularFireAuth,\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n\n    this.ngFireAuth.authState.subscribe((user) => {\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        JSON.parse(localStorage.getItem('user'));\n        this.getFcmToken().subscribe((token) => {\n          console.log(`FCM:${token}`);\n          this.accountUpdateFcmDeviceIdPost(token)\n            .pipe(take(1))\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => console.log(err),\n            );\n        });\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  public async logout() {\n    return this.ngFireAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.zone.run(() => {\n        this.router.navigate(['sign-in']);\n      });\n    });\n  }\n\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null);\n  }\n\n  // Email verification when new user register\n  SendVerificationMail() {\n    return from(firebase\n      .auth()\n      .currentUser.sendEmailVerification()\n      .then(() => {\n        this.zone.run(() => {\n          this.router.navigate(['verify-email']);\n        });\n      }));\n  }\n\n  get isEmailVerified(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user.emailVerified !== false;\n  }\n\n  // Recover password\n  PasswordRecover(passwordResetEmail) {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(passwordResetEmail)\n      .then(() => {\n        this.alert(\n          'Success',\n          'Password reset email has been sent, please check your inbox.',\n        );\n      })\n      .catch((error) => {\n        this.alert('Reset error', error);\n      });\n  }\n\n  async alert(title: string, body: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: body,\n      buttons: [\n        {\n          text: 'OKAY',\n          role: 'cancel',\n          handler: () => {\n            alert.dismiss();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async getToken() {\n    try {\n      return await firebase.auth().currentUser.getIdToken();\n    } catch {\n      return '';\n    }\n  }\n\n  getUserId() {\n    return firebase.auth().currentUser.uid;\n  }\n\n  // Login in with email/password\n  login(email, password) {\n    return new Promise<any>((resolve, reject) => {\n      firebase\n        .auth()\n        .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        .then(async () => {\n          await firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(\n              (res) => {\n                if (Capacitor.isNativePlatform()) {\n                  this.getFcmToken()\n                    .pipe(take(1))\n                    .subscribe((token) => {\n                      this.accountUpdateFcmDeviceIdPost(token);\n                      resolve(res);\n                    });\n                } else {\n                  resolve(res);\n                }\n              },\n              (err) => reject(err),\n            );\n        });\n    });\n  }\n\n  loginFacebook() {\n\n  }\n\n  async loginApple(): Promise<SsoUser> {\n      return this.signInWithApple.signin({\n      requestedScopes: [\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeFullName,\n        ASAuthorizationAppleIDRequest.ASAuthorizationScopeEmail\n      ]\n    }).then(async (res: AppleSignInResponse) => {\n      const credential = new firebase.auth.OAuthProvider('apple.com').credential(\n        res.identityToken\n      );\n      let firstLogin = false;\n\n      const response = await firebase.auth().signInWithCredential(credential).then(async (cred) => {\n          await firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n              return res;\n            }\n          });\n          firstLogin = cred.additionalUserInfo.isNewUser;\n        });\n\n      return {\n        firstLogin,\n        firstName: res.fullName.givenName,\n        lastName: res.fullName.familyName,\n        email: res.email,\n      } as SsoUser;\n    });\n  }\n\n    // GoogleAuth() {\n    //   return this.AuthLogin(new auth.GoogleAuthProvider());\n    // }\n\n\n  public loginWithToken(token): Observable<any> {\n    return from(\n      firebase\n        .auth()\n        .signInWithCustomToken(token)\n        .then(() => this.getFcmToken()\n          .pipe(take(1))\n          .subscribe((token) => this.accountUpdateFcmDeviceIdPost(token))),\n    );\n  }\n\n  public getFcmToken() {\n    return from(this.storage.get('fcm'));\n  }\n\n  public setFcmToken(token) {\n    return from(this.storage.set('fcm', token));\n  }\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountEmailTakenGet(\n    email?: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (email !== undefined && email !== null) {\n      queryParameters = queryParameters.set('email', email as string);\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'get',\n      `${this.basePath}/account/email_taken`,\n      {\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateFcmDeviceIdPost(\n    deviceId: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    if (deviceId === null || deviceId === undefined) {\n      throw new Error(\n        'Required parameter deviceId was null or undefined when calling accountUpdateFcmDeviceIdPost.',\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys\n      && this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization,\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/fcm/${encodeURIComponent(\n        String(deviceId),\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountRegisterPostForm(\n    body?: RegisterRequest,\n    blob?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean,\n  ): Observable<string> {\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<JwtToken>>;\n    // public accountRegisterPostForm(body?: RegisterRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    return this.httpClient.request<string>(\n      'post',\n      `${this.basePath}/account/register`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  /**\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateLocationsPost(\n    body?: MarkLocationsRequest,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/locations`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  /**\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdateProfileImagePost(\n    blob?: Blob,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n\n    const body = new FormData();\n    body.append('image', blob);\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update/profile_image`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n\n  public accountUpdatePost(\n    firstname?: string,\n    lastname?: string,\n    title?: string,\n    education?: string,\n    birthLocation?: string,\n    residenceLocation?: string,\n    observe: any = 'body',\n    reportProgress = false,\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (firstname !== undefined && firstname !== null) {\n      queryParameters = queryParameters.set('Firstname', firstname as any);\n    }\n    if (lastname !== undefined && lastname !== null) {\n      queryParameters = queryParameters.set('Lastname', lastname as any);\n    }\n    if (title !== undefined && title !== null) {\n      queryParameters = queryParameters.set('Title', title as any);\n    }\n    if (education !== undefined && education !== null) {\n      queryParameters = queryParameters.set('Education', education as any);\n    }\n    if (birthLocation !== undefined && birthLocation !== null) {\n      queryParameters = queryParameters.set(\n        'BirthLocation',\n        birthLocation as any,\n      );\n    }\n    if (residenceLocation !== undefined && residenceLocation !== null) {\n      queryParameters = queryParameters.set(\n        'ResidenceLocation',\n        residenceLocation as any,\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/account/update`,\n      {\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      },\n    );\n  }\n}\n","export * from './accounts.service';\nimport { AccountsService } from './accounts.service';\nexport * from './blobStorage.service';\nimport { BlobStorageService } from './blobStorage.service';\nexport * from './devops.service';\nimport { DevopsService } from './devops.service';\nexport * from './post.service';\nimport { PostService } from './post.service';\nexport * from './postTestData.service';\nimport { PostTestDataService } from './postTestData.service';\nexport * from './tag.service';\nimport { TagService } from './tag.service';\nexport * from './user.service';\nimport { UserService } from './user.service';\nexport * from './userLocation.service';\nimport { UserLocationService } from './userLocation.service';\nexport * from './userMessage.service';\nimport { UserMessageService } from './userMessage.service';\n// tslint:disable-next-line: max-line-length\nexport const APIS = [\n  AccountsService,\n  BlobStorageService,\n  DevopsService,\n  PostService,\n  PostTestDataService,\n  TagService,\n  UserService,\n  UserLocationService,\n  UserMessageService,\n];\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: import-spacing\n// tslint:disable: max-line-length\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class BlobStorageService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public storageDeleteFileFileNameGet(\n    fileName: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (fileName === null || fileName === undefined) {\n      throw new Error(\n        'Required parameter fileName was null or undefined when calling storageDeleteFileFileNameGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<any>(\n      'get',\n      `${this.basePath}/storage/DeleteFile/${encodeURIComponent(\n        String(fileName)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<string>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<string>>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<string>>;\n  public storageDownloadFileFileNameGet(\n    fileName: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (fileName === null || fileName === undefined) {\n      throw new Error(\n        'Required parameter fileName was null or undefined when calling storageDownloadFileFileNameGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<string>(\n      'get',\n      `${this.basePath}/storage/DownloadFile/${encodeURIComponent(\n        String(fileName)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<string>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<string>>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<string>>>;\n  public storageListFilesUserIdGet(\n    userId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userId === null || userId === undefined) {\n      throw new Error(\n        'Required parameter userId was null or undefined when calling storageListFilesUserIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<string>>(\n      'get',\n      `${this.basePath}/storage/ListFiles/${encodeURIComponent(\n        String(userId)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param asset\n   * @param fileName\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public storageUploadFilePostForm(\n    asset?: Blob,\n    fileName?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let queryParameters = new HttpParams({\n      encoder: new CustomHttpUrlEncodingCodec(),\n    });\n    if (fileName !== undefined && fileName !== null) {\n      queryParameters = queryParameters.set('fileName', fileName as any);\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    const canConsumeForm = this.canConsumeForm(consumes);\n\n    let formParams: { append(param: string, value: any): void };\n    let useForm = false;\n    const convertFormParamsToString = false;\n    // use FormData to transmit files using content-type \"multipart/form-data\"\n    // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n    useForm = canConsumeForm;\n    if (useForm) {\n      formParams = new FormData();\n    } else {\n      formParams = new HttpParams({\n        encoder: new CustomHttpUrlEncodingCodec(),\n      });\n    }\n\n    if (asset !== undefined) {\n      formParams =\n        (formParams.append('asset', asset as any) as any) || formParams;\n    }\n\n    return this.httpClient.request<any>(\n      'post',\n      `${this.basePath}/storage/UploadFile`,\n      {\n        body: convertFormParamsToString ? formParams.toString() : formParams,\n        params: queryParameters,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\n\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { Configuration } from '../configuration';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class DevopsService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public devopsPostTypesPost(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<any>;\n  public devopsPostTypesPost(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<any>>;\n  public devopsPostTypesPost(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<any>>;\n  public devopsPostTypesPost(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<any>(\n      'post',\n      `${this.basePath}/devops/post_types`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: no-redundant-jsdoc\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { PostPaginatedList } from '../model/postPaginatedList';\nimport { BASE_PATH } from 'src/environments/environment';\n\nimport { COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\nimport { CreatePostRequest } from '../model/createPostRequest';\nimport { NewPostResponse } from '../model/newPostResponse';\nimport { CommentForPost } from '../model/commentForPost';\nimport { LikeForPost } from '../model/likeForPost';\nimport { PostApiPaginatedList } from '../model/postApiPaginatedList';\nimport { CommentApi } from '../model/commentApi';\nimport { string } from '@amcharts/amcharts4/core';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class PostService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param postId\n   * @param body\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n  public postsCommentPostIdPost(\n    postId: string,\n    body?: CommentApi,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsCommentPostIdPost.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/posts/comment/${encodeURIComponent(String(postId))}`,\n      {\n        body,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<CommentForPost>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<CommentForPost>>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<CommentForPost>>>;\n  public postsCommentsGetPostIdGet(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsCommentsGetPostIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<CommentForPost>>(\n      'get',\n      `${this.basePath}/posts/comments/get/${encodeURIComponent(\n        String(postId)\n      )}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<boolean>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<boolean>>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<boolean>>;\n  public postsLikePostIdPost(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsLikePostIdPost.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<boolean>(\n      'post',\n      `${this.basePath}/posts/like/${encodeURIComponent(String(postId))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param postId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<LikeForPost>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<LikeForPost>>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<LikeForPost>>>;\n  public postsLikesGetPostIdGet(\n    postId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (postId === null || postId === undefined) {\n      throw new Error(\n        'Required parameter postId was null or undefined when calling postsLikesGetPostIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<LikeForPost>>(\n      'get',\n      `${this.basePath}/posts/likes/get/${encodeURIComponent(String(postId))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n  /**\n   * @param caption\n   * @param postType\n   * @param locationCode\n   * @param image\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<NewPostResponse>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<NewPostResponse>>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<NewPostResponse>>;\n  public postsNewPostForm(\n    caption?: string,\n    postType?: string,\n    locationCode?: string,\n    image?: Blob,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['multipart/form-data'];\n\n    let formParams: { append(param: string, value: any): void };\n    formParams = new FormData();\n\n    const convertFormParamsToString = false;\n\n    if (caption !== undefined) {\n      formParams =\n        (formParams.append('Caption', caption as any) as any) || formParams;\n    }\n    if (postType !== undefined) {\n      formParams =\n        (formParams.append('PostType', postType as any) as any) || formParams;\n    }\n    if (locationCode !== undefined) {\n      formParams =\n        (formParams.append('LocationCode', locationCode as any) as any) ||\n        formParams;\n    }\n    if (image !== undefined) {\n      formParams =\n        (formParams.append('Image', image as any) as any) || formParams;\n    }\n\n    return this.httpClient.request<NewPostResponse>(\n      'post',\n      `${this.basePath}/posts/new`,\n      {\n        body: convertFormParamsToString ? formParams.toString() : formParams,\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param page\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<PostApiPaginatedList>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<PostApiPaginatedList>>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<PostApiPaginatedList>>;\n  public postsPageGet(\n    page: number,\n    filter: string,\n    userId: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (page === null || page === undefined) {\n      throw new Error(\n        'Required parameter page was null or undefined when calling postsPageGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    let uri = `${this.basePath}/posts/${encodeURIComponent(String(page))}`;\n\n    if (filter !== '' && userId === '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/filter/${encodeURIComponent(String(filter))}`;\n    } else if (userId !== '' && filter === '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/user/${encodeURIComponent(String(userId))}`;\n    } else if (userId !== '' && filter !== '') {\n      uri = `${this.basePath}/posts/${encodeURIComponent(\n        String(page)\n      )}/${encodeURIComponent(String(filter))}/${encodeURIComponent(\n        String(userId)\n      )}`;\n    }\n\n    return this.httpClient.request<PostApiPaginatedList>('get', uri, {\n      withCredentials: this.configuration.withCredentials,\n      headers,\n      observe,\n      reportProgress,\n    });\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/user';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class PostTestDataService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postTestDataGetAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<User>>;\n  public postTestDataGetAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<User>>>;\n  public postTestDataGetAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<User>>>;\n  public postTestDataGetAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<User>>(\n      `${this.basePath}/api/TestData/users`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public postTestDataPostTest(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<string>;\n  public postTestDataPostTest(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<string>>;\n  public postTestDataPostTest(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<string>>;\n  public postTestDataPostTest(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.post<string>(\n      `${this.basePath}/api/TestData/post`,\n      null,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { Tag } from '../model/tag';\nimport { TagController } from '../model/tagController';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class TagService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagDeleteTag(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Tag>;\n  public tagDeleteTag(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Tag>>;\n  public tagDeleteTag(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Tag>>;\n  public tagDeleteTag(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagDeleteTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<Tag>(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagGetTag(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Tag>;\n  public tagGetTag(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Tag>>;\n  public tagGetTag(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Tag>>;\n  public tagGetTag(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagGetTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Tag>(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagGetTagAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<Tag>>;\n  public tagGetTagAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<Tag>>>;\n  public tagGetTagAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<Tag>>>;\n  public tagGetTagAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<Tag>>(`${this.basePath}/api/Tag`, {\n      withCredentials: this.configuration.withCredentials,\n      headers,\n      observe,\n      reportProgress,\n    });\n  }\n\n  /**\n   *\n   *\n   * @param tag\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<TagController>;\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<TagController>>;\n  public tagPostTag(\n    tag: Tag,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<TagController>>;\n  public tagPostTag(\n    tag: Tag,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (tag === null || tag === undefined) {\n      throw new Error(\n        'Required parameter tag was null or undefined when calling tagPostTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<TagController>(\n      `${this.basePath}/api/Tag`,\n      tag,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param tag\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public tagPutTag(\n    id: number,\n    tag: Tag,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling tagPutTag.'\n      );\n    }\n\n    if (tag === null || tag === undefined) {\n      throw new Error(\n        'Required parameter tag was null or undefined when calling tagPutTag.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/Tag/${encodeURIComponent(String(id))}`,\n      tag,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n// tslint:disable: max-line-length\n// tslint:disable: import-spacing\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../model/user';\nimport { UserResponse } from '../model/userResponse';\nimport { BASE_PATH } from 'src/environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { Configuration } from '../configuration';\nimport { SlimUserResponse } from '../model/slimUserResponse';\nconst InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class UserService {\n  protected basePath = BASE_PATH;\n  public defaultHeaders = new HttpHeaders().set(InterceptorSkipHeader, '');\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userAllGet(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<User>>;\n  public userAllGet(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<User>>>;\n  public userAllGet(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<User>>>;\n  public userAllGet(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<User>>(\n      'get',\n      `${this.basePath}/User/all`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userIdGet(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserResponse>;\n  public userIdGet(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserResponse>>;\n  public userIdGet(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserResponse>>;\n  public userIdGet(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userIdGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<UserResponse>(\n      'get',\n      `${this.basePath}/User/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param query\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<SlimUserResponse>>;\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<SlimUserResponse>>>;\n  public userSearchQueryGet(\n    query: string,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<SlimUserResponse>>>;\n  public userSearchQueryGet(\n    query: string,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (query === null || query === undefined) {\n      throw new Error(\n        'Required parameter query was null or undefined when calling userSearchQueryGet.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<Array<SlimUserResponse>>(\n      'get',\n      `${this.basePath}/User/search/${encodeURIComponent(String(query))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userSelfGet(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<SlimUserResponse>;\n  public userSelfGet(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<SlimUserResponse>>;\n  public userSelfGet(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<SlimUserResponse>>;\n  public userSelfGet(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // authentication (Bearer) required\n    if (\n      this.configuration.apiKeys &&\n      this.configuration.apiKeys.Authorization\n    ) {\n      headers = headers.set(\n        'Authorization',\n        this.configuration.apiKeys.Authorization\n      );\n    }\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.request<SlimUserResponse>(\n      'get',\n      `${this.basePath}/User/self`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { UserLocation } from '../model/userLocation';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class UserLocationService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationDeleteUserLocation(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationDeleteUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<UserLocation>(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationGetUserLocation(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationGetUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<UserLocation>(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationGetUserLocationAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<UserLocation>>;\n  public userLocationGetUserLocationAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<UserLocation>>>;\n  public userLocationGetUserLocationAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<UserLocation>>>;\n  public userLocationGetUserLocationAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<UserLocation>>(\n      `${this.basePath}/api/UserLocation`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userLocation\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserLocation>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserLocation>>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserLocation>>;\n  public userLocationPostUserLocation(\n    userLocation: UserLocation,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userLocation === null || userLocation === undefined) {\n      throw new Error(\n        'Required parameter userLocation was null or undefined when calling userLocationPostUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<UserLocation>(\n      `${this.basePath}/api/UserLocation`,\n      userLocation,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param userLocation\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public userLocationPutUserLocation(\n    id: number,\n    userLocation: UserLocation,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userLocationPutUserLocation.'\n      );\n    }\n\n    if (userLocation === null || userLocation === undefined) {\n      throw new Error(\n        'Required parameter userLocation was null or undefined when calling userLocationPutUserLocation.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/UserLocation/${encodeURIComponent(String(id))}`,\n      userLocation,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","/**\n * My Title\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\n\nimport { Observable } from 'rxjs';\n\nimport { UserMessage } from '../model/userMessage';\n\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class UserMessageService {\n  protected basePath = 'https://localhost:5001';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string,\n    @Optional() configuration: Configuration\n  ) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessageDeleteUserMessage(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessageDeleteUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.delete<UserMessage>(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessageGetUserMessage(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessageGetUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<UserMessage>(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessageGetUserMessageAll(\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Array<UserMessage>>;\n  public userMessageGetUserMessageAll(\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Array<UserMessage>>>;\n  public userMessageGetUserMessageAll(\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Array<UserMessage>>>;\n  public userMessageGetUserMessageAll(\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<UserMessage>>(\n      `${this.basePath}/api/UserMessage`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param userMessage\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<UserMessage>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<UserMessage>>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<UserMessage>>;\n  public userMessagePostUserMessage(\n    userMessage: UserMessage,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (userMessage === null || userMessage === undefined) {\n      throw new Error(\n        'Required parameter userMessage was null or undefined when calling userMessagePostUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [\n      'text/plain',\n      'application/json',\n      'text/json',\n    ];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<UserMessage>(\n      `${this.basePath}/api/UserMessage`,\n      userMessage,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param id\n   * @param userMessage\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'body',\n    reportProgress?: boolean\n  ): Observable<Blob>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'response',\n    reportProgress?: boolean\n  ): Observable<HttpResponse<Blob>>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe?: 'events',\n    reportProgress?: boolean\n  ): Observable<HttpEvent<Blob>>;\n  public userMessagePutUserMessage(\n    id: number,\n    userMessage: UserMessage,\n    observe: any = 'body',\n    reportProgress: boolean = false\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling userMessagePutUserMessage.'\n      );\n    }\n\n    if (userMessage === null || userMessage === undefined) {\n      throw new Error(\n        'Required parameter userMessage was null or undefined when calling userMessagePutUserMessage.'\n      );\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    const httpHeaderAccepts: string[] = [];\n    const httpHeaderAcceptSelected:\n      | string\n      | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json-patch+json',\n      'application/json',\n      'text/json',\n      'application/_*+json',\n    ];\n    const httpContentTypeSelected:\n      | string\n      | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.put(\n      `${this.basePath}/api/UserMessage/${encodeURIComponent(String(id))}`,\n      userMessage,\n      {\n        responseType: 'blob',\n        withCredentials: this.configuration.withCredentials,\n        headers,\n        observe,\n        reportProgress,\n      }\n    );\n  }\n}\n","export interface ConfigurationParameters {\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n}\n\nexport class Configuration {\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length == 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length == 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp(\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\n      'i'\n    );\n    return (\n      mime != null &&\n      (jsonMime.test(mime) ||\n        mime.toLowerCase() === 'application/json-patch+json')\n    );\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n * CustomHttpUrlEncodingCodec\n * Fix plus sign (+) not encoding, so sent as blank space\n * See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n */\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n  encodeKey(k: string): string {\n    k = super.encodeKey(k);\n    return k.replace(/\\+/gi, '%2B');\n  }\n  encodeValue(v: string): string {\n    v = super.encodeValue(v);\n    return v.replace(/\\+/gi, '%2B');\n  }\n}\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type AddressFamily =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 28\n  | 29\n  | 65536\n  | 65537\n  | -1;\n\nexport const AddressFamily = {\n  NUMBER_0: 0 as AddressFamily,\n  NUMBER_1: 1 as AddressFamily,\n  NUMBER_2: 2 as AddressFamily,\n  NUMBER_3: 3 as AddressFamily,\n  NUMBER_4: 4 as AddressFamily,\n  NUMBER_5: 5 as AddressFamily,\n  NUMBER_6: 6 as AddressFamily,\n  NUMBER_7: 7 as AddressFamily,\n  NUMBER_8: 8 as AddressFamily,\n  NUMBER_9: 9 as AddressFamily,\n  NUMBER_10: 10 as AddressFamily,\n  NUMBER_11: 11 as AddressFamily,\n  NUMBER_12: 12 as AddressFamily,\n  NUMBER_13: 13 as AddressFamily,\n  NUMBER_14: 14 as AddressFamily,\n  NUMBER_15: 15 as AddressFamily,\n  NUMBER_16: 16 as AddressFamily,\n  NUMBER_17: 17 as AddressFamily,\n  NUMBER_18: 18 as AddressFamily,\n  NUMBER_19: 19 as AddressFamily,\n  NUMBER_21: 21 as AddressFamily,\n  NUMBER_22: 22 as AddressFamily,\n  NUMBER_23: 23 as AddressFamily,\n  NUMBER_24: 24 as AddressFamily,\n  NUMBER_25: 25 as AddressFamily,\n  NUMBER_26: 26 as AddressFamily,\n  NUMBER_28: 28 as AddressFamily,\n  NUMBER_29: 29 as AddressFamily,\n  NUMBER_65536: 65536 as AddressFamily,\n  NUMBER_65537: 65537 as AddressFamily,\n  NUMBER_MINUS_1: -1 as AddressFamily,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type CallingConventions = 1 | 2 | 3 | 32 | 64;\n\nexport const CallingConventions = {\n  NUMBER_1: 1 as CallingConventions,\n  NUMBER_2: 2 as CallingConventions,\n  NUMBER_3: 3 as CallingConventions,\n  NUMBER_32: 32 as CallingConventions,\n  NUMBER_64: 64 as CallingConventions,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type EventAttributes = 0 | 512 | 1024;\n\nexport const EventAttributes = {\n  NUMBER_0: 0 as EventAttributes,\n  NUMBER_512: 512 as EventAttributes,\n  NUMBER_1024: 1024 as EventAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type FieldAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 1024\n  | 4096\n  | 8192\n  | 32768\n  | 38144;\n\nexport const FieldAttributes = {\n  NUMBER_0: 0 as FieldAttributes,\n  NUMBER_1: 1 as FieldAttributes,\n  NUMBER_2: 2 as FieldAttributes,\n  NUMBER_3: 3 as FieldAttributes,\n  NUMBER_4: 4 as FieldAttributes,\n  NUMBER_5: 5 as FieldAttributes,\n  NUMBER_6: 6 as FieldAttributes,\n  NUMBER_7: 7 as FieldAttributes,\n  NUMBER_16: 16 as FieldAttributes,\n  NUMBER_32: 32 as FieldAttributes,\n  NUMBER_64: 64 as FieldAttributes,\n  NUMBER_128: 128 as FieldAttributes,\n  NUMBER_256: 256 as FieldAttributes,\n  NUMBER_512: 512 as FieldAttributes,\n  NUMBER_1024: 1024 as FieldAttributes,\n  NUMBER_4096: 4096 as FieldAttributes,\n  NUMBER_8192: 8192 as FieldAttributes,\n  NUMBER_32768: 32768 as FieldAttributes,\n  NUMBER_38144: 38144 as FieldAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type GenericParameterAttributes = 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;\n\nexport const GenericParameterAttributes = {\n  NUMBER_0: 0 as GenericParameterAttributes,\n  NUMBER_1: 1 as GenericParameterAttributes,\n  NUMBER_2: 2 as GenericParameterAttributes,\n  NUMBER_3: 3 as GenericParameterAttributes,\n  NUMBER_4: 4 as GenericParameterAttributes,\n  NUMBER_8: 8 as GenericParameterAttributes,\n  NUMBER_16: 16 as GenericParameterAttributes,\n  NUMBER_28: 28 as GenericParameterAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type LayoutKind = 0 | 2 | 3;\n\nexport const LayoutKind = {\n  NUMBER_0: 0 as LayoutKind,\n  NUMBER_2: 2 as LayoutKind,\n  NUMBER_3: 3 as LayoutKind,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MemberTypes = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;\n\nexport const MemberTypes = {\n  NUMBER_1: 1 as MemberTypes,\n  NUMBER_2: 2 as MemberTypes,\n  NUMBER_4: 4 as MemberTypes,\n  NUMBER_8: 8 as MemberTypes,\n  NUMBER_16: 16 as MemberTypes,\n  NUMBER_32: 32 as MemberTypes,\n  NUMBER_64: 64 as MemberTypes,\n  NUMBER_128: 128 as MemberTypes,\n  NUMBER_191: 191 as MemberTypes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 1024\n  | 2048\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 53248;\n\nexport const MethodAttributes = {\n  NUMBER_0: 0 as MethodAttributes,\n  NUMBER_1: 1 as MethodAttributes,\n  NUMBER_2: 2 as MethodAttributes,\n  NUMBER_3: 3 as MethodAttributes,\n  NUMBER_4: 4 as MethodAttributes,\n  NUMBER_5: 5 as MethodAttributes,\n  NUMBER_6: 6 as MethodAttributes,\n  NUMBER_7: 7 as MethodAttributes,\n  NUMBER_8: 8 as MethodAttributes,\n  NUMBER_16: 16 as MethodAttributes,\n  NUMBER_32: 32 as MethodAttributes,\n  NUMBER_64: 64 as MethodAttributes,\n  NUMBER_128: 128 as MethodAttributes,\n  NUMBER_256: 256 as MethodAttributes,\n  NUMBER_512: 512 as MethodAttributes,\n  NUMBER_1024: 1024 as MethodAttributes,\n  NUMBER_2048: 2048 as MethodAttributes,\n  NUMBER_4096: 4096 as MethodAttributes,\n  NUMBER_8192: 8192 as MethodAttributes,\n  NUMBER_16384: 16384 as MethodAttributes,\n  NUMBER_32768: 32768 as MethodAttributes,\n  NUMBER_53248: 53248 as MethodAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type MethodImplAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 8\n  | 16\n  | 32\n  | 64\n  | 128\n  | 256\n  | 512\n  | 4096\n  | 65535;\n\nexport const MethodImplAttributes = {\n  NUMBER_0: 0 as MethodImplAttributes,\n  NUMBER_1: 1 as MethodImplAttributes,\n  NUMBER_2: 2 as MethodImplAttributes,\n  NUMBER_3: 3 as MethodImplAttributes,\n  NUMBER_4: 4 as MethodImplAttributes,\n  NUMBER_8: 8 as MethodImplAttributes,\n  NUMBER_16: 16 as MethodImplAttributes,\n  NUMBER_32: 32 as MethodImplAttributes,\n  NUMBER_64: 64 as MethodImplAttributes,\n  NUMBER_128: 128 as MethodImplAttributes,\n  NUMBER_256: 256 as MethodImplAttributes,\n  NUMBER_512: 512 as MethodImplAttributes,\n  NUMBER_4096: 4096 as MethodImplAttributes,\n  NUMBER_65535: 65535 as MethodImplAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ModelValidationState = 0 | 1 | 2 | 3;\n\nexport const ModelValidationState = {\n  NUMBER_0: 0 as ModelValidationState,\n  NUMBER_1: 1 as ModelValidationState,\n  NUMBER_2: 2 as ModelValidationState,\n  NUMBER_3: 3 as ModelValidationState,\n};\n","export * from './actionContext';\r\nexport * from './actionContextBooleanFunc';\r\nexport * from './actionDescriptor';\r\nexport * from './addressFamily';\r\nexport * from './asnEncodedData';\r\nexport * from './assembly';\r\nexport * from './asymmetricAlgorithm';\r\nexport * from './attributeRouteInfo';\r\nexport * from './bindingInfo';\r\nexport * from './bindingSource';\r\nexport * from './body';\r\nexport * from './body1';\r\nexport * from './callingConventions';\r\nexport * from './cancellationToken';\r\nexport * from './claim';\r\nexport * from './claimsIdentity';\r\nexport * from './claimsPrincipal';\r\nexport * from './connectionInfo';\r\nexport * from './constructorInfo';\r\nexport * from './controllerActionDescriptor';\r\nexport * from './controllerContext';\r\nexport * from './customAttributeData';\r\nexport * from './customAttributeNamedArgument';\r\nexport * from './customAttributeTypedArgument';\r\nexport * from './eventAttributes';\r\nexport * from './eventInfo';\r\nexport * from './exception';\r\nexport * from './fieldAttributes';\r\nexport * from './fieldInfo';\r\nexport * from './filterDescriptor';\r\nexport * from './genericParameterAttributes';\r\nexport * from './hostString';\r\nexport * from './httpContext';\r\nexport * from './httpRequest';\r\nexport * from './httpResponse';\r\nexport * from './iActionConstraintMetadata';\r\nexport * from './iCustomAttributeProvider';\r\nexport * from './iFilterMetadata';\r\nexport * from './iIdentity';\r\nexport * from './iModelBinderFactory';\r\nexport * from './iModelMetadataProvider';\r\nexport * from './iObjectModelValidator';\r\nexport * from './iPAddress';\r\nexport * from './iPropertyFilterProvider';\r\nexport * from './iResponseCookies';\r\nexport * from './iRouter';\r\nexport * from './iServiceProvider';\r\nexport * from './iSession';\r\nexport * from './iUrlHelper';\r\nexport * from './iValueProviderFactory';\r\nexport * from './intPtr';\r\nexport * from './jwtToken';\r\nexport * from './keySizes';\r\nexport * from './layoutKind';\r\nexport * from './like';\r\nexport * from './location';\r\nexport * from './locationTag';\r\nexport * from './loginApiRequest';\r\nexport * from './markLocationsRequest';\r\nexport * from './memberInfo';\r\nexport * from './memberTypes';\r\nexport * from './methodAttributes';\r\nexport * from './methodBase';\r\nexport * from './methodImplAttributes';\r\nexport * from './methodInfo';\r\nexport * from './modelError';\r\nexport * from './modelMetadataBooleanFunc';\r\nexport * from './modelStateEntry';\r\nexport * from './modelValidationState';\r\nexport * from './module';\r\nexport * from './moduleHandle';\r\nexport * from './oid';\r\nexport * from './parameterAttributes';\r\nexport * from './parameterDescriptor';\r\nexport * from './parameterInfo';\r\nexport * from './pathString';\r\nexport * from './pipeReader';\r\nexport * from './pipeWriter';\r\nexport * from './post';\r\nexport * from './postComment';\r\nexport * from './postPaginatedList';\r\nexport * from './postTag';\r\nexport * from './postType';\r\nexport * from './postUserLocation';\r\nexport * from './problemDetailsFactory';\r\nexport * from './propertyAttributes';\r\nexport * from './propertyInfo';\r\nexport * from './publicKey';\r\nexport * from './queryString';\r\nexport * from './registerRequest';\r\nexport * from './routeData';\r\nexport * from './runtimeFieldHandle';\r\nexport * from './runtimeMethodHandle';\r\nexport * from './runtimeTypeHandle';\r\nexport * from './safeWaitHandle';\r\nexport * from './securityRuleSet';\r\nexport * from './slimUserResponse';\r\nexport * from './stream';\r\nexport * from './stringStringKeyValuePair';\r\nexport * from './stringStringValuesKeyValuePair';\r\nexport * from './structLayoutAttribute';\r\nexport * from './tag';\r\nexport * from './tagController';\r\nexport * from './type';\r\nexport * from './typeAttributes';\r\nexport * from './typeInfo';\r\nexport * from './typeObjectKeyValuePair';\r\nexport * from './user';\r\nexport * from './userFollowing';\r\nexport * from './userLocation';\r\nexport * from './userMessage';\r\nexport * from './userResponse';\r\nexport * from './waitHandle';\r\nexport * from './webSocketManager';\r\nexport * from './x500DistinguishedName';\r\nexport * from './x509Certificate2';\r\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type ParameterAttributes =\n  | 0\n  | 1\n  | 2\n  | 4\n  | 8\n  | 16\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 61440;\n\nexport const ParameterAttributes = {\n  NUMBER_0: 0 as ParameterAttributes,\n  NUMBER_1: 1 as ParameterAttributes,\n  NUMBER_2: 2 as ParameterAttributes,\n  NUMBER_4: 4 as ParameterAttributes,\n  NUMBER_8: 8 as ParameterAttributes,\n  NUMBER_16: 16 as ParameterAttributes,\n  NUMBER_4096: 4096 as ParameterAttributes,\n  NUMBER_8192: 8192 as ParameterAttributes,\n  NUMBER_16384: 16384 as ParameterAttributes,\n  NUMBER_32768: 32768 as ParameterAttributes,\n  NUMBER_61440: 61440 as ParameterAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type PropertyAttributes =\n  | 0\n  | 512\n  | 1024\n  | 4096\n  | 8192\n  | 16384\n  | 32768\n  | 62464;\n\nexport const PropertyAttributes = {\n  NUMBER_0: 0 as PropertyAttributes,\n  NUMBER_512: 512 as PropertyAttributes,\n  NUMBER_1024: 1024 as PropertyAttributes,\n  NUMBER_4096: 4096 as PropertyAttributes,\n  NUMBER_8192: 8192 as PropertyAttributes,\n  NUMBER_16384: 16384 as PropertyAttributes,\n  NUMBER_32768: 32768 as PropertyAttributes,\n  NUMBER_62464: 62464 as PropertyAttributes,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type SecurityRuleSet = 0 | 1 | 2;\n\nexport const SecurityRuleSet = {\n  NUMBER_0: 0 as SecurityRuleSet,\n  NUMBER_1: 1 as SecurityRuleSet,\n  NUMBER_2: 2 as SecurityRuleSet,\n};\n","/**\n * Visit\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport type TypeAttributes =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 16\n  | 24\n  | 32\n  | 128\n  | 256\n  | 1024\n  | 2048\n  | 4096\n  | 8192\n  | 16384\n  | 65536\n  | 131072\n  | 196608\n  | 262144\n  | 264192\n  | 1048576\n  | 12582912;\n\nexport const TypeAttributes = {\n  NUMBER_0: 0 as TypeAttributes,\n  NUMBER_1: 1 as TypeAttributes,\n  NUMBER_2: 2 as TypeAttributes,\n  NUMBER_3: 3 as TypeAttributes,\n  NUMBER_4: 4 as TypeAttributes,\n  NUMBER_5: 5 as TypeAttributes,\n  NUMBER_6: 6 as TypeAttributes,\n  NUMBER_7: 7 as TypeAttributes,\n  NUMBER_8: 8 as TypeAttributes,\n  NUMBER_16: 16 as TypeAttributes,\n  NUMBER_24: 24 as TypeAttributes,\n  NUMBER_32: 32 as TypeAttributes,\n  NUMBER_128: 128 as TypeAttributes,\n  NUMBER_256: 256 as TypeAttributes,\n  NUMBER_1024: 1024 as TypeAttributes,\n  NUMBER_2048: 2048 as TypeAttributes,\n  NUMBER_4096: 4096 as TypeAttributes,\n  NUMBER_8192: 8192 as TypeAttributes,\n  NUMBER_16384: 16384 as TypeAttributes,\n  NUMBER_65536: 65536 as TypeAttributes,\n  NUMBER_131072: 131072 as TypeAttributes,\n  NUMBER_196608: 196608 as TypeAttributes,\n  NUMBER_262144: 262144 as TypeAttributes,\n  NUMBER_264192: 264192 as TypeAttributes,\n  NUMBER_1048576: 1048576 as TypeAttributes,\n  NUMBER_12582912: 12582912 as TypeAttributes,\n};\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  tsv: '   ',\n  ssv: ' ',\n  pipes: '|',\n};\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError, from } from 'rxjs';\nimport { map, catchError, switchMap } from 'rxjs/operators';\n\nimport { AlertController } from '@ionic/angular';\nimport { BASE_PATH } from '../../../environments/environment';\nimport { AccountsService } from '../clients/api/accounts.service';\n\nconst TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  constructor(\n    private alertController: AlertController,\n    private accountService: AccountsService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return from(this.accountService.getToken()).pipe(\n      switchMap((token) => {\n        if (token !== '') {\n          request = request.clone({\n            headers: request.headers.set('Authorization', 'Bearer ' + token),\n          });\n        }\n\n        // if (!request.headers.has('Content-Type')) {\n        //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n        // }\n\n        return next.handle(request).pipe(\n          map((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              // do nothing for now\n            }\n            return event;\n          }),\n          catchError((error: HttpErrorResponse) => {\n            const status = error.status;\n            const reason = error;\n\n            // this.presentAlert(status, reason);\n            return throwError(error);\n          })\n        );\n      })\n    );\n  }\n\n  async presentAlert(status, reason) {\n    const alert = await this.alertController.create({\n      header: status + ' Error',\n      subHeader: 'Subtitle',\n      message: reason,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\nimport firebase from 'firebase/app';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public router: Router, private zone: NgZone) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          // User is signed in.\n\n          resolve(true);\n        } else {\n          // No user is signed in.\n\n          resolve(false);\n          this.zone.run(() => {\n            this.router.navigate(['sign-in']);\n          });\n        }\n      });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'card-flip',\n  templateUrl: './card-flip.component.html',\n  styleUrls: ['./card-flip.component.scss'],\n})\nexport class CardFlipComponent implements OnInit {\n  constructor() {}\n\n  flipped = false;\n\n  ngOnInit() {}\n\n  public flip() {\n    this.flipped = !this.flipped;\n  }\n}\n","<div class=\"flip-container\" [class.flipped]=\"flipped\">\n  <div class=\"flipper\">\n    <div class=\"front\">\n      <ng-content select=\".card-flip-front\"></ng-content>\n      <ng-content select=\"flip-card\"></ng-content>\n    </div>\n\n    <div class=\"back\">\n      <ng-content select=\".card-flip-back\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Post, PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\n\n@Component({\n  selector: 'post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private zone: NgZone,\n    private postSvc: PostService\n  ) {\n    // this.route.queryParams.subscribe(params => {\n    //   if (this.router.getCurrentNavigation().extras.state) {\n    //     this.displayNewUser = true;\n    //     this.username = this.router.getCurrentNavigation().extras.state.newUser;\n    //   }\n    // });\n  }\n\n  @Input() posts: PostApi[] = [];\n\n  location = 'Charleston, SC';\n\n  // flipped = false;\n  likeIcon = '../../assets/UI/heart.svg';\n  likedIcon = '../../assets/UI/liked-icon.svg';\n  ngOnInit() {}\n\n  likePost(post: PostApi) {\n    if (!post.likedByCurrentUser) {\n      this.postSvc\n        .postsLikePostIdPost(post.postId.toString())\n        .pipe(take(1))\n        .subscribe();\n      post.likeCount++;\n      post.likedByCurrentUser = true;\n    }\n  }\n\n  viewComments(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        postId: post.postId,\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/comments', navigationExtras);\n    });\n  }\n\n  openProfile(post: PostApi) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: false,\n      state: {\n        userId: post.fkUserId,\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n}\n","<ion-virtual-scroll [items]=\"posts\" approxItemHeight=\"500\">\n  <ion-card\n    *virtualItem=\"let post; let itemBounds = bounds\"\n    [ngClass]=\"{\n      'post-image-container': post.postContentLink,\n      'post-container': post.postContentLink === undefined\n    }\"\n  >\n    <!-- <card-flip #card> -->\n    <!-- <div class =\"card-flip-front\" *ngIf=\"!card.flipped\"> -->\n    <div class=\"card-flip-front\">\n      <ion-grid class=\"three-col-grid\">\n        <ion-row>\n          <ion-col size=\".6\">\n            <ion-avatar>\n              <img [src]=\"post.fkUser.avi\" (click)=\"openProfile(post)\" />\n            </ion-avatar>\n          </ion-col>\n          <ion-col>\n            <ion-row>\n              <ion-card-title class=\"card-title\"\n                >{{ post.fkUser.firstname }}\n                {{ post.fkUser.lastname }}</ion-card-title\n              >\n            </ion-row>\n            <ion-row>\n              <ion-card-subtitle color=\"medium\">{{\n                post.location.locationName\n              }}</ion-card-subtitle>\n            </ion-row>\n          </ion-col>\n          <ion-col size=\".4\">\n            <ion-buttons>\n              <ion-button class=\"ion-justify-content-center\">\n                <img src=\"../../assets/UI/optionsDots.svg\" />\n              </ion-button>\n            </ion-buttons>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n      <ion-card-content>\n        <ion-grid>\n          <ion-row class=\"ion-align-items-baseline\">\n            <ion-col>\n              {{ post.postCaption }}\n            </ion-col>\n          </ion-row>\n          <ion-row *ngIf=\"post.postContentLink\">\n            <ion-col>\n              <div>\n                <img\n                  [src]=\"post.postContentLink\"\n                  height=\"300\"\n                  [alt]=\"post.name\"\n                  class=\"rcorners\"\n                />\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <ion-buttons>\n                <ion-button\n                  class=\"ion-justify-content-center\"\n                  (click)=\"likePost(post)\"\n                >\n                  <img\n                    [src]=\"\n                      post.likedByCurrentUser == true ? likedIcon : likeIcon\n                    \"\n                  />\n                </ion-button>\n                {{ post.likeCount || 0 }}\n              </ion-buttons>\n            </ion-col>\n            <ion-col size=\"4\">\n              <ion-buttons>\n                <ion-button\n                  class=\"ion-justify-content-center\"\n                  (click)=\"viewComments(post)\"\n                >\n                  <img src=\"../../assets/UI/comments.svg\" />\n                </ion-button>\n                {{ post.commentCount || 0 }}\n              </ion-buttons>\n            </ion-col>\n            <ion-col class=\"align-self-center text-center\">\n              <ion-note>{{ post.postTime | dateAgo }}</ion-note>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <ion-buttons>\n          <!-- <ion-button class=\"btn\" flip-card (click)=\"card.flip()\"> -->\n          <ion-button class=\"btn\" (click)=\"viewComments(post)\">\n            View all comments\n          </ion-button>\n        </ion-buttons>\n      </ion-card-content>\n    </div>\n    <!-- <div class =\"card-flip-back\" *ngIf=\"card.flipped\">\n        <ion-card-content>\n          <ion-buttons>\n            <ion-button class=\"btn\" flip-card (click)=\"card.flip()\">\n              Back to post\n            </ion-button>\n          </ion-buttons>\n            <ion-virtual-scroll [items]=\"notifications\">\n            <ion-item  *virtualItem=\"let comment; let itemBounds = bounds;\" class=\"comment\">\n              <ion-grid class=\"comments-grid\">\n                <ion-row>\n                  <ion-col class=\"ion-align-self-center\">\n                    <ion-row class=\"ion-align-items-center\">\n                      <ion-col>\n                        <img src=\"../../../assets/stockPhoto.png\" class=\"user-pic img-center\">\n                      </ion-col>\n                    </ion-row>\n                  </ion-col>\n                  <ion-col size=\"2.2\">\n                    <ion-row>\n                      <ion-col>\n                        <p><strong>{{comment.name}}</strong> {{comment.verbage}} {{comment.isComment == true ? \"\\\"\" + comment.comment + \"\\\"\": \"\"}}</p>\n                      </ion-col>\n                    </ion-row>\n                    <ion-row>\n                      <ion-col>\n                        <ion-text color=\"medium\">{{comment.time}}</ion-text>\n                      </ion-col>\n                    </ion-row>          \n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-item>\n          </ion-virtual-scroll>\n        </ion-card-content>\n      </div> -->\n    <!-- </card-flip> -->\n  </ion-card>\n</ion-virtual-scroll>\n","export enum MapSelectionMode {\n  MULTI_VISIT,\n  MULTI_TO_VISIT,\n  VISITED,\n  TO_VISIT,\n  FILTER,\n  NONE,\n}\n","import { OnInit, Injectable } from '@angular/core';\nimport stateRaw from './json/states.json';\nimport countryRaw from './json/countries.json';\n\nexport interface Country {\n  id: string;\n  name: string;\n}\n\nexport interface State {\n  id: string;\n  name: string;\n}\n\nexport interface IJsonCountries {\n  Countries: Country[];\n}\nexport interface IJsonStates {\n  States: State[];\n}\n\n@Injectable()\nexport class LocationSelector implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  public getStates() {\n    return stateRaw as IJsonStates;\n  }\n\n  public getCountries() {\n    return countryRaw as IJsonCountries;\n  }\n\n  public getAllLocations(): any[] {\n    const options: Array<{ id: string; name: string }> = [];\n\n    this.getCountries().Countries.forEach((e) => {\n      const name = e.name;\n      const id = e.id;\n      options.push({ id, name });\n    });\n\n    this.getStates().States.forEach((e) => {\n      const name = e.name;\n      const id = e.id;\n      options.push({ id, name });\n    });\n\n    return options.sort(this.compare);\n  }\n\n  public compare(a, b) {\n    let comparison = 0;\n    if (a.name > b.name) {\n      comparison = 1;\n    } else if (a.name < b.name) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  NgZone,\n  OnDestroy,\n  Injectable,\n} from '@angular/core';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport am4geodata_usaLow from '@amcharts/amcharts4-geodata/usaLow';\n// import am4geodata_canadaLow from '@amcharts/amcharts4-geodata/canadaLow';\n// import am4geodata_russiaLow from '@amcharts/amcharts4-geodata/russiaLow';\nimport { MapSelectionMode } from './enums/map-selection-mode';\n\n@Injectable()\nexport class Map {\n  private static instance: Map;\n\n  private chart: am4maps.MapChart;\n  private polygonArr: Array<am4maps.MapPolygon>;\n  public selectedArr: Array<{\n    locationId: string;\n    status: string;\n  }>;\n  private seriesArr: Array<am4maps.MapPolygonSeries>;\n  private selectedArea: am4maps.MapPolygon;\n  private selectionMode: MapSelectionMode;\n  private lastSelected: am4maps.MapPolygon;\n  private name: string;\n  private id: any;\n\n  constructor(private zone: NgZone) {\n    this.selectedArea = new am4maps.MapPolygon();\n    this.polygonArr = new Array<am4maps.MapPolygon>();\n    this.selectedArr = new Array();\n    this.seriesArr = new Array<am4maps.MapPolygonSeries>();\n    this.createMap(MapSelectionMode.NONE);\n    this.selectionMode = MapSelectionMode.NONE;\n  }\n\n  // static getInstance(zone: NgZone): Map {\n  //   if (!Map.instance) {\n  //     Map.instance = new Map(zone);\n  //   }\n\n  //   return Map.instance;\n  // }\n\n  get selectedId() {\n    return this.id;\n  }\n\n  set selectedId(id) {\n    this.id = id;\n  }\n\n  get selectedName() {\n    return this.name;\n  }\n\n  set selectedName(name) {\n    this.name = name;\n  }\n\n  async createMap(selectionMode: MapSelectionMode) {\n    am4core.disposeAllCharts();\n    this.zone.runOutsideAngular(() => {\n      let worldSeries: am4maps.MapPolygonSeries;\n      let usaSeries: am4maps.MapPolygonSeries;\n      // let canadaSeries: am4maps.MapPolygonSeries;\n      // let russiaSeries: am4maps.MapPolygonSeries;\n      let chart: am4maps.MapChart;\n\n      am4core.ready(() => {\n        am4core.useTheme(am4themes_animated);\n        am4core.options.autoDispose = true;\n\n        // Create map instance\n        chart = am4core.create(undefined, am4maps.MapChart);\n        chart.geodata = worldLow;\n        chart.projection = new am4maps.projections.Miller();\n        chart.zoomControl = new am4maps.ZoomControl();\n        chart.zoomControl.plusButton.hide();\n        chart.zoomControl.minusButton.hide();\n        chart.tapToActivate = true;\n        chart.seriesContainer.events.disableType('doublehit');\n        chart.chartContainer.background.events.disableType('doublehit');\n        chart.showOnInit = true;\n        // Home button\n        const homeButton = new am4core.Button();\n        homeButton.events.on('hit', () => {\n          chart.goHome();\n        });\n\n        homeButton.icon = new am4core.Sprite();\n        homeButton.padding(7, 5, 7, 5);\n        homeButton.width = 30;\n        homeButton.icon.path =\n          'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8';\n        homeButton.marginBottom = 10;\n        homeButton.parent = chart.zoomControl;\n        homeButton.insertAfter(chart.zoomControl.minusButton);\n\n        // Series for World map\n        worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        worldSeries.exclude = ['AQ'];\n        worldSeries.useGeodata = true;\n        this.seriesArr.push(worldSeries);\n        this.polygonArr.push(worldSeries.mapPolygons.template);\n\n        // Series for United States map\n        usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        usaSeries.geodata = am4geodata_usaLow;\n        this.seriesArr.push(usaSeries);\n        this.polygonArr.push(usaSeries.mapPolygons.template);\n\n        // // Series for Canada map\n        // canadaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // canadaSeries.geodata = am4geodata_canadaLow;\n        // this.seriesArr.push(canadaSeries);\n        // this.polygonArr.push(canadaSeries.mapPolygons.template);\n\n        // // Series for Russia map\n        // russiaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        // russiaSeries.geodata = am4geodata_russiaLow;\n        // this.seriesArr.push(russiaSeries);\n        // this.polygonArr.push(russiaSeries.mapPolygons.template);\n      });\n\n      this.setupTemplates();\n      this.setSelectionMode(selectionMode);\n      this.chart = chart;\n    });\n  }\n\n  addMapToDiv(selectionMode: MapSelectionMode, divName: string) {\n    this.selectionMode = selectionMode;\n    this.setSelectionMode(this.selectionMode);\n    this.chart.moveHtmlContainer(divName);\n  }\n\n  setupTemplates() {\n    this.polygonArr.forEach((polygonTemplate) => {\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.nonScalingStroke = true;\n      polygonTemplate.applyOnClones = true;\n      polygonTemplate.strokeOpacity = 0.5;\n\n      const activeState = polygonTemplate.states.create('active');\n\n      const visited = polygonTemplate.states.create('visited');\n      visited.properties.fill = am4core.color('#128C7E');\n\n      const toVisit = polygonTemplate.states.create('toVisit');\n      toVisit.properties.fill = am4core.color('#F05E23');\n\n      const defaultState = polygonTemplate.states.create('default');\n      defaultState.properties.fill = am4core.color('#d9d9d9');\n\n      polygonTemplate.events.on('hit', (ev) => {\n        const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n\n        this.selectedArea = data;\n        // this.selectedName = data.name;\n\n        this.selectedId = data.id;\n\n        if (this.lastSelected !== ev.target) {\n          ev.target.series.chart.zoomToMapObject(ev.target);\n          this.lastSelected = ev.target;\n        }\n      });\n    });\n  }\n\n  setSelectionMode(selectionMode: MapSelectionMode) {\n    this.selectionMode = selectionMode;\n    // Allow only one location to be hightlighted at a time\n    if (this.selectionMode === MapSelectionMode.FILTER) {\n      this.polygonArr.forEach((polygonTemplate) => {\n        polygonTemplate.events.on('doublehit', (ev) => {\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n          this.resetAllLocations();\n          this.changeVisitStatus(data.id, 'visited');\n        });\n      });\n    } else if (this.selectionMode !== MapSelectionMode.NONE) {\n      this.polygonArr.forEach((polygonTemplate) => {\n        polygonTemplate.events.off('doublehit');\n        polygonTemplate.events.on('doublehit', (ev) => {\n          const data = ev.target.dataItem.dataContext as am4maps.MapPolygon;\n          if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n            this.changeVisitStatus(data.id, 'toVisit');\n          } else {\n            this.changeVisitStatus(data.id, 'visited');\n          }\n        });\n      });\n    }\n  }\n\n  zoomToLocation(locationId: string) {\n    for (const series of this.seriesArr) {\n      const result = series.getPolygonById(locationId);\n\n      if (result !== undefined) {\n        this.chart.zoomToMapObject(result);\n        break;\n      }\n    }\n  }\n\n  zoomHome() {\n    this.chart.goHome();\n  }\n\n  resetAllLocations() {\n    this.selectedArr.forEach((location) => {\n      for (const series of this.seriesArr) {\n        const result = series.getPolygonById(location.locationId);\n        if (result !== undefined) {\n          result.setState('default');\n        }\n      }\n    });\n  }\n\n  async changeVisitStatus(locationId: string, status: string) {\n    for (const series of this.seriesArr) {\n      const result = series.getPolygonById(locationId);\n\n      if (result !== undefined) {\n        this.selectedArea = result;\n        break;\n      }\n    }\n\n    const locationInArray = this.selectedArr.find(\n      (d) => d.locationId === locationId\n    );\n    if (locationInArray !== undefined) {\n      const index = this.selectedArr.indexOf(locationInArray, 0);\n      if (index > -1) {\n        this.selectedArr.splice(index, 1);\n        this.selectedArea.setState('default');\n      }\n    } else {\n      if (status === 'visited') {\n        this.selectedArea.setState('visited');\n      } else if (status === 'toVisit') {\n        this.selectedArea.setState('toVisit');\n      }\n      this.selectedArr.push({ locationId, status });\n    }\n  }\n\n  destroyMap() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostImagePage } from './add-post-image.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostImagePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostImagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostImagePageRoutingModule } from './add-post-image-routing.module';\n\nimport { AddPostImagePage } from './add-post-image.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostImagePageRoutingModule,\n    IonicSelectableModule,\n  ],\n  declarations: [AddPostImagePage],\n})\nexport class AddPostImagePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { CameraResultType, Photo, Camera } from '@capacitor/camera';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post-image',\n  templateUrl: './add-post-image.page.html',\n  styleUrls: ['./add-post-image.page.scss'],\n})\nexport class AddPostImagePage implements OnInit {\n  public selectedLocation: { id: string; name: string } = undefined;\n  public postText: string = undefined;\n  public locationOptions: { id: string; name: string }[] = [];\n  public userImage = '../../../assets/UI/clickToUpload.jpg';\n  image: Photo;\n  blob: Blob;\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) {}\n\n  ngOnInit() {\n    this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter((option) => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent;\n    text: string;\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    this.postService\n      .postsNewPostForm(\n        this.postText,\n        'image',\n        this.selectedLocation.id,\n        this.blob\n      )\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          loading.dismiss();\n          this.dismiss();\n        },\n        (err) => {\n          this.error = true;\n          loading.dismiss();\n        }\n      );\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl,\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>Upload Image</h1>\n    <h3>Everyone loves a nice travel related photo!</h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <div>\n            <img\n              (click)=\"getUserImage()\"\n              height=\"300\"\n              [src]=\"userImage\"\n              class=\"rcorners\"\n            />\n          </div>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea\n              [(ngModel)]=\"postText\"\n              rows=\"10\"\n              placeholder=\"Caption*\"\n              maxlength=\"250\"\n              autocapitalize=\"true\"\n              required\n            ></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\"\n            >\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\n        when creating post\n      </div>\n    </div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"post()\"\n        [disabled]=\"!postText && selectedLocation !== undefined\"\n        >Add post</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPostPage } from './add-post.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPostPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPostPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\n\nimport { AddPostPage } from './add-post.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddPostPageRoutingModule,\n    IonicSelectableModule,\n  ],\n  declarations: [AddPostPage],\n})\nexport class AddPostPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { take } from 'rxjs/operators';\nimport { PostService } from 'src/app/backend/clients';\nimport { CreatePostRequest } from 'src/app/backend/clients/model/createPostRequest';\nimport { LocationSelector } from 'src/app/objects/location-json/location.selector';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.page.html',\n  styleUrls: ['./add-post.page.scss'],\n})\nexport class AddPostPage implements OnInit {\n  public selectedLocation: { id: string; name: string } = undefined;\n  public postText: string = undefined;\n  public locationOptions: { id: string; name: string }[] = [];\n  error: boolean;\n\n  constructor(\n    public loadingController: LoadingController,\n    private modalCtrl: ModalController,\n    private selector: LocationSelector,\n    private postService: PostService\n  ) {}\n\n  ngOnInit() {\n    this.locationOptions = this.selector.getAllLocations();\n  }\n\n  filterLocations(text: string) {\n    return this.locationOptions.filter((option) => {\n      return option.name.toLowerCase().indexOf(text) !== -1;\n    });\n  }\n\n  searchLocations(event: {\n    component: IonicSelectableComponent;\n    text: string;\n  }) {\n    const text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n\n    if (!text) {\n      event.component.items = [];\n      event.component.endSearch();\n      return;\n    }\n\n    event.component.items = this.filterLocations(text);\n    event.component.endSearch();\n  }\n\n  async post() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    this.postService\n      .postsNewPostForm(this.postText, 'text', this.selectedLocation.id)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          loading.dismiss();\n          this.dismiss();\n        },\n        (err) => {\n          this.error = true;\n          loading.dismiss();\n        }\n      );\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>Create Post</h1>\n    <h3>\n      Looking for travel advice? Want to share something interesting about a\n      destination? Let's hear it!\n    </h3>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-textarea\n              [(ngModel)]=\"postText\"\n              rows=\"10\"\n              placeholder=\"Travel related content*\"\n              maxlength=\"250\"\n              autocapitalize=\"true\"\n              required\n            ></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item class=\"roundedInput\">\n            <ion-label>Location*</ion-label>\n            <ionic-selectable\n              [(ngModel)]=\"selectedLocation\"\n              [items]=\"locationOptions\"\n              itemValueField=\"id\"\n              itemTextField=\"name\"\n              [canSearch]=\"true\"\n            >\n            </ionic-selectable>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon> Unexpected error\n        when creating post\n      </div>\n    </div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"post()\"\n        [disabled]=\"!postText && !selectedLocation\"\n        >Add post</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarkLocationPage } from './mark-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MarkLocationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MarkLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MarkLocationPageRoutingModule } from './mark-location-routing.module';\n\nimport { MarkLocationPage } from './mark-location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MarkLocationPageRoutingModule,\n  ],\n  declarations: [MarkLocationPage],\n})\nexport class MarkLocationPageModule {}\n","import { Component, Input, NgZone } from '@angular/core';\nimport { AccountsService, MarkLocationsRequest } from 'src/app/backend/clients';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { Map } from 'src/app/objects/map';\nimport { ModalController } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'mark-location',\n  templateUrl: './mark-location.page.html',\n  styleUrls: ['./mark-location.page.scss'],\n})\nexport class MarkLocationPage {\n  // Data passed in by componentProps\n  @Input() selectionMode: MapSelectionMode;\n  public locationRequest = {\n    locations: {},\n  } as MarkLocationsRequest;\n  private map: Map;\n  public titleTextVisited = 'Where have you visited?';\n  public titleTextToVisit = 'Bucketlist';\n  public subtitleTextVisited = `Show your friends (and yourself) where you've been!`;\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\n  public displayVisitedText = true;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private zone: NgZone,\n    private accountService: AccountsService\n  ) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'mark-map');\n    if (this.selectionMode === MapSelectionMode.TO_VISIT) {\n      this.displayVisitedText = false;\n    }\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  mapLocationsToRequest() {\n    this.map.selectedArr.forEach((location) => {\n      this.locationRequest.locations[location.locationId] = location.status;\n    });\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n\n  onSubmit() {\n    this.mapLocationsToRequest();\n    this.accountService\n      .accountUpdateLocationsPost(this.locationRequest)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          this.dismiss();\n        }\n        // (error) => {\n        //   this.hasError = true;\n        //   this.error = 'An unexpected error has occurred.';\n        // }\n      );\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\n    <h3>\n      Click a location on the map to zoom to it. Double click the location to\n      select/deselect it.\n    </h3>\n    <div id=\"mark-map\" class=\"chartdiv\"></div>\n    <div class=\"button-div\">\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"onSubmit()\"\n        >Update my map</ion-button\n      >\n      <ion-button\n        class=\"submit-button\"\n        expand=\"block\"\n        type=\"submit\"\n        (click)=\"dismiss()\"\n        >Cancel</ion-button\n      >\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPageRoutingModule } from './add-routing.module';\n\nimport { AddPage } from './add.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, AddPageRoutingModule],\n  declarations: [AddPage],\n})\nexport class AddPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { ModalController } from '@ionic/angular';\nimport { MarkLocationPage } from '../../mark-location/mark-location.page';\nimport { AddPostPage } from '../../add-post/add-post.page';\nimport { AddPostImagePage } from '../../add-post-image/add-post-image.page';\n\n@Component({\n  selector: 'add-modal',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage {\n  constructor(public router: Router, private modalCtrl: ModalController) {}\n\n  async markLocationsToVisit() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.TO_VISIT,\n      },\n    });\n    return await modal.present();\n  }\n\n  async markVisitedLocations() {\n    const modal = await this.modalCtrl.create({\n      component: MarkLocationPage,\n      componentProps: {\n        selectionMode: MapSelectionMode.VISITED,\n      },\n    });\n    return await modal.present();\n  }\n\n  async addNewPost() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostPage,\n      componentProps: {},\n    });\n    return await modal.present();\n  }\n\n  async addNewImage() {\n    const modal = await this.modalCtrl.create({\n      component: AddPostImagePage,\n      componentProps: {},\n    });\n    return await modal.present();\n  }\n}\n","<ion-content lines=\"none\" [scrollY]=\"true\">\n  <ion-item lines=\"none\"><b>Mark Location</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/visitedIcon.svg\" />\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markVisitedLocations()\"\n          ><b>Visited</b></ion-col\n        >\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/toVisitIcon.svg\" />\n        </ion-col>\n        <ion-col size=\"10\" (click)=\"markLocationsToVisit()\"\n          ><b>Wants to visit</b></ion-col\n        >\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-item lines=\"none\"><b>Add Post</b></ion-item>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/pictureIcon.svg\" />\n        </ion-col>\n        <ion-col (click)=\"addNewImage()\" size=\"10\"><b>Image</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n  <ion-card>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <img src=\"../../../../assets/UI/postIcon.svg\" />\n        </ion-col>\n        <ion-col (click)=\"addNewPost()\" size=\"10\"><b>Post</b></ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { AccountsService } from 'src/app/backend/clients/api/accounts.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n  userEmail = '';\n\n  constructor(\n    private accountService: AccountsService,\n    private modalController: ModalController,\n    private loadingController: LoadingController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async closeModal() {\n    await this.modalController.dismiss();\n  }\n\n  async onSubmit() {\n    this.accountService.PasswordRecover(this.userEmail).then(() =>\n      this.closeModal()\n    );\n  }\n}\n","<ion-content [scrollY]=\"false\">\n  <div class=\"center-any-object\">\n    <h3 >Reset Password</h3>\n  </div>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-item class=\"roundedInput\">\n          <ion-input\n            autocapitalize=\"true\"\n            placeholder=\"Email\"\n            type=\"email\"\n            [(ngModel)]=\"userEmail\"\n            required\n          ></ion-input>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button class=\"reset-button\" expand=\"block\" (click)=\"onSubmit()\"\n          >Submit</ion-button\n        >\n      </ion-col>\n      <ion-col>\n        <ion-button\n          color=\"medium\"\n          expand=\"block\"\n          (click)=\"closeModal()\"\n          >Close</ion-button\n        >\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapFilterPage } from './map-filter.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapFilterPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapFilterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapFilterPageRoutingModule } from './map-filter-routing.module';\n\nimport { MapFilterPage } from './map-filter.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MapFilterPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [MapFilterPage],\n})\nexport class MapFilterPageModule {}\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { Map } from '../../../objects/map';\nimport { MapSelectionMode } from '../../../objects/enums/map-selection-mode';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'map-filter',\n  templateUrl: './map-filter.page.html',\n  styleUrls: ['./map-filter.page.scss'],\n})\nexport class MapFilterPage {\n  private map: Map;\n  public selectionMode: MapSelectionMode = MapSelectionMode.FILTER;\n  public filter = '';\n  public selectedLocation: string;\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private zone: NgZone,\n    private navParams: NavParams\n  ) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'filter-map');\n    this.filter = this.navParams.data.filter;\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  async restFilter() {\n    this.filter = '';\n    await this.closeModal();\n  }\n\n  async filterSubmit() {\n    if (this.map.selectedArr.length > 0) {\n      this.filter = this.map.selectedArr[0].locationId;\n    }\n    await this.closeModal();\n  }\n\n  async closeModal() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n    const onClosedData = this.filter;\n    await this.modalController.dismiss(onClosedData);\n  }\n}\n","<ion-content [scrollY]=\"false\">\n  <ion-searchbar spellcheck=\"true\" showCancelButton=\"true\"></ion-searchbar>\n  <div id=\"filter-map\" class=\"chartdiv\" onload=\"onLoad()\"></div>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-button color=\"medium\" expand=\"block\" (click)=\"restFilter()\"\n          >Reset</ion-button\n        >\n      </ion-col>\n      <ion-col>\n        <ion-button\n          class=\"filter-button\"\n          expand=\"block\"\n          (click)=\"filterSubmit()\"\n          >Filter</ion-button\n        >\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, SearchPageRoutingModule],\n  declarations: [SearchPage],\n})\nexport class SearchPageModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from 'src/app/backend/clients';\nimport { take } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { SlimUserResponse } from 'src/app/backend/clients/model/slimUserResponse';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit {\n  constructor(\n    public viewCtrl: ModalController,\n    public userService: UserService,\n    private zone: NgZone,\n    private router: Router\n  ) {}\n\n  people: BehaviorSubject<SlimUserResponse[]> = new BehaviorSubject([]);\n  searchQuery = '';\n\n  ngOnInit() {}\n\n  search() {\n    this.userService\n      .userSearchQueryGet(this.searchQuery)\n      .pipe(take(1))\n      .subscribe((users) => {\n        this.people.next(users);\n      });\n  }\n\n  goToProfile(user: SlimUserResponse) {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: user.id,\n      },\n    };\n    const onClosedData = user.id;\n    this.viewCtrl.dismiss(onClosedData);\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n","<ion-toolbar>\n  <ion-buttons slot=\"end\">\n    <ion-button large (click)=\"dismiss()\" slot=\"end\">\n      <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n</ion-toolbar>\n\n<ion-searchbar\n  spellcheck=\"true\"\n  (search)=\"search()\"\n  [(ngModel)]=\"searchQuery\"\n></ion-searchbar>\n<ion-content>\n  <ion-virtual-scroll [items]=\"people | async\">\n    <ion-card\n      (click)=\"goToProfile(item)\"\n      *virtualItem=\"let item; let itemBounds = bounds;\"\n    >\n      <ion-grid class=\"search-grid\">\n        <ion-row>\n          <ion-col class=\"ion-align-self-center\">\n            <ion-row class=\"ion-align-items-center\">\n              <ion-col>\n                <img [src]=\"item.avi\" class=\"user-pic img-center\" />\n              </ion-col>\n            </ion-row>\n          </ion-col>\n          <ion-col size=\"1.5\" class=\"ion-align-self-center\">\n            <ion-row>\n              <ion-col>\n                <ion-text color=\"dark\"\n                  >{{item.firstName}} {{item.lastName}}</ion-text\n                >\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <ion-text>{{item.residenceLocation}}</ion-text>\n              </ion-col>\n            </ion-row>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-card>\n  </ion-virtual-scroll>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserSettingsPage } from './user-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserSettingsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserSettingsPageRoutingModule } from './user-settings-routing.module';\n\nimport { UserSettingsPage } from './user-settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UserSettingsPageRoutingModule,\n  ],\n  declarations: [UserSettingsPage],\n})\nexport class UserSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Photo, Camera, CameraResultType } from '@capacitor/camera';\nimport { LoadingController, ModalController, NavParams } from '@ionic/angular';\nimport { take } from 'rxjs/operators';\nimport {\n  AccountsService,\n  UserResponse,\n} from 'src/app/backend/clients';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.page.html',\n  styleUrls: ['./user-settings.page.scss'],\n})\nexport class UserSettingsPage implements OnInit {\n  userImage = '../../../assets/UI/profilePicUpload.svg';\n\n  aboutForm: FormGroup;\n\n  image: Photo;\n\n  blob: Blob = undefined;\n\n  user: UserResponse;\n\n  constructor(\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    private navParams: NavParams,\n    private modalController: ModalController,\n    private accountService: AccountsService,\n  ) {\n    this.user = this.navParams.data.user;\n    this.userImage = this.user.avi;\n  }\n\n  ngOnInit() {\n    const birthPlace = new FormControl('');\n    const residence = new FormControl('');\n    const education = new FormControl('');\n    const title = new FormControl('');\n    this.aboutForm = new FormGroup({\n      birthPlace,\n      residence,\n      education,\n      title,\n    });\n  }\n\n  async onSubmit() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n    });\n    await loading.present();\n\n    const title = this.aboutForm.controls.title.value === ''\n      ? this.user.title\n      : this.aboutForm.controls.title.value;\n    const education = this.aboutForm.controls.education.value === ''\n      ? this.user.education\n      : this.aboutForm.controls.education.value;\n    const birthPlace = this.aboutForm.controls.birthPlace.value === ''\n      ? this.user.birthLocation\n      : this.aboutForm.controls.birthPlace.value;\n    const residence = this.aboutForm.controls.residence.value === ''\n      ? this.user.residenceLocation\n      : this.aboutForm.controls.residence.value;\n\n    // todo create a forkjoin or something here to make these run together\n    this.accountService\n      .accountUpdatePost(\n        this.user.firstname,\n        this.user.lastname,\n        title,\n        education,\n        birthPlace,\n        residence,\n      )\n      .pipe(take(1))\n      .subscribe(async () => {\n        if (this.blob !== undefined) {\n          this.accountService\n            .accountUpdateProfileImagePost(this.blob)\n            .pipe(take(1))\n            .subscribe(() => {});\n        }\n        await loading.dismiss();\n        this.dismiss();\n      });\n  }\n\n  b64toBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i += 1) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    this.blob = new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  async getUserImage() {\n    this.image = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl,\n    });\n    // image.webPath will contain a path that can be set as an image src.\n    // You can access the original file using image.path, which can be\n    // passed to the Filesystem API to read the raw data of the image,\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n    const imageUrl = this.image.dataUrl;\n    // Can be set to the src of an image now\n    this.userImage = imageUrl;\n    this.b64toBlob(this.image.dataUrl);\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n\n  async logout() {\n    await this.accountService.logout();\n    this.dismiss();\n  }\n}\n","<ion-content no-bounce>\n  <div class=\"splash\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"secondary\">\n          <ion-button color=\"dark\" (click)=\"dismiss()\">\n            <ion-icon name=\"arrow-back\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button color=\"dark\" (click)=\"logout()\">\n            <ion-icon name=\"log-out-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <h1>Update profile</h1>\n    <form [formGroup]=\"aboutForm\" (ngSubmit)=\"onSubmit()\">\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"3\">\n            <ion-avatar>\n              <img (click)=\"getUserImage()\" [src]=\"userImage\" />\n            </ion-avatar>\n          </ion-col>\n          <ion-col>\n            <h3>Change your profile pic</h3>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Birthplace</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.birthLocation\"\n                type=\"text\"\n                formControlName=\"birthPlace\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Current Residence</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.residenceLocation\"\n                type=\"text\"\n                formControlName=\"residence\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Education</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.education\"\n                type=\"text\"\n                formControlName=\"education\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"bottomRow\">\n          <ion-col>\n            <ion-item class=\"roundedInput\">\n              <ion-label position=\"floating\">Title or Employment</ion-label>\n              <ion-input\n                autocapitalize=\"true\"\n                [placeholder]=\"user.title\"\n                type=\"text\"\n                formControlName=\"title\"\n                required\n              ></ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n      <div class=\"button-div\">\n        <ion-button class=\"submit-button\" expand=\"block\" type=\"submit\"\n          >Update</ion-button\n        >\n      </div>\n    </form>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserTimelinePage } from './user-timeline.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserTimelinePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserTimelinePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserTimelinePageRoutingModule } from './user-timeline-routing.module';\n\nimport { UserTimelinePage } from './user-timeline.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    UserTimelinePageRoutingModule,\n  ],\n  declarations: [UserTimelinePage],\n})\nexport class UserTimelinePageModule {}\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport {\n  IonInfiniteScroll,\n  LoadingController,\n  ModalController,\n  NavParams,\n} from '@ionic/angular';\nimport { SearchPage } from '../modals/search/search.page';\nimport { MapFilterPage } from '../modals/map-filter/map-filter.page';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AccountsService } from '../../backend/clients/api/accounts.service';\nimport { PostService } from 'src/app/backend/clients';\nimport { PostApi } from 'src/app/backend/clients/model/postApi';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'user-timeline',\n  templateUrl: './user-timeline.page.html',\n  styleUrls: ['./user-timeline.page.scss'],\n})\nexport class UserTimelinePage {\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\n  posts: PostApi[] = [];\n  pageNumber = 1;\n  morePages = false;\n  filter = '';\n  selectedUserId = '';\n\n  constructor(\n    public modalController: ModalController,\n    private loadingController: LoadingController,\n    private accountService: AccountsService,\n    private postService: PostService,\n    private navParams: NavParams,\n    private zone: NgZone,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() {\n    this.selectedUserId = this.navParams.data.userId;\n    this.postService\n      .postsPageGet(this.pageNumber, this.filter, this.selectedUserId)\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n        this.posts = res.items;\n      });\n  }\n\n  getPosts(event?: any) {\n    if (this.morePages) {\n      this.postService\n        .postsPageGet(this.pageNumber + 1, this.filter, this.selectedUserId)\n        .pipe(take(1))\n        .subscribe((res) => {\n          this.morePages = res.hasNextPage;\n          this.pageNumber = res.pageIndex;\n\n          // TODO The posts shouldn't be overwritten here but rather appended... not working though\n          if (this.posts.length === 0) {\n            this.posts = [];\n          } else {\n            const oldposts = this.posts;\n            this.posts = [];\n            const oldResLen = oldposts.length;\n            for (let i = 0; i < oldResLen; i++) {\n              this.posts.push(oldposts[i]);\n            }\n          }\n          const resLen = res.items.length;\n          for (let i = 0; i < resLen; i++) {\n            this.posts.push(res.items[i]);\n          }\n          // this.posts = res.items;\n          if (event) {\n            event.target.complete();\n          }\n        });\n    } else {\n      this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\n    }\n  }\n\n  refreshPosts(event?: any) {\n    this.postService\n      .postsPageGet(1, this.filter, this.selectedUserId)\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.morePages = res.hasNextPage;\n        this.pageNumber = res.pageIndex;\n        this.posts = res.items;\n        if (event) {\n          event.target.complete();\n        }\n      });\n  }\n\n  async presentSearchModal() {\n    const modal = await this.modalController.create({\n      component: SearchPage,\n      componentProps: {},\n      showBackdrop: true,\n      cssClass: 'search-modal',\n    });\n    return await modal.present();\n  }\n\n  openProfile() {\n    const navigationExtras: NavigationExtras = {\n      replaceUrl: true,\n      skipLocationChange: true,\n      state: {\n        userId: this.accountService.getUserId(),\n      },\n    };\n    this.zone.run(() => {\n      this.router.navigateByUrl('/user-profile', navigationExtras);\n    });\n  }\n\n  async presentMapFilter() {\n    const modal = await this.modalController.create({\n      component: MapFilterPage,\n      showBackdrop: true,\n      cssClass: 'filter-modal',\n      componentProps: {\n        filter: this.filter,\n      },\n    });\n\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned !== null) {\n        this.filter = dataReturned.data;\n        this.refreshPosts();\n        await this.loadingController.dismiss();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n}\n","<ion-header style=\"background-color: #128c7e\" class=\"ion-no-border\">\n  <ion-toolbar color=\"#128C7E\" class=\"ion-no-border\">\n    <ion-buttons slot=\"start\">\n      <ion-button slot=\"start\" large (click)=\"dismiss()\">\n        <ion-icon class=\"close-icon\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button slot=\"end\" (click)=\"presentSearchModal()\">\n        <img class=\"img-center\" src=\"../../../assets/UI/search-outline.svg\" />\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"false\" color=\"light\">\n  <ion-refresher #refresherRef slot=\"fixed\" (ionRefresh)=\"refreshPosts($event)\">\n    <ion-refresher-content\n      pullingText=\"Pull to refresh\"\n      refreshingSpinner=\"circles\"\n      refreshingText=\"Refreshing...\"\n    >\n    </ion-refresher-content>\n  </ion-refresher>\n  <post [posts]=\"posts\"></post>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getPosts($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"circles\"\n      loadingText=\"Getting more posts...\"\n    >\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n</ion-content>\n<ion-fab class=\"map-filter-fab\" vertical=\"bottom\">\n  <ion-button fill=\"clear\" (click)=\"presentMapFilter()\">\n    <img src=\"../../assets/UI/FilterClosed.svg\" />\n  </ion-button>\n</ion-fab>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateAgo',\n})\nexport class DateAgoPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value) {\n      const now = new Date().toUTCString();\n      const seconds = Math.abs(\n        (new Date(now).getTime() - new Date(value + 'Z').getTime()) / 1000\n      ); // appending Z lets the date know its UTC\n\n      if (seconds < 29) {\n        // less than 30 seconds ago will show as 'Just now'\n        return 'Just now';\n      }\n      const intervals = {\n        day: 86400,\n        hour: 3600,\n        minute: 60,\n        second: 1,\n      };\n      let counter;\n      // tslint:disable-next-line: forin\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n\n        if (Math.floor(seconds / 86400) > 1) {\n          const date = new Date(value);\n          const month = date.toLocaleString('default', { month: 'long' });\n          return `${month} ${date.getDate()}`;\n        }\n\n        if (counter > 0) {\n          if (counter === 1) {\n            return counter + ' ' + i + ' ago'; // singular (1 hour ago)\n          } else {\n            return counter + ' ' + i + 's ago'; // plural (2 hours ago)\n          }\n        }\n      }\n    }\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: any[] = [];\n  public dis: boolean;\n  constructor() {}\n\n  add(modal: any) {\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\n    modal.present();\n  }\n\n  close(id: string) {\n    const modal: any = this.modals.filter((x) => x.id === id)[0];\n    modal.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { PostComponent } from '../components/post/post.component';\nimport { CardFlipComponent } from '../components/card-flip/card-flip.component';\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [PostComponent, CardFlipComponent, DateAgoPipe],\n  providers: [],\n  exports: [PostComponent, CardFlipComponent, DateAgoPipe],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDpx-hQIOXVBbNfGRaFQQTx-vzVwKwpA4Y',\n    authDomain: 'visit-4efb7.firebaseapp.com',\n    projectId: 'visit-4efb7',\n    storageBucket: 'visit-4efb7.appspot.com',\n    messagingSenderId: '227659578598',\n    appId: '1:227659578598:web:94cdae4520ab27359d8f27',\n    measurementId: 'G-P6HNG7BB8S',\n  },\n};\n\nexport const BASE_PATH = 'https://visit-service.azurewebsites.net';\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n\n// Call the element loader after the platform has been bootstrapped\ndefineCustomElements(window);\n"],"sourceRoot":"webpack:///"}
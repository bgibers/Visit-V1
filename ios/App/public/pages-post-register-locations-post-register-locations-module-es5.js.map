{"version":3,"sources":["webpack:///src/app/pages/post-register-locations/post-register-locations-routing.module.ts","webpack:///src/app/pages/post-register-locations/post-register-locations.module.ts","webpack:///src/app/pages/post-register-locations/post-register-locations.page.ts","webpack:///src/app/pages/post-register-locations/post-register-locations.page.html"],"names":["routes","path","component","PostRegisterLocationsPageRoutingModule","forChild","imports","exports","PostRegisterLocationsPageModule","declarations","PostRegisterLocationsPage","router","accountService","zone","route","selectionMode","VISITED","titleTextVisited","titleTextToVisit","subtitleTextVisited","subtitleTextToVisit","displayVisitedText","locationRequest","locations","registration","hasError","error","map","addMapToDiv","destroyMap","zoomHome","setSelectionMode","TO_VISIT","selectedArr","forEach","location","locationId","status","mapLocationsToRequest","accountUpdateLocationsPost","pipe","subscribe","res","navigationExtras","replaceUrl","run","navigateByUrl","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-post-register-locations-post-register-locations-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PostRegisterLocationsPage } from './post-register-locations.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PostRegisterLocationsPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PostRegisterLocationsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PostRegisterLocationsPageRoutingModule } from './post-register-locations-routing.module';\r\n\r\nimport { PostRegisterLocationsPage } from './post-register-locations.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PostRegisterLocationsPageRoutingModule,\r\n  ],\r\n  declarations: [PostRegisterLocationsPage],\r\n})\r\nexport class PostRegisterLocationsPageModule {}\r\n","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { Map } from '../../objects/map';\nimport { MapSelectionMode } from 'src/app/objects/enums/map-selection-mode';\nimport { NavigationExtras, Router, ActivatedRoute } from '@angular/router';\nimport { JwtToken, AccountsService } from 'src/app/backend/clients';\nimport { MarkLocationsRequest } from 'src/app/backend/clients/model/markLocationsRequest';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'post-register-locations',\n  templateUrl: './post-register-locations.page.html',\n  styleUrls: ['./post-register-locations.page.scss'],\n})\nexport class PostRegisterLocationsPage {\n  public selectionMode: MapSelectionMode = MapSelectionMode.VISITED;\n  public titleTextVisited = 'Where have you visited?';\n  public titleTextToVisit = 'Bucketlist';\n  public subtitleTextVisited = `We'll get to where you want to go in a moment,\n  but first let\\'s show your friends (and yourself) where you've been!`;\n  public subtitleTextToVisit = `Mark down every and any place you find interesting and want to checkout someday, let's make it happen!`;\n  public displayVisitedText = true;\n  public token: JwtToken;\n  public locationRequest = {\n    locations: {},\n    registration: true\n  } as MarkLocationsRequest;\n  private map: Map;\n  hasError = false;\n  error = '';\n\n  constructor(\n    public router: Router,\n    private accountService: AccountsService,\n    private zone: NgZone,\n    private route: ActivatedRoute\n  ) {}\n\n  ionViewWillEnter() {\n    this.map = new Map(this.zone);\n    this.map.addMapToDiv(this.selectionMode, 'register-map');\n  }\n\n  ionViewDidLeave() {\n    this.map.destroyMap();\n  }\n\n  switchMode() {\n    this.map.zoomHome();\n    if (this.selectionMode === MapSelectionMode.VISITED) {\n      this.map.setSelectionMode(MapSelectionMode.TO_VISIT);\n      this.displayVisitedText = false;\n      this.selectionMode = MapSelectionMode.TO_VISIT;\n    } else {\n      this.map.setSelectionMode(MapSelectionMode.VISITED);\n      this.displayVisitedText = true;\n      this.selectionMode = MapSelectionMode.VISITED;\n    }\n  }\n\n  mapLocationsToRequest() {\n    this.map.selectedArr.forEach((location) => {\n      this.locationRequest.locations[location.locationId] = location.status;\n    });\n  }\n\n  onSubmit() {\n    this.mapLocationsToRequest();\n    this.accountService\n      .accountUpdateLocationsPost(this.locationRequest)\n      .pipe(take(1))\n      .subscribe(\n        (res) => {\n          const navigationExtras: NavigationExtras = {\n            replaceUrl: false\n          };\n          this.zone.run(() => {\n            this.router.navigateByUrl('/tab1', navigationExtras);\n          });\n        },\n        (error) => {\n          this.hasError = true;\n          this.error = 'An unexpected error has occurred.';\n        }\n      );\n  }\n}\n","<ion-content no-bounce>\r\n  <div class=\"splash\">\r\n    <ion-row class=\"ion-align-items-baseline\">\r\n      <ion-col class=\"ion-justify-content-start\">\r\n        <ion-buttons>\r\n          <ion-back-button defaultHref=\"/post-register-about\"  style=\"color: beige;\"></ion-back-button>\r\n        </ion-buttons>\r\n      </ion-col>  \r\n    </ion-row> \r\n    <h1>{{displayVisitedText ? titleTextVisited : titleTextToVisit}}</h1>\r\n    <h3>{{displayVisitedText ? subtitleTextVisited : subtitleTextToVisit}}</h3>\r\n    <h4>\r\n      Click a location on the map to zoom to it. Double click the location to\r\n      select/deselect it.\r\n    </h4>\r\n    <div id=\"register-map\" class=\"chartdiv\"></div>\r\n    <div class=\"button-div\">\r\n      <ion-button\r\n        *ngIf=\"displayVisitedText\"\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"switchMode()\"\r\n        >Next</ion-button\r\n      >\r\n      <ion-button\r\n        *ngIf=\"!displayVisitedText\"\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"switchMode()\"\r\n        >Back</ion-button\r\n      >\r\n      <ion-button\r\n        *ngIf=\"!displayVisitedText\"\r\n        class=\"submit-button\"\r\n        expand=\"block\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        >I'm Done!</ion-button\r\n      >\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n"]}